"""
Apply transformations to file with image type
"""
directive @resizeImage(
  crop: ResizeImageDirectiveCropOptions
  flip: ResizeImageDirectiveFlipOptions
  progressive: Boolean
  resize: ResizeImageDirectiveResizeOptions
  rotate: Int
) on FIELD

enum AggregationFunctionType {
  ANY_VALUE
  AVG
  COUNT
  GROUP_CONCAT
  MAX
  MIN
  STDDEV_POP
  STDDEV_SAMP
  SUM
  VAR_POP
  VAR_SAMP
}

type ApiToken {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  id: ID
  name: String
  roles(
    after: String
    before: String
    filter: RoleFilter
    first: Int
    groupBy: RoleGroupBy
    last: Int
    orderBy: [RoleOrderBy]
    skip: Int
    sort: [RoleSort!]
  ): RoleListResponse
  updatedAt: DateTime
}

"""
ApiTokens create input
"""
input ApiTokenCreateInput {
  name: String!
  roles: ApiTokensRolesRelationInput
}

"""
ApiTokens delete input
"""
input ApiTokenDeleteInput {
  force: Boolean
  id: ID
}

input ApiTokenFilter {
  AND: [ApiTokenFilter!]
  OR: [ApiTokenFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  id: IDPredicate
  name: StringPredicate
  roles: RoleRelationFilter
  token: StringPredicate
  updatedAt: DateTimePredicate
}

input ApiTokenGroupBy {
  first: Int
  having: Having
  last: Int
  query: ApiTokenGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input ApiTokenGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  id: [GroupByField!]
  name: [GroupByField!]
  roles: RoleGroupByQuery
  updatedAt: [GroupByField!]
}

input ApiTokenKeyFilter {
  id: ID
  name: String
}

"""
ApiTokenListResponse output
"""
type ApiTokenListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [ApiToken!]!
}

"""
ApiTokenManyResponse output
"""
type ApiTokenManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [ApiToken!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum ApiTokenOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  token_ASC
  token_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
ApiTokens subscription payload
"""
type ApiTokenPayload {
  mutation: MutationType!
  node: ApiToken
  previousValues: ApiToken
  updatedFields: [String]
}

input ApiTokenRelationFilter {
  every: ApiTokenFilter
  none: ApiTokenFilter
  some: ApiTokenFilter
}

"""
API Token Response
"""
type ApiTokenResponse {
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  id: ID
  name: String
  roles(
    after: String
    before: String
    filter: RoleFilter
    first: Int
    groupBy: RoleGroupBy
    last: Int
    orderBy: [RoleOrderBy]
    skip: Int
    sort: [RoleSort!]
  ): RoleListResponse
  token: String!
  updatedAt: DateTime
}

input ApiTokenSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

"""
ApiTokens subscription filter
"""
input ApiTokenSubscriptionFilter {
  mutation_in: [MutationType]
  node: ApiTokenFilter
  updatedFields: UpdatedFieldsFilter
}

"""
ApiTokens update input
"""
input ApiTokenUpdateByFilterInput {
  name: [UpdateByFilterStringInput]
  token: [UpdateByFilterStringInput]
}

"""
ApiTokens update input
"""
input ApiTokenUpdateInput {
  id: ID
  name: String
  roles: ApiTokensRolesUpdateRelationInput
}

input ApiToken_PermissionFilter {
  AND: [ApiToken_PermissionFilter!]
  OR: [ApiToken_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  id: IDPredicate
  name: StringPredicate
  roles: Role_PermissionRelationFilter
  token: StringPredicate
  updatedAt: DateTimePredicate
}

input ApiToken_PermissionRelationFilter {
  every: ApiToken_PermissionFilter
  none: ApiToken_PermissionFilter
  some: ApiToken_PermissionFilter
}

"""
ApiTokens relation input
"""
input ApiTokensRolesRelationInput {
  connect: [RoleKeyFilter!]
  create: [ApiTokens_RoleCreateInput]
}

"""
ApiTokens relation input
"""
input ApiTokensRolesUpdateRelationInput {
  connect: [RoleKeyFilter!]
  create: [ApiTokens_RoleCreateInput]
  disconnect: [RoleKeyFilter!]
  reconnect: [RoleKeyFilter!]
  update: [ApiTokens_RoleUpdateInput]
}

"""
Roles create input from apiTokens
"""
input ApiTokens_RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""
Roles update input from apiTokens
"""
input ApiTokens_RoleUpdateInput {
  data: RoleUpdateInput!
  filter: RoleKeyFilter
}

"""
Application
"""
type Application {
  appType: String!
  createdAt: DateTime!
  description: String
  displayName: String
  id: ID!
  name: String!
  status: ApplicationStatusEnum!
}

"""
ApplicationDeleteMutationInput
"""
input ApplicationDeleteMutationInput {
  force: Boolean
  id: String!
}

"""
Application install input
"""
input ApplicationInstallInput {
  appType: String!
  description: String
  displayName: String
  name: String!
  status: ApplicationStatusEnum = INACTIVE
}

"""
ApplicationListResponse output
"""
type ApplicationListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [Application!]!
}

"""
Application Status Enum
"""
enum ApplicationStatusEnum {
  ACTIVE
  INACTIVE
}

"""
Application update input
"""
input ApplicationUpdateInput {
  description: String
  displayName: String
  id: String!
  name: String
  status: ApplicationStatusEnum
}

"""
Async Session
"""
type AsyncSession {
  sessionId: String!
}

type AsyncSessionStatusResponse {
  message: String
  status: String!
}

"""
Auth response
"""
type Auth {
  accessToken: String
  accessTokenExpiresAt: Int
  idToken: String
  idTokenExpiresAt: Int
  refreshToken: String
}

type AuthenticationProfile {
  _description: String
  attributes: AuthenticationProfileAttributes
  audiences: [String]
  clientId: String
  createdAt: DateTime
  createdBy: User
  databaseName: String
  deletedAt: Int
  domain: String
  id: ID
  managementDomain: String
  name: String
  roles(
    after: String
    before: String
    filter: RoleFilter
    first: Int
    groupBy: RoleGroupBy
    last: Int
    orderBy: [RoleOrderBy]
    skip: Int
    sort: [RoleSort!]
  ): RoleListResponse
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean
  type: String
  updatedAt: DateTime
}

"""
Authentication Profile Attributes
"""
union AuthenticationProfileAttributes = CognitoAuthProfileAttributes

"""
Authentication profile connection options
"""
type AuthenticationProfileConnectionOptions {
  facebook: FacebookOptions
  github: GithubOptions
  google: GoogleOptions
}

"""
Authentication profile connection options input
"""
input AuthenticationProfileConnectionsOptionsInput {
  facebook: FacebookOptionsInput
  github: GithubOptionsInput
  google: GoogleOptionsInput
}

"""
AuthenticationProfiles create input
"""
input AuthenticationProfileCreateInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  managementDomain: String
  name: String!
  roles: AuthenticationProfilesRolesRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean = false
  type: String = "8BASE"
}

"""
AuthenticationProfiles create many input
"""
input AuthenticationProfileCreateManyInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  managementDomain: String
  name: String!
  roles: AuthenticationProfilesRolesManyRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean = false
  type: String = "8BASE"
}

"""
AuthenticationProfiles delete input
"""
input AuthenticationProfileDeleteInput {
  force: Boolean
  id: ID
}

input AuthenticationProfileFilter {
  AND: [AuthenticationProfileFilter!]
  OR: [AuthenticationProfileFilter!]
  _fullText: String
  clientId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: UserFilter
  databaseName: StringPredicate
  deletedAt: IntPredicate
  domain: StringPredicate
  id: IDPredicate
  managementDomain: StringPredicate
  name: StringPredicate
  roles: RoleRelationFilter
  secret: StringPredicate
  selfSignUpEnabled: BoolPredicate
  type: StringPredicate
  updatedAt: DateTimePredicate
}

input AuthenticationProfileGroupBy {
  first: Int
  having: Having
  last: Int
  query: AuthenticationProfileGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input AuthenticationProfileGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  audiences: [GroupByField!]
  clientId: [GroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  databaseName: [GroupByField!]
  domain: [GroupByField!]
  id: [GroupByField!]
  managementDomain: [GroupByField!]
  name: [GroupByField!]
  roles: RoleGroupByQuery
  secret: [GroupByField!]
  selfSignUpEmailDomains: [GroupByField!]
  selfSignUpEnabled: [GroupByField!]
  type: [GroupByField!]
  updatedAt: [GroupByField!]
}

input AuthenticationProfileKeyFilter {
  id: ID
  name: String
}

"""
AuthenticationProfileListResponse output
"""
type AuthenticationProfileListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [AuthenticationProfile!]!
}

"""
AuthenticationProfileManyResponse output
"""
type AuthenticationProfileManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [AuthenticationProfile!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum AuthenticationProfileOrderBy {
  clientId_ASC
  clientId_DESC
  createdAt_ASC
  createdAt_DESC
  databaseName_ASC
  databaseName_DESC
  deletedAt_ASC
  deletedAt_DESC
  domain_ASC
  domain_DESC
  id_ASC
  id_DESC
  managementDomain_ASC
  managementDomain_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  selfSignUpEnabled_ASC
  selfSignUpEnabled_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
AuthenticationProfiles subscription payload
"""
type AuthenticationProfilePayload {
  mutation: MutationType!
  node: AuthenticationProfile
  previousValues: AuthenticationProfile
  updatedFields: [String]
}

input AuthenticationProfileRelationFilter {
  every: AuthenticationProfileFilter
  none: AuthenticationProfileFilter
  some: AuthenticationProfileFilter
}

input AuthenticationProfileSort {
  clientId: SortOrder
  createdAt: SortOrder
  createdBy: UserSort
  databaseName: SortOrder
  deletedAt: SortOrder
  domain: SortOrder
  id: SortOrder
  managementDomain: SortOrder
  name: SortOrder
  secret: SortOrder
  selfSignUpEnabled: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

"""
AuthenticationProfiles subscription filter
"""
input AuthenticationProfileSubscriptionFilter {
  mutation_in: [MutationType]
  node: AuthenticationProfileFilter
  updatedFields: UpdatedFieldsFilter
}

"""
AuthenticationProfiles update input
"""
input AuthenticationProfileUpdateByFilterInput {
  audiences: [UpdateByFilterListStringInput]
  clientId: [UpdateByFilterStringInput]
  databaseName: [UpdateByFilterStringInput]
  domain: [UpdateByFilterStringInput]
  managementDomain: [UpdateByFilterStringInput]
  name: [UpdateByFilterStringInput]
  secret: [UpdateByFilterStringInput]
  selfSignUpEmailDomains: [UpdateByFilterListStringInput]
  selfSignUpEnabled: [UpdateByFilterBooleanSwitchInput]
  type: [UpdateByFilterStringInput]
}

"""
AuthenticationProfiles update input
"""
input AuthenticationProfileUpdateInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  id: ID
  managementDomain: String
  name: String
  roles: AuthenticationProfilesRolesUpdateRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean
  type: String
}

input AuthenticationProfile_PermissionFilter {
  AND: [AuthenticationProfile_PermissionFilter!]
  OR: [AuthenticationProfile_PermissionFilter!]
  _fullText: String
  clientId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  databaseName: StringPredicate
  deletedAt: IntPredicate
  domain: StringPredicate
  id: IDPredicate
  managementDomain: StringPredicate
  name: StringPredicate
  roles: Role_PermissionRelationFilter
  secret: StringPredicate
  selfSignUpEnabled: BoolPredicate
  type: StringPredicate
  updatedAt: DateTimePredicate
}

input AuthenticationProfile_PermissionRelationFilter {
  every: AuthenticationProfile_PermissionFilter
  none: AuthenticationProfile_PermissionFilter
  some: AuthenticationProfile_PermissionFilter
}

"""
AuthenticationProfiles relation input
"""
input AuthenticationProfilesRolesManyRelationInput {
  connect: [RoleKeyFilter!]
}

"""
AuthenticationProfiles relation input
"""
input AuthenticationProfilesRolesRelationInput {
  connect: [RoleKeyFilter!]
  create: [AuthenticationProfiles_RoleCreateInput]
}

"""
AuthenticationProfiles relation input
"""
input AuthenticationProfilesRolesUpdateRelationInput {
  connect: [RoleKeyFilter!]
  create: [AuthenticationProfiles_RoleCreateInput]
  disconnect: [RoleKeyFilter!]
  reconnect: [RoleKeyFilter!]
  update: [AuthenticationProfiles_RoleUpdateInput]
}

"""
Roles create input from authenticationProfiles
"""
input AuthenticationProfiles_RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""
Roles update input from authenticationProfiles
"""
input AuthenticationProfiles_RoleUpdateInput {
  data: RoleUpdateInput!
  filter: RoleKeyFilter
}

type AuthenticationSetting {
  _description: String
  allowedCallbacks: [String]
  allowedLogouts: [String]
  allowedWebOrigins: [String]
  connections: AuthenticationProfileConnectionOptions
  createdAt: DateTime
  createdBy: User
  updatedAt: DateTime
}

input AuthenticationSettingFilter {
  AND: [AuthenticationSettingFilter!]
  OR: [AuthenticationSettingFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  updatedAt: DateTimePredicate
}

"""
AuthenticationSettings subscription payload
"""
type AuthenticationSettingPayload {
  mutation: MutationType!
  node: AuthenticationSetting
  previousValues: AuthenticationSetting
  updatedFields: [String]
}

"""
AuthenticationSettings subscription filter
"""
input AuthenticationSettingSubscriptionFilter {
  mutation_in: [MutationType]
  node: AuthenticationSettingFilter
  updatedFields: UpdatedFieldsFilter
}

"""
AuthenticationSettings update input
"""
input AuthenticationSettingUpdateInput {
  allowedCallbacks: [String]
  allowedLogouts: [String]
  allowedWebOrigins: [String]
  connections: AuthenticationProfileConnectionsOptionsInput
}

"""
Users create input from avatar
"""
input Avatar_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput!
  MaintenanceRecord: UsersMaintenanceRecordRelationInput!
  Notification: UsersNotificationRelationInput!
  Report: UsersReportRelationInput!
  SearchCriteria: UsersSearchCriteriaRelationInput!
  WorkOrder: UsersWorkOrderRelationInput!
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from avatar
"""
input Avatar_UserUpdateInput {
  data: UserUpdateInput!
  filter: UserKeyFilter
}

type AwsSignInfoResponse {
  fields: JSON!
  path: String!
  url: String!
}

"""
The `BigInt` scalar type represents whole numeric values.
"""
scalar BigInt

input BigIntPredicateHaving {
  AND: [BigIntPredicateHaving!]
  OR: [BigIntPredicateHaving!]
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: BigInt
  lte: BigInt
  not_equals: BigInt
  not_in: [BigInt!]
}

type BillingCurrentPlanResponse {
  customerId: String
  displayName: String
  features: [BillingPlanFeature]
  id: ID
  limitMetrics: [BillingPlanLimitMetrics]
  name: String
  nextPlan: BillingNextPlanResponse
  paymentDate: DateTime
  paymentDetails: String
  pdf: String
  price: Int
  status: WorkspaceStatus
  subscriptionId: String
  trialEnd: DateTime
}

enum BillingDetailsOrigin {
  member
  organization
  workspace
}

type BillingDetailsResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: BillingDetailsOrigin!
}

type BillingInvoiceItem {
  amountDue: Float
  amountPaid: Float
  amountRemaining: Float
  description: String
  endingBalance: Float
  id: ID!
  invoicePdf: String
  number: String
  organization: BillingInvoiceItemOrganizationInfo
  paid: Boolean
  periodEnd: DateTime
  periodStart: DateTime
  plan: BillingInvoiceItemPlanInfo
  project: BillingInvoiceItemProjectInfo
  status: String
  total: Float
}

type BillingInvoiceItemOrganizationInfo {
  id: ID
  name: String
}

type BillingInvoiceItemPlanInfo {
  displayName: String
  id: ID
  name: String
}

type BillingInvoiceItemProjectInfo {
  id: ID
  name: String
}

enum BillingInvoicesListFilterType {
  CUSTOMER
  PROJECT
}

"""
BillingInvoicesListResponse output
"""
type BillingInvoicesListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [BillingInvoiceItem!]!
}

type BillingLimitMetricItem {
  description: String
  displayName: String
  name: String
  showPriority: Int
  tooltip: String
  unit: String
}

type BillingMetricOverageItem {
  value: Float
  warning: String
}

type BillingMetricUsageItem {
  limitMetric: BillingLimitMetricItem
  overage: BillingMetricOverageItem
  value: Float
}

type BillingMetricUsageQuotaItem {
  limitMetric: BillingLimitMetricItem
  value: Float
}

"""
BillingMetricUsageQuotasListResponse output
"""
type BillingMetricUsageQuotasListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [BillingMetricUsageQuotaItem!]!
}

input BillingMetricUsagesListFilter {
  entryDate: DateTimePredicate!
}

"""
BillingMetricUsagesListResponse output
"""
type BillingMetricUsagesListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [BillingMetricUsageItem!]!
}

type BillingNextPlanResponse {
  displayName: String
  id: ID
  name: String
  pdf: String
  price: Int
}

type BillingPlanBaseInfo {
  capacity: String
  description: String
  displayName: String
  featuresTitle: String
  id: ID
  isCustom: Boolean
  isLegacy: Boolean
  limitMetrics: [BillingPlanLimitMetricItem]
  name: String
  pdf: String
  price: Int
  status: String
}

type BillingPlanFeature {
  displayName: String
  isActive: Boolean
  name: String
}

type BillingPlanLimitMetricItem {
  displayName: String
  hardLimit: Float
  name: String
  overagePrice: Int
  softLimit: Float
}

type BillingPlanLimitMetrics {
  hardLimit: String
  id: String
  name: String
  overagePrice: String
  softLimit: String
}

"""
BillingPlanUpdateMutationInput
"""
input BillingPlanUpdateMutationInput {
  planId: ID!
  projectID: ID!
}

input BoolPredicate {
  equals: Boolean
  is_empty: Boolean
  is_not_empty: Boolean
  not_equals: Boolean
}

input BoolPredicateHaving {
  AND: [BoolPredicateHaving!]
  OR: [BoolPredicateHaving!]
  equals: Boolean
  is_empty: Boolean
  is_not_empty: Boolean
  not_equals: Boolean
}

"""
Represents the comprehensive profile of a commercial building.
"""
type BuildingProfile {
  Certification: Certification
  ComplianceRecord: ComplianceRecord
  EnergyEfficiency: EnergyEfficiency
  EnvironmentalInformation: EnvironmentalInformation
  EquipmentInventory: EquipmentInventory
  Improvement: Improvement
  IndoorAirQuality: IndoorAirQuality
  MaintenanceRecord: MaintenanceRecord
  Permit: Permit
  SiteDocumentation: SiteDocumentation
  WorkOrder: WorkOrder
  _description: String
  address: String
  certification: Certification
  compliance_record: ComplianceRecord
  createdAt: DateTime
  deletedAt: Int
  demographics: JSON
  energy_efficiency: EnergyEfficiency
  environmental_information: EnvironmentalInformation
  equipment_inventory: EquipmentInventory
  id: ID
  improvements: Improvement
  indoor_air_quality: IndoorAirQuality
  maintenance_records: MaintenanceRecord
  name: String
  owner_id: User
  site_documentation: SiteDocumentation
  updatedAt: DateTime
}

"""
BuildingProfile relation input
"""
input BuildingProfileCertificationManyRelationInput {
  connect: CertificationKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileCertificationRelationInput {
  connect: CertificationKeyFilter
  create: BuildingProfile_CertificationCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileCertificationUpdateRelationInput {
  connect: CertificationKeyFilter
  create: BuildingProfile_CertificationCreateInput
  disconnect: CertificationKeyFilter
  reconnect: CertificationKeyFilter
  update: BuildingProfile_CertificationUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileComplianceRecordManyRelationInput {
  connect: ComplianceRecordKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileComplianceRecordRelationInput {
  connect: ComplianceRecordKeyFilter
  create: Building_profile_id_ComplianceRecordCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileComplianceRecordUpdateRelationInput {
  connect: ComplianceRecordKeyFilter
  create: Building_profile_id_ComplianceRecordCreateInput
  disconnect: ComplianceRecordKeyFilter
  reconnect: ComplianceRecordKeyFilter
  update: Building_profile_id_ComplianceRecordUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileCompliance_recordManyRelationInput {
  connect: ComplianceRecordKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileCompliance_recordRelationInput {
  connect: ComplianceRecordKeyFilter
  create: BuildingProfile_ComplianceRecordCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileCompliance_recordUpdateRelationInput {
  connect: ComplianceRecordKeyFilter
  create: BuildingProfile_ComplianceRecordCreateInput
  disconnect: ComplianceRecordKeyFilter
  reconnect: ComplianceRecordKeyFilter
  update: BuildingProfile_ComplianceRecordUpdateInput
}

"""
BuildingProfile create input
"""
input BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile create many input
"""
input BuildingProfileCreateManyInput {
  Certification: BuildingProfileCertificationManyRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordManyRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyManyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationManyRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryManyRelationInput!
  Improvement: BuildingProfileImprovementManyRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityManyRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordManyRelationInput!
  Permit: BuildingProfilePermitManyRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationManyRelationInput!
  WorkOrder: BuildingProfileWorkOrderManyRelationInput!
  address: String
  certification: BuildingProfileCertificationManyRelationInput
  compliance_record: BuildingProfileCompliance_recordManyRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyManyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationManyRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryManyRelationInput
  improvements: BuildingProfileImprovementsManyRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityManyRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsManyRelationInput
  name: String
  owner_id: BuildingProfileOwner_idManyRelationInput
  site_documentation: BuildingProfileSite_documentationManyRelationInput
}

"""
BuildingProfile delete input
"""
input BuildingProfileDeleteInput {
  force: Boolean
  id: ID
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnergyEfficiencyManyRelationInput {
  connect: EnergyEfficiencyKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnergyEfficiencyRelationInput {
  connect: EnergyEfficiencyKeyFilter
  create: Building_profile_id_EnergyEfficiencyCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnergyEfficiencyUpdateRelationInput {
  connect: EnergyEfficiencyKeyFilter
  create: Building_profile_id_EnergyEfficiencyCreateInput
  disconnect: EnergyEfficiencyKeyFilter
  reconnect: EnergyEfficiencyKeyFilter
  update: Building_profile_id_EnergyEfficiencyUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnergy_efficiencyManyRelationInput {
  connect: EnergyEfficiencyKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnergy_efficiencyRelationInput {
  connect: EnergyEfficiencyKeyFilter
  create: BuildingProfile_EnergyEfficiencyCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnergy_efficiencyUpdateRelationInput {
  connect: EnergyEfficiencyKeyFilter
  create: BuildingProfile_EnergyEfficiencyCreateInput
  disconnect: EnergyEfficiencyKeyFilter
  reconnect: EnergyEfficiencyKeyFilter
  update: BuildingProfile_EnergyEfficiencyUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnvironmentalInformationManyRelationInput {
  connect: EnvironmentalInformationKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnvironmentalInformationRelationInput {
  connect: EnvironmentalInformationKeyFilter
  create: Building_profile_id_EnvironmentalInformationCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnvironmentalInformationUpdateRelationInput {
  connect: EnvironmentalInformationKeyFilter
  create: Building_profile_id_EnvironmentalInformationCreateInput
  disconnect: EnvironmentalInformationKeyFilter
  reconnect: EnvironmentalInformationKeyFilter
  update: Building_profile_id_EnvironmentalInformationUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnvironmental_informationManyRelationInput {
  connect: EnvironmentalInformationKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnvironmental_informationRelationInput {
  connect: EnvironmentalInformationKeyFilter
  create: BuildingProfile_EnvironmentalInformationCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEnvironmental_informationUpdateRelationInput {
  connect: EnvironmentalInformationKeyFilter
  create: BuildingProfile_EnvironmentalInformationCreateInput
  disconnect: EnvironmentalInformationKeyFilter
  reconnect: EnvironmentalInformationKeyFilter
  update: BuildingProfile_EnvironmentalInformationUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEquipmentInventoryManyRelationInput {
  connect: EquipmentInventoryKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileEquipmentInventoryRelationInput {
  connect: EquipmentInventoryKeyFilter
  create: Building_profile_id_EquipmentInventoryCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEquipmentInventoryUpdateRelationInput {
  connect: EquipmentInventoryKeyFilter
  create: Building_profile_id_EquipmentInventoryCreateInput
  disconnect: EquipmentInventoryKeyFilter
  reconnect: EquipmentInventoryKeyFilter
  update: Building_profile_id_EquipmentInventoryUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEquipment_inventoryManyRelationInput {
  connect: EquipmentInventoryKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileEquipment_inventoryRelationInput {
  connect: EquipmentInventoryKeyFilter
  create: BuildingProfile_EquipmentInventoryCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileEquipment_inventoryUpdateRelationInput {
  connect: EquipmentInventoryKeyFilter
  create: BuildingProfile_EquipmentInventoryCreateInput
  disconnect: EquipmentInventoryKeyFilter
  reconnect: EquipmentInventoryKeyFilter
  update: BuildingProfile_EquipmentInventoryUpdateInput
}

"""
BuildingProfileFieldsPermissions create input
"""
input BuildingProfileFieldsPermissions {
  address: Boolean
  createdAt: Boolean
  demographics: Boolean
  name: Boolean
  updatedAt: Boolean
}

input BuildingProfileFilter {
  AND: [BuildingProfileFilter!]
  Certification: CertificationFilter
  ComplianceRecord: ComplianceRecordFilter
  EnergyEfficiency: EnergyEfficiencyFilter
  EnvironmentalInformation: EnvironmentalInformationFilter
  EquipmentInventory: EquipmentInventoryFilter
  Improvement: ImprovementFilter
  IndoorAirQuality: IndoorAirQualityFilter
  MaintenanceRecord: MaintenanceRecordFilter
  OR: [BuildingProfileFilter!]
  Permit: PermitFilter
  SiteDocumentation: SiteDocumentationFilter
  WorkOrder: WorkOrderFilter
  _fullText: String
  address: StringPredicate
  certification: CertificationFilter
  compliance_record: ComplianceRecordFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  energy_efficiency: EnergyEfficiencyFilter
  environmental_information: EnvironmentalInformationFilter
  equipment_inventory: EquipmentInventoryFilter
  id: IDPredicate
  improvements: ImprovementFilter
  indoor_air_quality: IndoorAirQualityFilter
  maintenance_records: MaintenanceRecordFilter
  name: StringPredicate
  owner_id: UserFilter
  site_documentation: SiteDocumentationFilter
  updatedAt: DateTimePredicate
}

input BuildingProfileGroupBy {
  first: Int
  having: Having
  last: Int
  query: BuildingProfileGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input BuildingProfileGroupByQuery {
  Certification: CertificationGroupByQuery
  ComplianceRecord: ComplianceRecordGroupByQuery
  EnergyEfficiency: EnergyEfficiencyGroupByQuery
  EnvironmentalInformation: EnvironmentalInformationGroupByQuery
  EquipmentInventory: EquipmentInventoryGroupByQuery
  Improvement: ImprovementGroupByQuery
  IndoorAirQuality: IndoorAirQualityGroupByQuery
  MaintenanceRecord: MaintenanceRecordGroupByQuery
  Permit: PermitGroupByQuery
  SiteDocumentation: SiteDocumentationGroupByQuery
  WorkOrder: WorkOrderGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  address: [GroupByField!]
  certification: CertificationGroupByQuery
  compliance_record: ComplianceRecordGroupByQuery
  createdAt: [GroupByField!]
  demographics: [GroupByField!]
  energy_efficiency: EnergyEfficiencyGroupByQuery
  environmental_information: EnvironmentalInformationGroupByQuery
  equipment_inventory: EquipmentInventoryGroupByQuery
  id: [GroupByField!]
  improvements: ImprovementGroupByQuery
  indoor_air_quality: IndoorAirQualityGroupByQuery
  maintenance_records: MaintenanceRecordGroupByQuery
  name: [GroupByField!]
  owner_id: UserGroupByQuery
  site_documentation: SiteDocumentationGroupByQuery
  updatedAt: [GroupByField!]
}

"""
BuildingProfile relation input
"""
input BuildingProfileImprovementManyRelationInput {
  connect: ImprovementKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileImprovementRelationInput {
  connect: ImprovementKeyFilter
  create: Building_profile_id_ImprovementCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileImprovementUpdateRelationInput {
  connect: ImprovementKeyFilter
  create: Building_profile_id_ImprovementCreateInput
  disconnect: ImprovementKeyFilter
  reconnect: ImprovementKeyFilter
  update: Building_profile_id_ImprovementUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileImprovementsManyRelationInput {
  connect: ImprovementKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileImprovementsRelationInput {
  connect: ImprovementKeyFilter
  create: BuildingProfile_ImprovementCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileImprovementsUpdateRelationInput {
  connect: ImprovementKeyFilter
  create: BuildingProfile_ImprovementCreateInput
  disconnect: ImprovementKeyFilter
  reconnect: ImprovementKeyFilter
  update: BuildingProfile_ImprovementUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileIndoorAirQualityManyRelationInput {
  connect: IndoorAirQualityKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileIndoorAirQualityRelationInput {
  connect: IndoorAirQualityKeyFilter
  create: Building_profile_id_IndoorAirQualityCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileIndoorAirQualityUpdateRelationInput {
  connect: IndoorAirQualityKeyFilter
  create: Building_profile_id_IndoorAirQualityCreateInput
  disconnect: IndoorAirQualityKeyFilter
  reconnect: IndoorAirQualityKeyFilter
  update: Building_profile_id_IndoorAirQualityUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileIndoor_air_qualityManyRelationInput {
  connect: IndoorAirQualityKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileIndoor_air_qualityRelationInput {
  connect: IndoorAirQualityKeyFilter
  create: BuildingProfile_IndoorAirQualityCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileIndoor_air_qualityUpdateRelationInput {
  connect: IndoorAirQualityKeyFilter
  create: BuildingProfile_IndoorAirQualityCreateInput
  disconnect: IndoorAirQualityKeyFilter
  reconnect: IndoorAirQualityKeyFilter
  update: BuildingProfile_IndoorAirQualityUpdateInput
}

input BuildingProfileKeyFilter {
  id: ID
}

"""
BuildingProfileListResponse output
"""
type BuildingProfileListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [BuildingProfile!]!
}

"""
BuildingProfile relation input
"""
input BuildingProfileMaintenanceRecordManyRelationInput {
  connect: MaintenanceRecordKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileMaintenanceRecordRelationInput {
  connect: MaintenanceRecordKeyFilter
  create: Building_profile_id_MaintenanceRecordCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileMaintenanceRecordUpdateRelationInput {
  connect: MaintenanceRecordKeyFilter
  create: Building_profile_id_MaintenanceRecordCreateInput
  disconnect: MaintenanceRecordKeyFilter
  reconnect: MaintenanceRecordKeyFilter
  update: Building_profile_id_MaintenanceRecordUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileMaintenance_recordsManyRelationInput {
  connect: MaintenanceRecordKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileMaintenance_recordsRelationInput {
  connect: MaintenanceRecordKeyFilter
  create: BuildingProfile_MaintenanceRecordCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileMaintenance_recordsUpdateRelationInput {
  connect: MaintenanceRecordKeyFilter
  create: BuildingProfile_MaintenanceRecordCreateInput
  disconnect: MaintenanceRecordKeyFilter
  reconnect: MaintenanceRecordKeyFilter
  update: BuildingProfile_MaintenanceRecordUpdateInput
}

"""
BuildingProfileManyResponse output
"""
type BuildingProfileManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [BuildingProfile!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum BuildingProfileOrderBy {
  address_ASC
  address_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  demographics_ASC
  demographics_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
BuildingProfile relation input
"""
input BuildingProfileOwner_idManyRelationInput {
  connect: UserKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileOwner_idRelationInput {
  connect: UserKeyFilter
  create: BuildingProfile_UserCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileOwner_idUpdateRelationInput {
  connect: UserKeyFilter
  create: BuildingProfile_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: BuildingProfile_UserUpdateInput
}

"""
BuildingProfile subscription payload
"""
type BuildingProfilePayload {
  mutation: MutationType!
  node: BuildingProfile
  previousValues: BuildingProfile
  updatedFields: [String]
}

"""
BuildingProfile relation input
"""
input BuildingProfilePermitManyRelationInput {
  connect: PermitKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfilePermitRelationInput {
  connect: PermitKeyFilter
  create: Building_profile_id_PermitCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfilePermitUpdateRelationInput {
  connect: PermitKeyFilter
  create: Building_profile_id_PermitCreateInput
  disconnect: PermitKeyFilter
  reconnect: PermitKeyFilter
  update: Building_profile_id_PermitUpdateInput
}

input BuildingProfileRelationFilter {
  every: BuildingProfileFilter
  none: BuildingProfileFilter
  some: BuildingProfileFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileSiteDocumentationManyRelationInput {
  connect: SiteDocumentationKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileSiteDocumentationRelationInput {
  connect: SiteDocumentationKeyFilter
  create: Building_profile_id_SiteDocumentationCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileSiteDocumentationUpdateRelationInput {
  connect: SiteDocumentationKeyFilter
  create: Building_profile_id_SiteDocumentationCreateInput
  disconnect: SiteDocumentationKeyFilter
  reconnect: SiteDocumentationKeyFilter
  update: Building_profile_id_SiteDocumentationUpdateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileSite_documentationManyRelationInput {
  connect: SiteDocumentationKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileSite_documentationRelationInput {
  connect: SiteDocumentationKeyFilter
  create: BuildingProfile_SiteDocumentationCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileSite_documentationUpdateRelationInput {
  connect: SiteDocumentationKeyFilter
  create: BuildingProfile_SiteDocumentationCreateInput
  disconnect: SiteDocumentationKeyFilter
  reconnect: SiteDocumentationKeyFilter
  update: BuildingProfile_SiteDocumentationUpdateInput
}

input BuildingProfileSort {
  Certification: CertificationSort
  ComplianceRecord: ComplianceRecordSort
  EnergyEfficiency: EnergyEfficiencySort
  EnvironmentalInformation: EnvironmentalInformationSort
  EquipmentInventory: EquipmentInventorySort
  Improvement: ImprovementSort
  IndoorAirQuality: IndoorAirQualitySort
  MaintenanceRecord: MaintenanceRecordSort
  Permit: PermitSort
  SiteDocumentation: SiteDocumentationSort
  WorkOrder: WorkOrderSort
  address: SortOrder
  certification: CertificationSort
  compliance_record: ComplianceRecordSort
  createdAt: SortOrder
  deletedAt: SortOrder
  energy_efficiency: EnergyEfficiencySort
  environmental_information: EnvironmentalInformationSort
  equipment_inventory: EquipmentInventorySort
  id: SortOrder
  improvements: ImprovementSort
  indoor_air_quality: IndoorAirQualitySort
  maintenance_records: MaintenanceRecordSort
  name: SortOrder
  owner_id: UserSort
  site_documentation: SiteDocumentationSort
  updatedAt: SortOrder
}

"""
BuildingProfile subscription filter
"""
input BuildingProfileSubscriptionFilter {
  mutation_in: [MutationType]
  node: BuildingProfileFilter
  updatedFields: UpdatedFieldsFilter
}

"""
BuildingProfile update input
"""
input BuildingProfileUpdateByFilterInput {
  address: [UpdateByFilterStringInput]
  demographics: [UpdateByFilterJsonInput]
  name: [UpdateByFilterStringInput]
}

"""
BuildingProfile update input
"""
input BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  id: ID
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileWorkOrderManyRelationInput {
  connect: WorkOrderKeyFilter
}

"""
BuildingProfile relation input
"""
input BuildingProfileWorkOrderRelationInput {
  connect: WorkOrderKeyFilter
  create: Building_profile_id_WorkOrderCreateInput
}

"""
BuildingProfile relation input
"""
input BuildingProfileWorkOrderUpdateRelationInput {
  connect: WorkOrderKeyFilter
  create: Building_profile_id_WorkOrderCreateInput
  disconnect: WorkOrderKeyFilter
  reconnect: WorkOrderKeyFilter
  update: Building_profile_id_WorkOrderUpdateInput
}

"""
Certification create input from BuildingProfile
"""
input BuildingProfile_CertificationCreateInput {
  BuildingProfile: CertificationBuildingProfileRelationInput
  building_profile_id: CertificationBuilding_profile_idRelationInput
  certification_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
}

"""
Certification update input from BuildingProfile
"""
input BuildingProfile_CertificationUpdateInput {
  BuildingProfile: CertificationBuildingProfileUpdateRelationInput
  building_profile_id: CertificationBuilding_profile_idUpdateRelationInput
  certification_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
}

"""
ComplianceRecord create input from BuildingProfile
"""
input BuildingProfile_ComplianceRecordCreateInput {
  BuildingProfile: ComplianceRecordBuildingProfileRelationInput
  building_profile_id: ComplianceRecordBuilding_profile_idRelationInput
  compliance_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  status: String
}

"""
ComplianceRecord update input from BuildingProfile
"""
input BuildingProfile_ComplianceRecordUpdateInput {
  BuildingProfile: ComplianceRecordBuildingProfileUpdateRelationInput
  building_profile_id: ComplianceRecordBuilding_profile_idUpdateRelationInput
  compliance_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  status: String
}

"""
EnergyEfficiency create input from BuildingProfile
"""
input BuildingProfile_EnergyEfficiencyCreateInput {
  BuildingProfile: EnergyEfficiencyBuildingProfileRelationInput
  building_profile_id: EnergyEfficiencyBuilding_profile_idRelationInput
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  measurement_date: DateTime
}

"""
EnergyEfficiency update input from BuildingProfile
"""
input BuildingProfile_EnergyEfficiencyUpdateInput {
  BuildingProfile: EnergyEfficiencyBuildingProfileUpdateRelationInput
  building_profile_id: EnergyEfficiencyBuilding_profile_idUpdateRelationInput
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  measurement_date: DateTime
}

"""
EnvironmentalInformation create input from BuildingProfile
"""
input BuildingProfile_EnvironmentalInformationCreateInput {
  BuildingProfile: EnvironmentalInformationBuildingProfileRelationInput
  building_profile_id: EnvironmentalInformationBuilding_profile_idRelationInput
  data_type: String
  data_value: String
  measurement_date: DateTime
}

"""
EnvironmentalInformation update input from BuildingProfile
"""
input BuildingProfile_EnvironmentalInformationUpdateInput {
  BuildingProfile: EnvironmentalInformationBuildingProfileUpdateRelationInput
  building_profile_id: EnvironmentalInformationBuilding_profile_idUpdateRelationInput
  data_type: String
  data_value: String
  measurement_date: DateTime
}

"""
EquipmentInventory create input from BuildingProfile
"""
input BuildingProfile_EquipmentInventoryCreateInput {
  BuildingProfile: EquipmentInventoryBuildingProfileRelationInput
  building_profile_id: EquipmentInventoryBuilding_profile_idRelationInput
  equipment_name: String
  equipment_type: String
  installation_date: DateTime
  last_maintenance_date: DateTime
}

"""
EquipmentInventory update input from BuildingProfile
"""
input BuildingProfile_EquipmentInventoryUpdateInput {
  BuildingProfile: EquipmentInventoryBuildingProfileUpdateRelationInput
  building_profile_id: EquipmentInventoryBuilding_profile_idUpdateRelationInput
  equipment_name: String
  equipment_type: String
  installation_date: DateTime
  last_maintenance_date: DateTime
}

"""
Improvement create input from BuildingProfile
"""
input BuildingProfile_ImprovementCreateInput {
  BuildingProfile: ImprovementBuildingProfileRelationInput
  building_profile_id: ImprovementBuilding_profile_idRelationInput
  cost: Int
  date_completed: DateTime
  description: String
}

"""
Improvement update input from BuildingProfile
"""
input BuildingProfile_ImprovementUpdateInput {
  BuildingProfile: ImprovementBuildingProfileUpdateRelationInput
  building_profile_id: ImprovementBuilding_profile_idUpdateRelationInput
  cost: Int
  date_completed: DateTime
  description: String
}

"""
IndoorAirQuality create input from BuildingProfile
"""
input BuildingProfile_IndoorAirQualityCreateInput {
  BuildingProfile: IndoorAirQualityBuildingProfileRelationInput
  air_quality_level: String
  building_profile_id: IndoorAirQualityBuilding_profile_idRelationInput
  measurement_date: DateTime
  pollutant_levels: JSON
}

"""
IndoorAirQuality update input from BuildingProfile
"""
input BuildingProfile_IndoorAirQualityUpdateInput {
  BuildingProfile: IndoorAirQualityBuildingProfileUpdateRelationInput
  air_quality_level: String
  building_profile_id: IndoorAirQualityBuilding_profile_idUpdateRelationInput
  measurement_date: DateTime
  pollutant_levels: JSON
}

"""
MaintenanceRecord create input from BuildingProfile
"""
input BuildingProfile_MaintenanceRecordCreateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idRelationInput
}

"""
MaintenanceRecord update input from BuildingProfile
"""
input BuildingProfile_MaintenanceRecordUpdateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileUpdateRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idUpdateRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idUpdateRelationInput
}

input BuildingProfile_PermissionFilter {
  AND: [BuildingProfile_PermissionFilter!]
  Certification: Certification_PermissionFilter
  ComplianceRecord: ComplianceRecord_PermissionFilter
  EnergyEfficiency: EnergyEfficiency_PermissionFilter
  EnvironmentalInformation: EnvironmentalInformation_PermissionFilter
  EquipmentInventory: EquipmentInventory_PermissionFilter
  Improvement: Improvement_PermissionFilter
  IndoorAirQuality: IndoorAirQuality_PermissionFilter
  MaintenanceRecord: MaintenanceRecord_PermissionFilter
  OR: [BuildingProfile_PermissionFilter!]
  Permit: Permit_PermissionFilter
  SiteDocumentation: SiteDocumentation_PermissionFilter
  WorkOrder: WorkOrder_PermissionFilter
  _fullText: String
  address: StringPredicate
  certification: Certification_PermissionFilter
  compliance_record: ComplianceRecord_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  energy_efficiency: EnergyEfficiency_PermissionFilter
  environmental_information: EnvironmentalInformation_PermissionFilter
  equipment_inventory: EquipmentInventory_PermissionFilter
  id: IDPredicate
  improvements: Improvement_PermissionFilter
  indoor_air_quality: IndoorAirQuality_PermissionFilter
  maintenance_records: MaintenanceRecord_PermissionFilter
  name: StringPredicate
  owner_id: User_PermissionFilter
  site_documentation: SiteDocumentation_PermissionFilter
  updatedAt: DateTimePredicate
}

input BuildingProfile_PermissionRelationFilter {
  every: BuildingProfile_PermissionFilter
  none: BuildingProfile_PermissionFilter
  some: BuildingProfile_PermissionFilter
}

"""
SiteDocumentation create input from BuildingProfile
"""
input BuildingProfile_SiteDocumentationCreateInput {
  BuildingProfile: SiteDocumentationBuildingProfileRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileRelationInput
  document_type: String
  upload_date: DateTime
}

"""
SiteDocumentation update input from BuildingProfile
"""
input BuildingProfile_SiteDocumentationUpdateInput {
  BuildingProfile: SiteDocumentationBuildingProfileUpdateRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idUpdateRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileUpdateRelationInput
  document_type: String
  upload_date: DateTime
}

"""
Users create input from BuildingProfile
"""
input BuildingProfile_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput
  MaintenanceRecord: UsersMaintenanceRecordRelationInput!
  Notification: UsersNotificationRelationInput!
  Report: UsersReportRelationInput!
  SearchCriteria: UsersSearchCriteriaRelationInput!
  WorkOrder: UsersWorkOrderRelationInput!
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from BuildingProfile
"""
input BuildingProfile_UserUpdateInput {
  BuildingProfile: UsersBuildingProfileUpdateRelationInput
  MaintenanceRecord: UsersMaintenanceRecordUpdateRelationInput
  Notification: UsersNotificationUpdateRelationInput
  Report: UsersReportUpdateRelationInput
  SearchCriteria: UsersSearchCriteriaUpdateRelationInput
  WorkOrder: UsersWorkOrderUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

"""
ComplianceRecord create input from building_profile_id
"""
input Building_profile_id_ComplianceRecordCreateInput {
  BuildingProfile: ComplianceRecordBuildingProfileRelationInput
  building_profile_id: ComplianceRecordBuilding_profile_idRelationInput
  compliance_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  status: String
}

"""
ComplianceRecord update input from building_profile_id
"""
input Building_profile_id_ComplianceRecordUpdateInput {
  BuildingProfile: ComplianceRecordBuildingProfileUpdateRelationInput
  building_profile_id: ComplianceRecordBuilding_profile_idUpdateRelationInput
  compliance_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  status: String
}

"""
EnergyEfficiency create input from building_profile_id
"""
input Building_profile_id_EnergyEfficiencyCreateInput {
  BuildingProfile: EnergyEfficiencyBuildingProfileRelationInput
  building_profile_id: EnergyEfficiencyBuilding_profile_idRelationInput
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  measurement_date: DateTime
}

"""
EnergyEfficiency update input from building_profile_id
"""
input Building_profile_id_EnergyEfficiencyUpdateInput {
  BuildingProfile: EnergyEfficiencyBuildingProfileUpdateRelationInput
  building_profile_id: EnergyEfficiencyBuilding_profile_idUpdateRelationInput
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  measurement_date: DateTime
}

"""
EnvironmentalInformation create input from building_profile_id
"""
input Building_profile_id_EnvironmentalInformationCreateInput {
  BuildingProfile: EnvironmentalInformationBuildingProfileRelationInput
  building_profile_id: EnvironmentalInformationBuilding_profile_idRelationInput
  data_type: String
  data_value: String
  measurement_date: DateTime
}

"""
EnvironmentalInformation update input from building_profile_id
"""
input Building_profile_id_EnvironmentalInformationUpdateInput {
  BuildingProfile: EnvironmentalInformationBuildingProfileUpdateRelationInput
  building_profile_id: EnvironmentalInformationBuilding_profile_idUpdateRelationInput
  data_type: String
  data_value: String
  measurement_date: DateTime
}

"""
EquipmentInventory create input from building_profile_id
"""
input Building_profile_id_EquipmentInventoryCreateInput {
  BuildingProfile: EquipmentInventoryBuildingProfileRelationInput
  building_profile_id: EquipmentInventoryBuilding_profile_idRelationInput
  equipment_name: String
  equipment_type: String
  installation_date: DateTime
  last_maintenance_date: DateTime
}

"""
EquipmentInventory update input from building_profile_id
"""
input Building_profile_id_EquipmentInventoryUpdateInput {
  BuildingProfile: EquipmentInventoryBuildingProfileUpdateRelationInput
  building_profile_id: EquipmentInventoryBuilding_profile_idUpdateRelationInput
  equipment_name: String
  equipment_type: String
  installation_date: DateTime
  last_maintenance_date: DateTime
}

"""
Improvement create input from building_profile_id
"""
input Building_profile_id_ImprovementCreateInput {
  BuildingProfile: ImprovementBuildingProfileRelationInput
  building_profile_id: ImprovementBuilding_profile_idRelationInput
  cost: Int
  date_completed: DateTime
  description: String
}

"""
Improvement update input from building_profile_id
"""
input Building_profile_id_ImprovementUpdateInput {
  BuildingProfile: ImprovementBuildingProfileUpdateRelationInput
  building_profile_id: ImprovementBuilding_profile_idUpdateRelationInput
  cost: Int
  date_completed: DateTime
  description: String
}

"""
IndoorAirQuality create input from building_profile_id
"""
input Building_profile_id_IndoorAirQualityCreateInput {
  BuildingProfile: IndoorAirQualityBuildingProfileRelationInput
  air_quality_level: String
  building_profile_id: IndoorAirQualityBuilding_profile_idRelationInput
  measurement_date: DateTime
  pollutant_levels: JSON
}

"""
IndoorAirQuality update input from building_profile_id
"""
input Building_profile_id_IndoorAirQualityUpdateInput {
  BuildingProfile: IndoorAirQualityBuildingProfileUpdateRelationInput
  air_quality_level: String
  building_profile_id: IndoorAirQualityBuilding_profile_idUpdateRelationInput
  measurement_date: DateTime
  pollutant_levels: JSON
}

"""
MaintenanceRecord create input from building_profile_id
"""
input Building_profile_id_MaintenanceRecordCreateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idRelationInput
}

"""
MaintenanceRecord update input from building_profile_id
"""
input Building_profile_id_MaintenanceRecordUpdateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileUpdateRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idUpdateRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idUpdateRelationInput
}

"""
Permit create input from building_profile_id
"""
input Building_profile_id_PermitCreateInput {
  building_profile_id: PermitBuilding_profile_idRelationInput
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  permit_number: String
}

"""
Permit update input from building_profile_id
"""
input Building_profile_id_PermitUpdateInput {
  building_profile_id: PermitBuilding_profile_idUpdateRelationInput
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  permit_number: String
}

"""
SiteDocumentation create input from building_profile_id
"""
input Building_profile_id_SiteDocumentationCreateInput {
  BuildingProfile: SiteDocumentationBuildingProfileRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileRelationInput
  document_type: String
  upload_date: DateTime
}

"""
SiteDocumentation update input from building_profile_id
"""
input Building_profile_id_SiteDocumentationUpdateInput {
  BuildingProfile: SiteDocumentationBuildingProfileUpdateRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idUpdateRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileUpdateRelationInput
  document_type: String
  upload_date: DateTime
}

"""
WorkOrder create input from building_profile_id
"""
input Building_profile_id_WorkOrderCreateInput {
  building_profile_id: WorkOrderBuilding_profile_idRelationInput
  completion_date: DateTime
  created_date: DateTime
  description: String
  priority: String
  status: String
  vendor_id: WorkOrderVendor_idRelationInput
}

"""
WorkOrder update input from building_profile_id
"""
input Building_profile_id_WorkOrderUpdateInput {
  building_profile_id: WorkOrderBuilding_profile_idUpdateRelationInput
  completion_date: DateTime
  created_date: DateTime
  description: String
  priority: String
  status: String
  vendor_id: WorkOrderVendor_idUpdateRelationInput
}

"""
Details on certifications obtained by the building.
"""
type Certification {
  BuildingProfile(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
  ): BuildingProfileListResponse
  _description: String
  building_profile_id: BuildingProfile
  certification_type: String
  createdAt: DateTime
  deletedAt: Int
  description: String
  expiration_date: DateTime
  id: ID
  issue_date: DateTime
  updatedAt: DateTime
}

"""
Certification relation input
"""
input CertificationBuildingProfileManyRelationInput {
  connect: [BuildingProfileKeyFilter!]
}

"""
Certification relation input
"""
input CertificationBuildingProfileRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Certification_BuildingProfileCreateInput]
}

"""
Certification relation input
"""
input CertificationBuildingProfileUpdateRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Certification_BuildingProfileCreateInput]
  disconnect: [BuildingProfileKeyFilter!]
  reconnect: [BuildingProfileKeyFilter!]
  update: [Certification_BuildingProfileUpdateInput]
}

"""
Certification relation input
"""
input CertificationBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
Certification relation input
"""
input CertificationBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: Certification_BuildingProfileCreateInput
}

"""
Certification relation input
"""
input CertificationBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: Certification_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: Certification_BuildingProfileUpdateInput
}

"""
Certification create input
"""
input CertificationCreateInput {
  BuildingProfile: CertificationBuildingProfileRelationInput
  building_profile_id: CertificationBuilding_profile_idRelationInput
  certification_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
}

"""
Certification create many input
"""
input CertificationCreateManyInput {
  BuildingProfile: CertificationBuildingProfileManyRelationInput
  building_profile_id: CertificationBuilding_profile_idManyRelationInput
  certification_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
}

"""
Certification delete input
"""
input CertificationDeleteInput {
  force: Boolean
  id: ID
}

"""
CertificationFieldsPermissions create input
"""
input CertificationFieldsPermissions {
  certification_type: Boolean
  createdAt: Boolean
  description: Boolean
  expiration_date: Boolean
  issue_date: Boolean
  updatedAt: Boolean
}

input CertificationFilter {
  AND: [CertificationFilter!]
  BuildingProfile: BuildingProfileRelationFilter
  OR: [CertificationFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  certification_type: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  expiration_date: DateTimePredicate
  id: IDPredicate
  issue_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

input CertificationGroupBy {
  first: Int
  having: Having
  last: Int
  query: CertificationGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input CertificationGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  certification_type: [GroupByField!]
  createdAt: [GroupByField!]
  description: [GroupByField!]
  expiration_date: [GroupByField!]
  id: [GroupByField!]
  issue_date: [GroupByField!]
  updatedAt: [GroupByField!]
}

input CertificationKeyFilter {
  id: ID
}

"""
CertificationListResponse output
"""
type CertificationListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Certification!]!
}

"""
CertificationManyResponse output
"""
type CertificationManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [Certification!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum CertificationOrderBy {
  certification_type_ASC
  certification_type_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  expiration_date_ASC
  expiration_date_DESC
  id_ASC
  id_DESC
  issue_date_ASC
  issue_date_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
Certification subscription payload
"""
type CertificationPayload {
  mutation: MutationType!
  node: Certification
  previousValues: Certification
  updatedFields: [String]
}

input CertificationSort {
  building_profile_id: BuildingProfileSort
  certification_type: SortOrder
  createdAt: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  issue_date: SortOrder
  updatedAt: SortOrder
}

"""
Certification subscription filter
"""
input CertificationSubscriptionFilter {
  mutation_in: [MutationType]
  node: CertificationFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Certification update input
"""
input CertificationUpdateByFilterInput {
  certification_type: [UpdateByFilterStringInput]
  description: [UpdateByFilterStringInput]
}

"""
Certification update input
"""
input CertificationUpdateInput {
  BuildingProfile: CertificationBuildingProfileUpdateRelationInput
  building_profile_id: CertificationBuilding_profile_idUpdateRelationInput
  certification_type: String
  description: String
  expiration_date: DateTime
  id: ID
  issue_date: DateTime
}

"""
BuildingProfile create input from certification
"""
input Certification_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from certification
"""
input Certification_BuildingProfileUpdateInput {
  data: BuildingProfileUpdateInput!
  filter: BuildingProfileKeyFilter
}

input Certification_PermissionFilter {
  AND: [Certification_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionRelationFilter
  OR: [Certification_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  certification_type: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  expiration_date: DateTimePredicate
  id: IDPredicate
  issue_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

"""
ChangePasswordInput
"""
input ChangePasswordInput {
  authProfileId: ID!
  email: String!
  newPassword: String!
  oldPassword: String!
  refreshToken: String!
}

"""
Authentication Profile Attributes for Cognito
"""
type CognitoAuthProfileAttributes {
  clientAuthDomain: String
}

"""
Records of compliance with regulations and certifications.
"""
type ComplianceRecord {
  BuildingProfile(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
  ): BuildingProfileListResponse
  _description: String
  building_profile_id: BuildingProfile
  compliance_type: String
  createdAt: DateTime
  deletedAt: Int
  description: String
  expiration_date: DateTime
  id: ID
  issue_date: DateTime
  status: String
  updatedAt: DateTime
}

"""
ComplianceRecord relation input
"""
input ComplianceRecordBuildingProfileManyRelationInput {
  connect: [BuildingProfileKeyFilter!]
}

"""
ComplianceRecord relation input
"""
input ComplianceRecordBuildingProfileRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Compliance_record_BuildingProfileCreateInput]
}

"""
ComplianceRecord relation input
"""
input ComplianceRecordBuildingProfileUpdateRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Compliance_record_BuildingProfileCreateInput]
  disconnect: [BuildingProfileKeyFilter!]
  reconnect: [BuildingProfileKeyFilter!]
  update: [Compliance_record_BuildingProfileUpdateInput]
}

"""
ComplianceRecord relation input
"""
input ComplianceRecordBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
ComplianceRecord relation input
"""
input ComplianceRecordBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: ComplianceRecord_BuildingProfileCreateInput
}

"""
ComplianceRecord relation input
"""
input ComplianceRecordBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: ComplianceRecord_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: ComplianceRecord_BuildingProfileUpdateInput
}

"""
ComplianceRecord create input
"""
input ComplianceRecordCreateInput {
  BuildingProfile: ComplianceRecordBuildingProfileRelationInput
  building_profile_id: ComplianceRecordBuilding_profile_idRelationInput
  compliance_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  status: String
}

"""
ComplianceRecord create many input
"""
input ComplianceRecordCreateManyInput {
  BuildingProfile: ComplianceRecordBuildingProfileManyRelationInput
  building_profile_id: ComplianceRecordBuilding_profile_idManyRelationInput
  compliance_type: String
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  status: String
}

"""
ComplianceRecord delete input
"""
input ComplianceRecordDeleteInput {
  force: Boolean
  id: ID
}

"""
ComplianceRecordFieldsPermissions create input
"""
input ComplianceRecordFieldsPermissions {
  compliance_type: Boolean
  createdAt: Boolean
  description: Boolean
  expiration_date: Boolean
  issue_date: Boolean
  status: Boolean
  updatedAt: Boolean
}

input ComplianceRecordFilter {
  AND: [ComplianceRecordFilter!]
  BuildingProfile: BuildingProfileRelationFilter
  OR: [ComplianceRecordFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  compliance_type: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  expiration_date: DateTimePredicate
  id: IDPredicate
  issue_date: DateTimePredicate
  status: StringPredicate
  updatedAt: DateTimePredicate
}

input ComplianceRecordGroupBy {
  first: Int
  having: Having
  last: Int
  query: ComplianceRecordGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input ComplianceRecordGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  compliance_type: [GroupByField!]
  createdAt: [GroupByField!]
  description: [GroupByField!]
  expiration_date: [GroupByField!]
  id: [GroupByField!]
  issue_date: [GroupByField!]
  status: [GroupByField!]
  updatedAt: [GroupByField!]
}

input ComplianceRecordKeyFilter {
  id: ID
}

"""
ComplianceRecordListResponse output
"""
type ComplianceRecordListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [ComplianceRecord!]!
}

"""
ComplianceRecordManyResponse output
"""
type ComplianceRecordManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [ComplianceRecord!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum ComplianceRecordOrderBy {
  compliance_type_ASC
  compliance_type_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  expiration_date_ASC
  expiration_date_DESC
  id_ASC
  id_DESC
  issue_date_ASC
  issue_date_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
ComplianceRecord subscription payload
"""
type ComplianceRecordPayload {
  mutation: MutationType!
  node: ComplianceRecord
  previousValues: ComplianceRecord
  updatedFields: [String]
}

input ComplianceRecordSort {
  building_profile_id: BuildingProfileSort
  compliance_type: SortOrder
  createdAt: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  issue_date: SortOrder
  status: SortOrder
  updatedAt: SortOrder
}

"""
ComplianceRecord subscription filter
"""
input ComplianceRecordSubscriptionFilter {
  mutation_in: [MutationType]
  node: ComplianceRecordFilter
  updatedFields: UpdatedFieldsFilter
}

"""
ComplianceRecord update input
"""
input ComplianceRecordUpdateByFilterInput {
  compliance_type: [UpdateByFilterStringInput]
  description: [UpdateByFilterStringInput]
  status: [UpdateByFilterStringInput]
}

"""
ComplianceRecord update input
"""
input ComplianceRecordUpdateInput {
  BuildingProfile: ComplianceRecordBuildingProfileUpdateRelationInput
  building_profile_id: ComplianceRecordBuilding_profile_idUpdateRelationInput
  compliance_type: String
  description: String
  expiration_date: DateTime
  id: ID
  issue_date: DateTime
  status: String
}

"""
BuildingProfile create input from ComplianceRecord
"""
input ComplianceRecord_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from ComplianceRecord
"""
input ComplianceRecord_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input ComplianceRecord_PermissionFilter {
  AND: [ComplianceRecord_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionRelationFilter
  OR: [ComplianceRecord_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  compliance_type: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  expiration_date: DateTimePredicate
  id: IDPredicate
  issue_date: DateTimePredicate
  status: StringPredicate
  updatedAt: DateTimePredicate
}

"""
BuildingProfile create input from compliance_record
"""
input Compliance_record_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from compliance_record
"""
input Compliance_record_BuildingProfileUpdateInput {
  data: BuildingProfileUpdateInput!
  filter: BuildingProfileKeyFilter
}

"""
Computed field mode
"""
enum ComputedFieldMode {
  STORED
  VIRTUAL
}

"""
Custom Table Field Type
"""
type CustomTableField {
  computedMode: ComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType
  fieldTypeAttributes: FieldTypeAttributes
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String
}

"""
A date string, such as `2007-12-25`, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
Date Field Attributes
"""
type DateFieldTypeAttributes {
  format: String!
}

enum DatePartFunctionType {
  DATE
  DAY
  DAY_NAME
  DAY_OF_MONTH
  DAY_OF_WEEK
  DAY_OF_YEAR
  HOUR
  LAST_DAY
  MICROSECOND
  MINUTE
  MONTH
  MONTH_NAME
  QUARTER
  SECOND
  TIME
  WEEK
  WEEK_DAY
  WEEK_OF_YEAR
  YEAR
  YEAR_WEEK
}

input DatePredicateHaving {
  AND: [DatePredicateHaving!]
  OR: [DatePredicateHaving!]
  equals: Date
  gt: Date
  gte: Date
  in: [Date!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Date
  lte: Date
  not_equals: Date
  not_in: [Date!]
}

input DateRelativePredicateType {
  op: RelativePredicateOpEnum
  unit: RelativePredicateUnitEnum
  value: String!
}

input DateRelativePredicates {
  gt: DateRelativePredicateType
  gte: DateRelativePredicateType
  lt: DateRelativePredicateType
  lte: DateRelativePredicateType
}

"""
A date-time string at UTC, such as `2007-12-25T16:15:30Z`, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimePredicate {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: DateTime
  lte: DateTime
  not_equals: DateTime
  not_in: [DateTime!]
  relative: DateRelativePredicates
}

input DateTimePredicateHaving {
  AND: [DateTimePredicateHaving!]
  OR: [DateTimePredicateHaving!]
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: DateTime
  lte: DateTime
  not_equals: DateTime
  not_in: [DateTime!]
}

"""
Date Type Format Enum
"""
enum DateTypeFormatEnum {
  DATE
  DATETIME
}

"""
DeployDataResponse
"""
type DeployDataResponse {
  buildName: String!
  uploadBuildUrl: String!
  uploadMetaDataUrl: String!
}

enum DeployModeEnum {
  FULL
  FUNCTIONS
  MIGRATIONS
  ONLY_PLUGINS
  ONLY_PROJECT
}

"""
DeployOptions
"""
input DeployOptions {
  extensionNames: [String]
  mode: DeployModeEnum = ONLY_PROJECT
  nodeVersion: String
  pluginNames: [String]
}

enum DeployStatusEnum {
  compiling
  complete_error
  complete_success
  deploying
  initialize
  preparing
}

"""
DeployStatusResult
"""
type DeployStatusResult {
  message: String
  status: DeployStatusEnum!
}

"""
DeployingBuildInput
"""
input DeployingBuildInput {
  buildName: String!
  options: DeployOptions
}

type DeploymentABItemResponse {
  dateDeploy: DateTime
  statusDeploy: String
  urlDeploy: String
  userDeploy: SystemMemberAccountInfo
  versionDeploy: String
  versionFrontEnd: String
}

"""
SiteDocumentation create input from document_file
"""
input Document_file_SiteDocumentationCreateInput {
  BuildingProfile: SiteDocumentationBuildingProfileRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileRelationInput
  document_type: String
  upload_date: DateTime
}

"""
SiteDocumentation update input from document_file
"""
input Document_file_SiteDocumentationUpdateInput {
  data: SiteDocumentationUpdateInput!
  filter: SiteDocumentationKeyFilter
}

"""
Metrics related to the energy efficiency of a building.
"""
type EnergyEfficiency {
  BuildingProfile: BuildingProfile
  _description: String
  building_profile_id: BuildingProfile
  createdAt: DateTime
  deletedAt: Int
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  id: ID
  measurement_date: DateTime
  updatedAt: DateTime
}

"""
EnergyEfficiency relation input
"""
input EnergyEfficiencyBuildingProfileManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
EnergyEfficiency relation input
"""
input EnergyEfficiencyBuildingProfileRelationInput {
  connect: BuildingProfileKeyFilter
  create: Energy_efficiency_BuildingProfileCreateInput
}

"""
EnergyEfficiency relation input
"""
input EnergyEfficiencyBuildingProfileUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: Energy_efficiency_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: Energy_efficiency_BuildingProfileUpdateInput
}

"""
EnergyEfficiency relation input
"""
input EnergyEfficiencyBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
EnergyEfficiency relation input
"""
input EnergyEfficiencyBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: EnergyEfficiency_BuildingProfileCreateInput
}

"""
EnergyEfficiency relation input
"""
input EnergyEfficiencyBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: EnergyEfficiency_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: EnergyEfficiency_BuildingProfileUpdateInput
}

"""
EnergyEfficiency create input
"""
input EnergyEfficiencyCreateInput {
  BuildingProfile: EnergyEfficiencyBuildingProfileRelationInput
  building_profile_id: EnergyEfficiencyBuilding_profile_idRelationInput
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  measurement_date: DateTime
}

"""
EnergyEfficiency create many input
"""
input EnergyEfficiencyCreateManyInput {
  BuildingProfile: EnergyEfficiencyBuildingProfileManyRelationInput
  building_profile_id: EnergyEfficiencyBuilding_profile_idManyRelationInput
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  measurement_date: DateTime
}

"""
EnergyEfficiency delete input
"""
input EnergyEfficiencyDeleteInput {
  force: Boolean
  id: ID
}

"""
EnergyEfficiencyFieldsPermissions create input
"""
input EnergyEfficiencyFieldsPermissions {
  createdAt: Boolean
  efficiency_rating: Boolean
  energy_consumption: Boolean
  energy_cost: Boolean
  measurement_date: Boolean
  updatedAt: Boolean
}

input EnergyEfficiencyFilter {
  AND: [EnergyEfficiencyFilter!]
  BuildingProfile: BuildingProfileFilter
  OR: [EnergyEfficiencyFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  efficiency_rating: StringPredicate
  energy_consumption: IntPredicate
  energy_cost: IntPredicate
  id: IDPredicate
  measurement_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

input EnergyEfficiencyGroupBy {
  first: Int
  having: Having
  last: Int
  query: EnergyEfficiencyGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input EnergyEfficiencyGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  createdAt: [GroupByField!]
  efficiency_rating: [GroupByField!]
  energy_consumption: [GroupByField!]
  energy_cost: [GroupByField!]
  id: [GroupByField!]
  measurement_date: [GroupByField!]
  updatedAt: [GroupByField!]
}

input EnergyEfficiencyKeyFilter {
  id: ID
}

"""
EnergyEfficiencyListResponse output
"""
type EnergyEfficiencyListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [EnergyEfficiency!]!
}

"""
EnergyEfficiencyManyResponse output
"""
type EnergyEfficiencyManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [EnergyEfficiency!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum EnergyEfficiencyOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  efficiency_rating_ASC
  efficiency_rating_DESC
  energy_consumption_ASC
  energy_consumption_DESC
  energy_cost_ASC
  energy_cost_DESC
  id_ASC
  id_DESC
  measurement_date_ASC
  measurement_date_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
EnergyEfficiency subscription payload
"""
type EnergyEfficiencyPayload {
  mutation: MutationType!
  node: EnergyEfficiency
  previousValues: EnergyEfficiency
  updatedFields: [String]
}

input EnergyEfficiencySort {
  BuildingProfile: BuildingProfileSort
  building_profile_id: BuildingProfileSort
  createdAt: SortOrder
  deletedAt: SortOrder
  efficiency_rating: SortOrder
  energy_consumption: SortOrder
  energy_cost: SortOrder
  id: SortOrder
  measurement_date: SortOrder
  updatedAt: SortOrder
}

"""
EnergyEfficiency subscription filter
"""
input EnergyEfficiencySubscriptionFilter {
  mutation_in: [MutationType]
  node: EnergyEfficiencyFilter
  updatedFields: UpdatedFieldsFilter
}

"""
EnergyEfficiency update input
"""
input EnergyEfficiencyUpdateByFilterInput {
  efficiency_rating: [UpdateByFilterStringInput]
  energy_consumption: [UpdateByFilterIntInput]
  energy_cost: [UpdateByFilterIntInput]
}

"""
EnergyEfficiency update input
"""
input EnergyEfficiencyUpdateInput {
  BuildingProfile: EnergyEfficiencyBuildingProfileUpdateRelationInput
  building_profile_id: EnergyEfficiencyBuilding_profile_idUpdateRelationInput
  efficiency_rating: String
  energy_consumption: Int
  energy_cost: Int
  id: ID
  measurement_date: DateTime
}

"""
BuildingProfile create input from EnergyEfficiency
"""
input EnergyEfficiency_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from EnergyEfficiency
"""
input EnergyEfficiency_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input EnergyEfficiency_PermissionFilter {
  AND: [EnergyEfficiency_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionFilter
  OR: [EnergyEfficiency_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  efficiency_rating: StringPredicate
  energy_consumption: IntPredicate
  energy_cost: IntPredicate
  id: IDPredicate
  measurement_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

"""
BuildingProfile create input from energy_efficiency
"""
input Energy_efficiency_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from energy_efficiency
"""
input Energy_efficiency_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

type EnvironmentBackupItem {
  name: String!
  size: Float!
}

type EnvironmentItem {
  id: ID!
  name: String!
}

"""
EnvironmentSetupInput
"""
input EnvironmentSetupInput {
  deleteLock: Boolean
  introspection: Boolean
}

type EnvironmentVariable {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  id: ID
  name: String
  updatedAt: DateTime
  value: String
}

"""
EnvironmentVariables create input
"""
input EnvironmentVariableCreateInput {
  name: String!
  value: String!
}

"""
EnvironmentVariables create many input
"""
input EnvironmentVariableCreateManyInput {
  name: String!
  value: String!
}

"""
EnvironmentVariables delete input
"""
input EnvironmentVariableDeleteInput {
  force: Boolean
  id: ID
}

input EnvironmentVariableFilter {
  AND: [EnvironmentVariableFilter!]
  OR: [EnvironmentVariableFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  id: IDPredicate
  name: StringPredicate
  updatedAt: DateTimePredicate
  value: StringPredicate
}

input EnvironmentVariableGroupBy {
  first: Int
  having: Having
  last: Int
  query: EnvironmentVariableGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input EnvironmentVariableGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  id: [GroupByField!]
  name: [GroupByField!]
  updatedAt: [GroupByField!]
  value: [GroupByField!]
}

input EnvironmentVariableKeyFilter {
  id: ID
  name: String
}

"""
EnvironmentVariableListResponse output
"""
type EnvironmentVariableListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [EnvironmentVariable!]!
}

"""
EnvironmentVariableManyResponse output
"""
type EnvironmentVariableManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [EnvironmentVariable!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum EnvironmentVariableOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  value_ASC
  value_DESC
}

"""
EnvironmentVariables subscription payload
"""
type EnvironmentVariablePayload {
  mutation: MutationType!
  node: EnvironmentVariable
  previousValues: EnvironmentVariable
  updatedFields: [String]
}

input EnvironmentVariableSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
  value: SortOrder
}

"""
EnvironmentVariables subscription filter
"""
input EnvironmentVariableSubscriptionFilter {
  mutation_in: [MutationType]
  node: EnvironmentVariableFilter
  updatedFields: UpdatedFieldsFilter
}

"""
EnvironmentVariables update input
"""
input EnvironmentVariableUpdateByFilterInput {
  name: [UpdateByFilterStringInput]
  value: [UpdateByFilterStringInput]
}

"""
EnvironmentVariables update input
"""
input EnvironmentVariableUpdateInput {
  id: ID
  name: String
  value: String
}

"""
Environmental data related to the building.
"""
type EnvironmentalInformation {
  BuildingProfile: BuildingProfile
  _description: String
  building_profile_id: BuildingProfile
  createdAt: DateTime
  data_type: String
  data_value: String
  deletedAt: Int
  id: ID
  measurement_date: DateTime
  updatedAt: DateTime
}

"""
EnvironmentalInformation relation input
"""
input EnvironmentalInformationBuildingProfileManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
EnvironmentalInformation relation input
"""
input EnvironmentalInformationBuildingProfileRelationInput {
  connect: BuildingProfileKeyFilter
  create: Environmental_information_BuildingProfileCreateInput
}

"""
EnvironmentalInformation relation input
"""
input EnvironmentalInformationBuildingProfileUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: Environmental_information_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: Environmental_information_BuildingProfileUpdateInput
}

"""
EnvironmentalInformation relation input
"""
input EnvironmentalInformationBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
EnvironmentalInformation relation input
"""
input EnvironmentalInformationBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: EnvironmentalInformation_BuildingProfileCreateInput
}

"""
EnvironmentalInformation relation input
"""
input EnvironmentalInformationBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: EnvironmentalInformation_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: EnvironmentalInformation_BuildingProfileUpdateInput
}

"""
EnvironmentalInformation create input
"""
input EnvironmentalInformationCreateInput {
  BuildingProfile: EnvironmentalInformationBuildingProfileRelationInput
  building_profile_id: EnvironmentalInformationBuilding_profile_idRelationInput
  data_type: String
  data_value: String
  measurement_date: DateTime
}

"""
EnvironmentalInformation create many input
"""
input EnvironmentalInformationCreateManyInput {
  BuildingProfile: EnvironmentalInformationBuildingProfileManyRelationInput
  building_profile_id: EnvironmentalInformationBuilding_profile_idManyRelationInput
  data_type: String
  data_value: String
  measurement_date: DateTime
}

"""
EnvironmentalInformation delete input
"""
input EnvironmentalInformationDeleteInput {
  force: Boolean
  id: ID
}

"""
EnvironmentalInformationFieldsPermissions create input
"""
input EnvironmentalInformationFieldsPermissions {
  createdAt: Boolean
  data_type: Boolean
  data_value: Boolean
  measurement_date: Boolean
  updatedAt: Boolean
}

input EnvironmentalInformationFilter {
  AND: [EnvironmentalInformationFilter!]
  BuildingProfile: BuildingProfileFilter
  OR: [EnvironmentalInformationFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  createdAt: DateTimePredicate
  data_type: StringPredicate
  data_value: StringPredicate
  deletedAt: IntPredicate
  id: IDPredicate
  measurement_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

input EnvironmentalInformationGroupBy {
  first: Int
  having: Having
  last: Int
  query: EnvironmentalInformationGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input EnvironmentalInformationGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  createdAt: [GroupByField!]
  data_type: [GroupByField!]
  data_value: [GroupByField!]
  id: [GroupByField!]
  measurement_date: [GroupByField!]
  updatedAt: [GroupByField!]
}

input EnvironmentalInformationKeyFilter {
  id: ID
}

"""
EnvironmentalInformationListResponse output
"""
type EnvironmentalInformationListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [EnvironmentalInformation!]!
}

"""
EnvironmentalInformationManyResponse output
"""
type EnvironmentalInformationManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [EnvironmentalInformation!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum EnvironmentalInformationOrderBy {
  createdAt_ASC
  createdAt_DESC
  data_type_ASC
  data_type_DESC
  data_value_ASC
  data_value_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  measurement_date_ASC
  measurement_date_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
EnvironmentalInformation subscription payload
"""
type EnvironmentalInformationPayload {
  mutation: MutationType!
  node: EnvironmentalInformation
  previousValues: EnvironmentalInformation
  updatedFields: [String]
}

input EnvironmentalInformationSort {
  BuildingProfile: BuildingProfileSort
  building_profile_id: BuildingProfileSort
  createdAt: SortOrder
  data_type: SortOrder
  data_value: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  measurement_date: SortOrder
  updatedAt: SortOrder
}

"""
EnvironmentalInformation subscription filter
"""
input EnvironmentalInformationSubscriptionFilter {
  mutation_in: [MutationType]
  node: EnvironmentalInformationFilter
  updatedFields: UpdatedFieldsFilter
}

"""
EnvironmentalInformation update input
"""
input EnvironmentalInformationUpdateByFilterInput {
  data_type: [UpdateByFilterStringInput]
  data_value: [UpdateByFilterStringInput]
}

"""
EnvironmentalInformation update input
"""
input EnvironmentalInformationUpdateInput {
  BuildingProfile: EnvironmentalInformationBuildingProfileUpdateRelationInput
  building_profile_id: EnvironmentalInformationBuilding_profile_idUpdateRelationInput
  data_type: String
  data_value: String
  id: ID
  measurement_date: DateTime
}

"""
BuildingProfile create input from EnvironmentalInformation
"""
input EnvironmentalInformation_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from EnvironmentalInformation
"""
input EnvironmentalInformation_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input EnvironmentalInformation_PermissionFilter {
  AND: [EnvironmentalInformation_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionFilter
  OR: [EnvironmentalInformation_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  createdAt: DateTimePredicate
  data_type: StringPredicate
  data_value: StringPredicate
  deletedAt: IntPredicate
  id: IDPredicate
  measurement_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

"""
BuildingProfile create input from environmental_information
"""
input Environmental_information_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from environmental_information
"""
input Environmental_information_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

"""
Inventory of all equipment within a building.
"""
type EquipmentInventory {
  BuildingProfile(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
  ): BuildingProfileListResponse
  _description: String
  building_profile_id: BuildingProfile
  createdAt: DateTime
  deletedAt: Int
  equipment_name: String
  equipment_type: String
  id: ID
  installation_date: DateTime
  last_maintenance_date: DateTime
  updatedAt: DateTime
}

"""
EquipmentInventory relation input
"""
input EquipmentInventoryBuildingProfileManyRelationInput {
  connect: [BuildingProfileKeyFilter!]
}

"""
EquipmentInventory relation input
"""
input EquipmentInventoryBuildingProfileRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Equipment_inventory_BuildingProfileCreateInput]
}

"""
EquipmentInventory relation input
"""
input EquipmentInventoryBuildingProfileUpdateRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Equipment_inventory_BuildingProfileCreateInput]
  disconnect: [BuildingProfileKeyFilter!]
  reconnect: [BuildingProfileKeyFilter!]
  update: [Equipment_inventory_BuildingProfileUpdateInput]
}

"""
EquipmentInventory relation input
"""
input EquipmentInventoryBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
EquipmentInventory relation input
"""
input EquipmentInventoryBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: EquipmentInventory_BuildingProfileCreateInput
}

"""
EquipmentInventory relation input
"""
input EquipmentInventoryBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: EquipmentInventory_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: EquipmentInventory_BuildingProfileUpdateInput
}

"""
EquipmentInventory create input
"""
input EquipmentInventoryCreateInput {
  BuildingProfile: EquipmentInventoryBuildingProfileRelationInput
  building_profile_id: EquipmentInventoryBuilding_profile_idRelationInput
  equipment_name: String
  equipment_type: String
  installation_date: DateTime
  last_maintenance_date: DateTime
}

"""
EquipmentInventory create many input
"""
input EquipmentInventoryCreateManyInput {
  BuildingProfile: EquipmentInventoryBuildingProfileManyRelationInput
  building_profile_id: EquipmentInventoryBuilding_profile_idManyRelationInput
  equipment_name: String
  equipment_type: String
  installation_date: DateTime
  last_maintenance_date: DateTime
}

"""
EquipmentInventory delete input
"""
input EquipmentInventoryDeleteInput {
  force: Boolean
  id: ID
}

"""
EquipmentInventoryFieldsPermissions create input
"""
input EquipmentInventoryFieldsPermissions {
  createdAt: Boolean
  equipment_name: Boolean
  equipment_type: Boolean
  installation_date: Boolean
  last_maintenance_date: Boolean
  updatedAt: Boolean
}

input EquipmentInventoryFilter {
  AND: [EquipmentInventoryFilter!]
  BuildingProfile: BuildingProfileRelationFilter
  OR: [EquipmentInventoryFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  equipment_name: StringPredicate
  equipment_type: StringPredicate
  id: IDPredicate
  installation_date: DateTimePredicate
  last_maintenance_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

input EquipmentInventoryGroupBy {
  first: Int
  having: Having
  last: Int
  query: EquipmentInventoryGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input EquipmentInventoryGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  createdAt: [GroupByField!]
  equipment_name: [GroupByField!]
  equipment_type: [GroupByField!]
  id: [GroupByField!]
  installation_date: [GroupByField!]
  last_maintenance_date: [GroupByField!]
  updatedAt: [GroupByField!]
}

input EquipmentInventoryKeyFilter {
  id: ID
}

"""
EquipmentInventoryListResponse output
"""
type EquipmentInventoryListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [EquipmentInventory!]!
}

"""
EquipmentInventoryManyResponse output
"""
type EquipmentInventoryManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [EquipmentInventory!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum EquipmentInventoryOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  equipment_name_ASC
  equipment_name_DESC
  equipment_type_ASC
  equipment_type_DESC
  id_ASC
  id_DESC
  installation_date_ASC
  installation_date_DESC
  last_maintenance_date_ASC
  last_maintenance_date_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
EquipmentInventory subscription payload
"""
type EquipmentInventoryPayload {
  mutation: MutationType!
  node: EquipmentInventory
  previousValues: EquipmentInventory
  updatedFields: [String]
}

input EquipmentInventorySort {
  building_profile_id: BuildingProfileSort
  createdAt: SortOrder
  deletedAt: SortOrder
  equipment_name: SortOrder
  equipment_type: SortOrder
  id: SortOrder
  installation_date: SortOrder
  last_maintenance_date: SortOrder
  updatedAt: SortOrder
}

"""
EquipmentInventory subscription filter
"""
input EquipmentInventorySubscriptionFilter {
  mutation_in: [MutationType]
  node: EquipmentInventoryFilter
  updatedFields: UpdatedFieldsFilter
}

"""
EquipmentInventory update input
"""
input EquipmentInventoryUpdateByFilterInput {
  equipment_name: [UpdateByFilterStringInput]
  equipment_type: [UpdateByFilterStringInput]
}

"""
EquipmentInventory update input
"""
input EquipmentInventoryUpdateInput {
  BuildingProfile: EquipmentInventoryBuildingProfileUpdateRelationInput
  building_profile_id: EquipmentInventoryBuilding_profile_idUpdateRelationInput
  equipment_name: String
  equipment_type: String
  id: ID
  installation_date: DateTime
  last_maintenance_date: DateTime
}

"""
BuildingProfile create input from EquipmentInventory
"""
input EquipmentInventory_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from EquipmentInventory
"""
input EquipmentInventory_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input EquipmentInventory_PermissionFilter {
  AND: [EquipmentInventory_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionRelationFilter
  OR: [EquipmentInventory_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  equipment_name: StringPredicate
  equipment_type: StringPredicate
  id: IDPredicate
  installation_date: DateTimePredicate
  last_maintenance_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

"""
BuildingProfile create input from equipment_inventory
"""
input Equipment_inventory_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from equipment_inventory
"""
input Equipment_inventory_BuildingProfileUpdateInput {
  data: BuildingProfileUpdateInput!
  filter: BuildingProfileKeyFilter
}

"""
Facebook connection params
"""
type FacebookOptions {
  app_id: String!
  app_secret: String!
  enabled: Boolean!
}

"""
Facebook connection params input
"""
input FacebookOptionsInput {
  app_id: String!
  app_secret: String!
  enabled: Boolean!
}

"""
Field Data Features
"""
type FieldDataFeatures {
  create: Boolean!
  sort: Boolean!
  update: Boolean!
}

"""
Field Schema Features
"""
type FieldSchemaFeatures {
  delete: Boolean!
  update: Boolean!
}

"""
Field types
"""
enum FieldType {
  DATE
  FILE
  GEO
  ID
  JSON
  MISSING_RELATION
  NUMBER
  ONE_WAY_RELATION
  RELATION
  SMART
  SWITCH
  TEXT
  UUID
}

"""
Field Type Attributes
"""
union FieldTypeAttributes =
  | DateFieldTypeAttributes
  | FileFieldTypeAttributes
  | GeoFieldTypeAttributes
  | MissingRelationFieldTypeAttributes
  | NumberFieldTypeAttributes
  | SmartFieldTypeAttributes
  | SwitchFieldTypeAttributes
  | TextFieldTypeAttributes
  | UUIDFieldTypeAttributes

"""
Field Type Attributes Input
"""
input FieldTypeAttributesInput {
  autoIncrement: Boolean
  currency: String
  expiration: Int
  fieldSize: Int
  format: String
  isBigInt: Boolean
  listOptions: [String!]
  maxSize: Int
  maxValue: Float
  minValue: Float
  precision: Int
  srid: Int
  typeRestrictions: [String!]
}

type File {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int

  """
  No longer supported. Use `downloadUrl` instead.
  """
  downloadStorageUrl: String
  downloadUrl: String

  """
  No longer supported. Use `system.fileUploadSignInfo.AwsSignInfoResponse.fields` instead.
  """
  fields: JSON
  fileId: String
  filename: String
  id: ID
  meta: JSON
  mods: JSON
  previewUrl: String
  provider: String
  public: Boolean
  report_file(
    after: String
    before: String
    filter: ReportFilter
    first: Int
    groupBy: ReportGroupBy
    last: Int
    orderBy: [ReportOrderBy]
    skip: Int
    sort: [ReportSort!]
  ): ReportListResponse
  settings_landingPageImage(
    after: String
    before: String
    filter: SettingFilter
    first: Int
    groupBy: SettingGroupBy
    last: Int
    orderBy: [SettingOrderBy]
    skip: Int
    sort: [SettingSort!]
  ): SettingListResponse
  settings_menuBarLogo(
    after: String
    before: String
    filter: SettingFilter
    first: Int
    groupBy: SettingGroupBy
    last: Int
    orderBy: [SettingOrderBy]
    skip: Int
    sort: [SettingSort!]
  ): SettingListResponse
  shareUrl: String
  siteDocumentation_document_file(
    after: String
    before: String
    filter: SiteDocumentationFilter
    first: Int
    groupBy: SiteDocumentationGroupBy
    last: Int
    orderBy: [SiteDocumentationOrderBy]
    skip: Int
    sort: [SiteDocumentationSort!]
  ): SiteDocumentationListResponse
  updatedAt: DateTime

  """
  No longer supported
  """
  uploadUrl: String

  """
  No longer supported
  """
  uploaded: Boolean
  users_avatar(
    after: String
    before: String
    filter: UserFilter
    first: Int
    groupBy: UserGroupBy
    last: Int
    orderBy: [UserOrderBy]
    skip: Int
    sort: [UserSort!]
  ): UserListResponse
}

"""
Files create input
"""
input FileCreateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  report_file: FilesReport_fileRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileRelationInput
  users_avatar: FilesUsers_avatarRelationInput
}

"""
Files create many input
"""
input FileCreateManyInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  report_file: FilesReport_fileManyRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileManyRelationInput
  users_avatar: FilesUsers_avatarManyRelationInput
}

"""
Files delete input
"""
input FileDeleteInput {
  force: Boolean
  id: ID
}

"""
File Field Attributes
"""
type FileFieldTypeAttributes {
  expiration: Int
  format: String!
  maxSize: Int
  showTitle: Boolean @deprecated(reason: "Field is deprecated")
  showUrl: Boolean @deprecated(reason: "Field is deprecated")
  typeRestrictions: [String!]
}

"""
FileFieldsPermissions create input
"""
input FileFieldsPermissions {
  createdAt: Boolean
  downloadUrl: Boolean
  fields: Boolean
  fileId: Boolean
  filename: Boolean
  meta: Boolean
  mods: Boolean
  provider: Boolean
  public: Boolean
  shareUrl: Boolean
  updatedAt: Boolean
  uploadUrl: Boolean
  uploaded: Boolean
}

input FileFilter {
  AND: [FileFilter!]
  OR: [FileFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  downloadUrl: StringPredicate
  fileId: StringPredicate
  filename: StringPredicate
  id: IDPredicate
  provider: StringPredicate
  public: BoolPredicate
  report_file: ReportRelationFilter
  settings_landingPageImage: SettingRelationFilter
  settings_menuBarLogo: SettingRelationFilter
  shareUrl: StringPredicate
  siteDocumentation_document_file: SiteDocumentationRelationFilter
  updatedAt: DateTimePredicate
  uploadUrl: StringPredicate
  uploaded: BoolPredicate
  users_avatar: UserRelationFilter
}

input FileGroupBy {
  first: Int
  having: Having
  last: Int
  query: FileGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input FileGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  downloadUrl: [GroupByField!]
  fields: [GroupByField!]
  fileId: [GroupByField!]
  filename: [GroupByField!]
  id: [GroupByField!]
  meta: [GroupByField!]
  mods: [GroupByField!]
  provider: [GroupByField!]
  public: [GroupByField!]
  report_file: ReportGroupByQuery
  settings_landingPageImage: SettingGroupByQuery
  settings_menuBarLogo: SettingGroupByQuery
  shareUrl: [GroupByField!]
  siteDocumentation_document_file: SiteDocumentationGroupByQuery
  updatedAt: [GroupByField!]
  uploadUrl: [GroupByField!]
  uploaded: [GroupByField!]
  users_avatar: UserGroupByQuery
}

input FileKeyFilter {
  fileId: String
  id: ID
}

"""
FileListResponse output
"""
type FileListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [File!]!
}

"""
FileManyResponse output
"""
type FileManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [File!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum FileOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  downloadUrl_ASC
  downloadUrl_DESC
  fields_ASC
  fields_DESC
  fileId_ASC
  fileId_DESC
  filename_ASC
  filename_DESC
  id_ASC
  id_DESC
  meta_ASC
  meta_DESC
  mods_ASC
  mods_DESC
  provider_ASC
  provider_DESC
  public_ASC
  public_DESC
  shareUrl_ASC
  shareUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
  uploadUrl_ASC
  uploadUrl_DESC
  uploaded_ASC
  uploaded_DESC
}

"""
Files subscription payload
"""
type FilePayload {
  mutation: MutationType!
  node: File
  previousValues: File
  updatedFields: [String]
}

input FileSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  downloadUrl: SortOrder
  fileId: SortOrder
  filename: SortOrder
  id: SortOrder
  provider: SortOrder
  public: SortOrder
  shareUrl: SortOrder
  updatedAt: SortOrder
  uploadUrl: SortOrder
  uploaded: SortOrder
}

type FileStackSignInfoResponse {
  apiKey: String!
  path: String!
  policy: String!
  signature: String!
}

"""
Files subscription filter
"""
input FileSubscriptionFilter {
  mutation_in: [MutationType]
  node: FileFilter
  updatedFields: UpdatedFieldsFilter
}

"""
File Type Format Enum
"""
enum FileTypeFormatEnum {
  FILE
  IMAGE
}

"""
Files update input
"""
input FileUpdateByFilterInput {
  downloadUrl: [UpdateByFilterStringInput]
  fields: [UpdateByFilterJsonInput]
  fileId: [UpdateByFilterStringInput]
  filename: [UpdateByFilterStringInput]
  meta: [UpdateByFilterJsonInput]
  mods: [UpdateByFilterJsonInput]
  provider: [UpdateByFilterStringInput]
  public: [UpdateByFilterBooleanSwitchInput]
  shareUrl: [UpdateByFilterStringInput]
  uploadUrl: [UpdateByFilterStringInput]
  uploaded: [UpdateByFilterBooleanSwitchInput]
}

"""
Files update input
"""
input FileUpdateInput {
  fileId: String
  filename: String
  id: ID
  meta: JSON
  mods: JSON
  public: Boolean
  report_file: FilesReport_fileUpdateRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileUpdateRelationInput
  users_avatar: FilesUsers_avatarUpdateRelationInput
}

type FileUploadInfoResponse {
  apiKey: String!
  path: String!
  policy: String!
  signature: String!
}

input File_PermissionFilter {
  AND: [File_PermissionFilter!]
  OR: [File_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  downloadUrl: StringPredicate
  fileId: StringPredicate
  filename: StringPredicate
  id: IDPredicate
  provider: StringPredicate
  public: BoolPredicate
  report_file: Report_PermissionRelationFilter
  settings_landingPageImage: Setting_PermissionRelationFilter
  settings_menuBarLogo: Setting_PermissionRelationFilter
  shareUrl: StringPredicate
  siteDocumentation_document_file: SiteDocumentation_PermissionRelationFilter
  updatedAt: DateTimePredicate
  uploadUrl: StringPredicate
  uploaded: BoolPredicate
  users_avatar: User_PermissionRelationFilter
}

"""
Report create input from file
"""
input File_ReportCreateInput {
  configuration: JSON
  description: String
  file: ReportFileRelationInput
  generated_date: DateTime
  name: String
  user_id: ReportUser_idRelationInput
}

"""
Report update input from file
"""
input File_ReportUpdateInput {
  data: ReportUpdateInput!
  filter: ReportKeyFilter
}

"""
Files relation input
"""
input FilesReport_fileManyRelationInput {
  connect: [ReportKeyFilter!]
}

"""
Files relation input
"""
input FilesReport_fileRelationInput {
  connect: [ReportKeyFilter!]
  create: [File_ReportCreateInput]
}

"""
Files relation input
"""
input FilesReport_fileUpdateRelationInput {
  connect: [ReportKeyFilter!]
  create: [File_ReportCreateInput]
  disconnect: [ReportKeyFilter!]
  reconnect: [ReportKeyFilter!]
  update: [File_ReportUpdateInput]
}

type FilesSetting {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  filemanagername: String
  id: ID
  isEnabled: Boolean
  settings: JSON
  updatedAt: DateTime
}

"""
FilesSettings create input
"""
input FilesSettingCreateInput {
  filemanagername: String!
  isEnabled: Boolean = false
  settings: JSON!
}

"""
FilesSettings create many input
"""
input FilesSettingCreateManyInput {
  filemanagername: String!
  isEnabled: Boolean = false
  settings: JSON!
}

"""
FilesSettings delete input
"""
input FilesSettingDeleteInput {
  force: Boolean
  id: ID
}

"""
FilesSettingFieldsPermissions create input
"""
input FilesSettingFieldsPermissions {
  createdAt: Boolean
  filemanagername: Boolean
  isEnabled: Boolean
  settings: Boolean
  updatedAt: Boolean
}

input FilesSettingFilter {
  AND: [FilesSettingFilter!]
  OR: [FilesSettingFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  filemanagername: StringPredicate
  id: IDPredicate
  isEnabled: BoolPredicate
  updatedAt: DateTimePredicate
}

input FilesSettingGroupBy {
  first: Int
  having: Having
  last: Int
  query: FilesSettingGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input FilesSettingGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  filemanagername: [GroupByField!]
  id: [GroupByField!]
  isEnabled: [GroupByField!]
  settings: [GroupByField!]
  updatedAt: [GroupByField!]
}

input FilesSettingKeyFilter {
  filemanagername: String
  id: ID
}

"""
FilesSettingListResponse output
"""
type FilesSettingListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [FilesSetting!]!
}

"""
FilesSettingManyResponse output
"""
type FilesSettingManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [FilesSetting!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum FilesSettingOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  filemanagername_ASC
  filemanagername_DESC
  id_ASC
  id_DESC
  isEnabled_ASC
  isEnabled_DESC
  settings_ASC
  settings_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
FilesSettings subscription payload
"""
type FilesSettingPayload {
  mutation: MutationType!
  node: FilesSetting
  previousValues: FilesSetting
  updatedFields: [String]
}

input FilesSettingSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  filemanagername: SortOrder
  id: SortOrder
  isEnabled: SortOrder
  updatedAt: SortOrder
}

"""
FilesSettings subscription filter
"""
input FilesSettingSubscriptionFilter {
  mutation_in: [MutationType]
  node: FilesSettingFilter
  updatedFields: UpdatedFieldsFilter
}

"""
FilesSettings update input
"""
input FilesSettingUpdateByFilterInput {
  filemanagername: [UpdateByFilterStringInput]
  isEnabled: [UpdateByFilterBooleanSwitchInput]
  settings: [UpdateByFilterJsonInput]
}

"""
FilesSettings update input
"""
input FilesSettingUpdateInput {
  filemanagername: String
  id: ID
  isEnabled: Boolean
  settings: JSON
}

input FilesSetting_PermissionFilter {
  AND: [FilesSetting_PermissionFilter!]
  OR: [FilesSetting_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  filemanagername: StringPredicate
  id: IDPredicate
  isEnabled: BoolPredicate
  updatedAt: DateTimePredicate
}

"""
Files relation input
"""
input FilesSiteDocumentation_document_fileManyRelationInput {
  connect: [SiteDocumentationKeyFilter!]
}

"""
Files relation input
"""
input FilesSiteDocumentation_document_fileRelationInput {
  connect: [SiteDocumentationKeyFilter!]
  create: [Document_file_SiteDocumentationCreateInput]
}

"""
Files relation input
"""
input FilesSiteDocumentation_document_fileUpdateRelationInput {
  connect: [SiteDocumentationKeyFilter!]
  create: [Document_file_SiteDocumentationCreateInput]
  disconnect: [SiteDocumentationKeyFilter!]
  reconnect: [SiteDocumentationKeyFilter!]
  update: [Document_file_SiteDocumentationUpdateInput]
}

"""
Files relation input
"""
input FilesUsers_avatarManyRelationInput {
  connect: [UserKeyFilter!]
}

"""
Files relation input
"""
input FilesUsers_avatarRelationInput {
  connect: [UserKeyFilter!]
  create: [Avatar_UserCreateInput]
}

"""
Files relation input
"""
input FilesUsers_avatarUpdateRelationInput {
  connect: [UserKeyFilter!]
  create: [Avatar_UserCreateInput]
  disconnect: [UserKeyFilter!]
  reconnect: [UserKeyFilter!]
  update: [Avatar_UserUpdateInput]
}

input FloatPredicateHaving {
  AND: [FloatPredicateHaving!]
  OR: [FloatPredicateHaving!]
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Float
  lte: Float
  not_equals: Float
  not_in: [Float!]
}

type FrontendUtilizationABResponse {
  CDN: Boolean
  assets: Int
  customStates: Int
  functions: Int
  layouts: Int
  libraries: Int
  pages: Int
  requests: Int
  resources: Int
}

"""
FunctionInfo
"""
interface FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  name: String!
}

"""
FunctionInfoCheck
"""
type FunctionInfoCheck {
  version: String
}

"""
FunctionInfoFilter
"""
input FunctionInfoFilter {
  description: String
  functionType: FunctionType
  name: String
}

"""
FunctionInfoOrderBy
"""
enum FunctionInfoOrderBy {
  description_ASC
  description_DESC
  functionType_ASC
  functionType_DESC
  name_ASC
  name_DESC
}

"""
FunctionListResponse output
"""
type FunctionListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [FunctionInfo!]!
}

"""
FunctionResolverInfo
"""
type FunctionResolverInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  gqlType: String!
  name: String!
}

"""
FunctionTaskInfo
"""
type FunctionTaskInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  name: String!
  scheduleExpression: String
}

"""
FunctionTriggerInfo
"""
type FunctionTriggerInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  name: String!
  operation: String!
  tableName: String!
  type: String!
}

"""
FunctionType
"""
enum FunctionType {
  resolver
  schedule
  task
  trigger
  webhook
}

"""
FunctionWebhookInfo
"""
type FunctionWebhookInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  httpMethod: String!
  name: String!
  workspaceFullPath: String!
  workspaceRelativePath: String!
}

"""
Geo Field Attributes
"""
type GeoFieldTypeAttributes {
  format: String!
  srid: Int
}

"""
Github connection params
"""
type GithubOptions {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""
Github connection params input
"""
input GithubOptionsInput {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""
Google connection params
"""
type GoogleOptions {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""
Google connection params input
"""
input GoogleOptionsInput {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""
GraphQLCreateFileCustomInput
"""
input GraphQLCreateFileCustomInput {
  fileId: String
  filename: String
  public: Boolean
}

"""
GraphQLCreateFileItemInput
"""
input GraphQLCreateFileItemInput {
  create: GraphQLCreateFileCustomInput
}

"""
GraphQLFileItemResponse
"""
type GraphQLFileItemResponse {
  downloadUrl: String
  id: String
}

input GroupByField {
  as: String
  fn: [GroupByFieldFunction]
}

input GroupByFieldFunction {
  abs: Boolean
  aggregate: AggregationFunctionType
  ascii: Boolean
  bitLength: Boolean
  ceil: Boolean
  charLength: Boolean
  crc32: Boolean
  datePart: DatePartFunctionType
  distinct: Boolean
  floor: Boolean
  hex: Boolean
  ifNull: String
  isNull: Boolean
  left: Int
  length: Boolean
  like: PatternFunctionArguments
  locate: LocateFunctionArguments
  lower: Boolean
  lpad: StringPadFunctionArguments
  ltrim: Boolean
  mod: Int
  notLike: PatternFunctionArguments
  nullIf: String
  replace: ReplaceFunctionArguments
  reverse: Boolean
  right: Int
  round: Int
  rpad: StringPadFunctionArguments
  rtrim: Boolean
  sign: Boolean
  substring: SubstringFunctionArguments
  trim: TrimFunctionArguments
  truncate: Int
  upper: Boolean
}

type GroupByResponse {
  ApiTokenGroup(
    after: String
    before: String
    filter: ApiTokenFilter
    first: Int
    groupBy: ApiTokenGroupBy
    last: Int
    orderBy: [ApiTokenOrderBy]
    skip: Int
    sort: [ApiTokenSort!]
  ): ApiTokenListResponse!
  AuthenticationProfileGroup(
    after: String
    before: String
    filter: AuthenticationProfileFilter
    first: Int
    groupBy: AuthenticationProfileGroupBy
    last: Int
    orderBy: [AuthenticationProfileOrderBy]
    skip: Int
    sort: [AuthenticationProfileSort!]
  ): AuthenticationProfileListResponse!
  BigInt: BigInt
  Boolean: Boolean
  BuildingProfileGroup(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
  ): BuildingProfileListResponse!
  CertificationGroup(
    after: String
    before: String
    filter: CertificationFilter
    first: Int
    groupBy: CertificationGroupBy
    last: Int
    orderBy: [CertificationOrderBy]
    skip: Int
    sort: [CertificationSort!]
  ): CertificationListResponse!
  ComplianceRecordGroup(
    after: String
    before: String
    filter: ComplianceRecordFilter
    first: Int
    groupBy: ComplianceRecordGroupBy
    last: Int
    orderBy: [ComplianceRecordOrderBy]
    skip: Int
    sort: [ComplianceRecordSort!]
  ): ComplianceRecordListResponse!
  Date: Date
  DateTime: DateTime
  EnergyEfficiencyGroup(
    after: String
    before: String
    filter: EnergyEfficiencyFilter
    first: Int
    groupBy: EnergyEfficiencyGroupBy
    last: Int
    orderBy: [EnergyEfficiencyOrderBy]
    skip: Int
    sort: [EnergyEfficiencySort!]
  ): EnergyEfficiencyListResponse!
  EnvironmentVariableGroup(
    after: String
    before: String
    filter: EnvironmentVariableFilter
    first: Int
    groupBy: EnvironmentVariableGroupBy
    last: Int
    orderBy: [EnvironmentVariableOrderBy]
    skip: Int
    sort: [EnvironmentVariableSort!]
  ): EnvironmentVariableListResponse!
  EnvironmentalInformationGroup(
    after: String
    before: String
    filter: EnvironmentalInformationFilter
    first: Int
    groupBy: EnvironmentalInformationGroupBy
    last: Int
    orderBy: [EnvironmentalInformationOrderBy]
    skip: Int
    sort: [EnvironmentalInformationSort!]
  ): EnvironmentalInformationListResponse!
  EquipmentInventoryGroup(
    after: String
    before: String
    filter: EquipmentInventoryFilter
    first: Int
    groupBy: EquipmentInventoryGroupBy
    last: Int
    orderBy: [EquipmentInventoryOrderBy]
    skip: Int
    sort: [EquipmentInventorySort!]
  ): EquipmentInventoryListResponse!
  FileGroup(
    after: String
    before: String
    filter: FileFilter
    first: Int
    groupBy: FileGroupBy
    last: Int
    orderBy: [FileOrderBy]
    skip: Int
    sort: [FileSort!]
  ): FileListResponse!
  FilesSettingGroup(
    after: String
    before: String
    filter: FilesSettingFilter
    first: Int
    groupBy: FilesSettingGroupBy
    last: Int
    orderBy: [FilesSettingOrderBy]
    skip: Int
    sort: [FilesSettingSort!]
  ): FilesSettingListResponse!
  Float: Float
  GroupIds: [ID!]
  ID: ID
  ImprovementGroup(
    after: String
    before: String
    filter: ImprovementFilter
    first: Int
    groupBy: ImprovementGroupBy
    last: Int
    orderBy: [ImprovementOrderBy]
    skip: Int
    sort: [ImprovementSort!]
  ): ImprovementListResponse!
  IndoorAirQualityGroup(
    after: String
    before: String
    filter: IndoorAirQualityFilter
    first: Int
    groupBy: IndoorAirQualityGroupBy
    last: Int
    orderBy: [IndoorAirQualityOrderBy]
    skip: Int
    sort: [IndoorAirQualitySort!]
  ): IndoorAirQualityListResponse!
  Int: Int
  JSON: JSON
  MaintenanceRecordGroup(
    after: String
    before: String
    filter: MaintenanceRecordFilter
    first: Int
    groupBy: MaintenanceRecordGroupBy
    last: Int
    orderBy: [MaintenanceRecordOrderBy]
    skip: Int
    sort: [MaintenanceRecordSort!]
  ): MaintenanceRecordListResponse!
  NotificationGroup(
    after: String
    before: String
    filter: NotificationFilter
    first: Int
    groupBy: NotificationGroupBy
    last: Int
    orderBy: [NotificationOrderBy]
    skip: Int
    sort: [NotificationSort!]
  ): NotificationListResponse!
  PermitGroup(
    after: String
    before: String
    filter: PermitFilter
    first: Int
    groupBy: PermitGroupBy
    last: Int
    orderBy: [PermitOrderBy]
    skip: Int
    sort: [PermitSort!]
  ): PermitListResponse!
  ReportGroup(
    after: String
    before: String
    filter: ReportFilter
    first: Int
    groupBy: ReportGroupBy
    last: Int
    orderBy: [ReportOrderBy]
    skip: Int
    sort: [ReportSort!]
  ): ReportListResponse!
  RoleGroup(
    after: String
    before: String
    filter: RoleFilter
    first: Int
    groupBy: RoleGroupBy
    last: Int
    orderBy: [RoleOrderBy]
    skip: Int
    sort: [RoleSort!]
  ): RoleListResponse!
  SearchCriterionGroup(
    after: String
    before: String
    filter: SearchCriterionFilter
    first: Int
    groupBy: SearchCriterionGroupBy
    last: Int
    orderBy: [SearchCriterionOrderBy]
    skip: Int
    sort: [SearchCriterionSort!]
  ): SearchCriterionListResponse!
  SiteDocumentationGroup(
    after: String
    before: String
    filter: SiteDocumentationFilter
    first: Int
    groupBy: SiteDocumentationGroupBy
    last: Int
    orderBy: [SiteDocumentationOrderBy]
    skip: Int
    sort: [SiteDocumentationSort!]
  ): SiteDocumentationListResponse!
  String: String
  SubscriptionTierGroup(
    after: String
    before: String
    filter: SubscriptionTierFilter
    first: Int
    groupBy: SubscriptionTierGroupBy
    last: Int
    orderBy: [SubscriptionTierOrderBy]
    skip: Int
    sort: [SubscriptionTierSort!]
  ): SubscriptionTierListResponse!
  UserGroup(
    after: String
    before: String
    filter: UserFilter
    first: Int
    groupBy: UserGroupBy
    last: Int
    orderBy: [UserOrderBy]
    skip: Int
    sort: [UserSort!]
  ): UserListResponse!
  WorkOrderGroup(
    after: String
    before: String
    filter: WorkOrderFilter
    first: Int
    groupBy: WorkOrderGroupBy
    last: Int
    orderBy: [WorkOrderOrderBy]
    skip: Int
    sort: [WorkOrderSort!]
  ): WorkOrderListResponse!
}

input GroupBySort {
  alias: String!
  direction: SortOrder!
}

input GroupIdentifiersGroupByField {
  as: String!
}

input Having {
  AND: [Having!]
  OR: [Having!]
  alias: String
  bigint: BigIntPredicateHaving
  bool: BoolPredicateHaving
  date: DatePredicateHaving
  datetime: DateTimePredicateHaving
  float: FloatPredicateHaving
  id: IDPredicateHaving
  int: IntPredicateHaving
  string: StringPredicateHaving
}

input IDPredicate {
  contains: ID
  ends_with: ID
  equals: ID
  gt: ID
  gte: ID
  in: [ID!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: ID
  lte: ID
  not_contains: ID
  not_ends_with: ID
  not_equals: ID
  not_in: [ID!]
  not_starts_with: ID
  starts_with: ID
}

input IDPredicateHaving {
  AND: [IDPredicateHaving!]
  OR: [IDPredicateHaving!]
  contains: ID
  ends_with: ID
  equals: ID
  gt: ID
  gte: ID
  in: [ID!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: ID
  lte: ID
  not_contains: ID
  not_ends_with: ID
  not_equals: ID
  not_in: [ID!]
  not_starts_with: ID
  starts_with: ID
}

"""
ImportCSV
"""
input ImportCSV {
  data: ImportCSVData!
  tableId: String!
}

input ImportCSVData {
  fields: String
  hasHeader: Boolean
  matchField: String
  overwrite: Boolean
  tableFields: String
  url: String!
}

"""
ImportedTable
"""
type ImportedTable {
  id: ID!
  name: String!
}

"""
Records of property improvements.
"""
type Improvement {
  BuildingProfile(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
  ): BuildingProfileListResponse
  _description: String
  building_profile_id: BuildingProfile
  cost: Int
  createdAt: DateTime
  date_completed: DateTime
  deletedAt: Int
  description: String
  id: ID
  updatedAt: DateTime
}

"""
Improvement relation input
"""
input ImprovementBuildingProfileManyRelationInput {
  connect: [BuildingProfileKeyFilter!]
}

"""
Improvement relation input
"""
input ImprovementBuildingProfileRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Improvements_BuildingProfileCreateInput]
}

"""
Improvement relation input
"""
input ImprovementBuildingProfileUpdateRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Improvements_BuildingProfileCreateInput]
  disconnect: [BuildingProfileKeyFilter!]
  reconnect: [BuildingProfileKeyFilter!]
  update: [Improvements_BuildingProfileUpdateInput]
}

"""
Improvement relation input
"""
input ImprovementBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
Improvement relation input
"""
input ImprovementBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: Improvement_BuildingProfileCreateInput
}

"""
Improvement relation input
"""
input ImprovementBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: Improvement_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: Improvement_BuildingProfileUpdateInput
}

"""
Improvement create input
"""
input ImprovementCreateInput {
  BuildingProfile: ImprovementBuildingProfileRelationInput
  building_profile_id: ImprovementBuilding_profile_idRelationInput
  cost: Int
  date_completed: DateTime
  description: String
}

"""
Improvement create many input
"""
input ImprovementCreateManyInput {
  BuildingProfile: ImprovementBuildingProfileManyRelationInput
  building_profile_id: ImprovementBuilding_profile_idManyRelationInput
  cost: Int
  date_completed: DateTime
  description: String
}

"""
Improvement delete input
"""
input ImprovementDeleteInput {
  force: Boolean
  id: ID
}

"""
ImprovementFieldsPermissions create input
"""
input ImprovementFieldsPermissions {
  cost: Boolean
  createdAt: Boolean
  date_completed: Boolean
  description: Boolean
  updatedAt: Boolean
}

input ImprovementFilter {
  AND: [ImprovementFilter!]
  BuildingProfile: BuildingProfileRelationFilter
  OR: [ImprovementFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  cost: IntPredicate
  createdAt: DateTimePredicate
  date_completed: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  updatedAt: DateTimePredicate
}

input ImprovementGroupBy {
  first: Int
  having: Having
  last: Int
  query: ImprovementGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input ImprovementGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  cost: [GroupByField!]
  createdAt: [GroupByField!]
  date_completed: [GroupByField!]
  description: [GroupByField!]
  id: [GroupByField!]
  updatedAt: [GroupByField!]
}

input ImprovementKeyFilter {
  id: ID
}

"""
ImprovementListResponse output
"""
type ImprovementListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Improvement!]!
}

"""
ImprovementManyResponse output
"""
type ImprovementManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [Improvement!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum ImprovementOrderBy {
  cost_ASC
  cost_DESC
  createdAt_ASC
  createdAt_DESC
  date_completed_ASC
  date_completed_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
Improvement subscription payload
"""
type ImprovementPayload {
  mutation: MutationType!
  node: Improvement
  previousValues: Improvement
  updatedFields: [String]
}

input ImprovementSort {
  building_profile_id: BuildingProfileSort
  cost: SortOrder
  createdAt: SortOrder
  date_completed: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

"""
Improvement subscription filter
"""
input ImprovementSubscriptionFilter {
  mutation_in: [MutationType]
  node: ImprovementFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Improvement update input
"""
input ImprovementUpdateByFilterInput {
  cost: [UpdateByFilterIntInput]
  description: [UpdateByFilterStringInput]
}

"""
Improvement update input
"""
input ImprovementUpdateInput {
  BuildingProfile: ImprovementBuildingProfileUpdateRelationInput
  building_profile_id: ImprovementBuilding_profile_idUpdateRelationInput
  cost: Int
  date_completed: DateTime
  description: String
  id: ID
}

"""
BuildingProfile create input from Improvement
"""
input Improvement_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from Improvement
"""
input Improvement_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input Improvement_PermissionFilter {
  AND: [Improvement_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionRelationFilter
  OR: [Improvement_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  cost: IntPredicate
  createdAt: DateTimePredicate
  date_completed: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  updatedAt: DateTimePredicate
}

"""
BuildingProfile create input from improvements
"""
input Improvements_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from improvements
"""
input Improvements_BuildingProfileUpdateInput {
  data: BuildingProfileUpdateInput!
  filter: BuildingProfileKeyFilter
}

"""
Inbox Events List Filter
"""
input InboxEventsListFilter {
  isCompleted: IntPredicate
}

"""
Table Create Index Input
"""
input IndexCreateInput {
  columns: [TableIndexColumnInput!]!
  force: Boolean
  name: String
  tableId: ID!
  type: TableIndexType!
}

"""
Table Delete Index Input
"""
input IndexDeleteInput {
  id: ID!
}

"""
Table Update Index Input
"""
input IndexUpdateInput {
  columns: [TableIndexColumnInput!]
  force: Boolean
  id: ID!
  name: String
  type: TableIndexType
}

"""
Data on the indoor air quality of a building.
"""
type IndoorAirQuality {
  BuildingProfile: BuildingProfile
  _description: String
  air_quality_level: String
  building_profile_id: BuildingProfile
  createdAt: DateTime
  deletedAt: Int
  id: ID
  measurement_date: DateTime
  pollutant_levels: JSON
  updatedAt: DateTime
}

"""
IndoorAirQuality relation input
"""
input IndoorAirQualityBuildingProfileManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
IndoorAirQuality relation input
"""
input IndoorAirQualityBuildingProfileRelationInput {
  connect: BuildingProfileKeyFilter
  create: Indoor_air_quality_BuildingProfileCreateInput
}

"""
IndoorAirQuality relation input
"""
input IndoorAirQualityBuildingProfileUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: Indoor_air_quality_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: Indoor_air_quality_BuildingProfileUpdateInput
}

"""
IndoorAirQuality relation input
"""
input IndoorAirQualityBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
IndoorAirQuality relation input
"""
input IndoorAirQualityBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: IndoorAirQuality_BuildingProfileCreateInput
}

"""
IndoorAirQuality relation input
"""
input IndoorAirQualityBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: IndoorAirQuality_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: IndoorAirQuality_BuildingProfileUpdateInput
}

"""
IndoorAirQuality create input
"""
input IndoorAirQualityCreateInput {
  BuildingProfile: IndoorAirQualityBuildingProfileRelationInput
  air_quality_level: String
  building_profile_id: IndoorAirQualityBuilding_profile_idRelationInput
  measurement_date: DateTime
  pollutant_levels: JSON
}

"""
IndoorAirQuality create many input
"""
input IndoorAirQualityCreateManyInput {
  BuildingProfile: IndoorAirQualityBuildingProfileManyRelationInput
  air_quality_level: String
  building_profile_id: IndoorAirQualityBuilding_profile_idManyRelationInput
  measurement_date: DateTime
  pollutant_levels: JSON
}

"""
IndoorAirQuality delete input
"""
input IndoorAirQualityDeleteInput {
  force: Boolean
  id: ID
}

"""
IndoorAirQualityFieldsPermissions create input
"""
input IndoorAirQualityFieldsPermissions {
  air_quality_level: Boolean
  createdAt: Boolean
  measurement_date: Boolean
  pollutant_levels: Boolean
  updatedAt: Boolean
}

input IndoorAirQualityFilter {
  AND: [IndoorAirQualityFilter!]
  BuildingProfile: BuildingProfileFilter
  OR: [IndoorAirQualityFilter!]
  _fullText: String
  air_quality_level: StringPredicate
  building_profile_id: BuildingProfileFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  measurement_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

input IndoorAirQualityGroupBy {
  first: Int
  having: Having
  last: Int
  query: IndoorAirQualityGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input IndoorAirQualityGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  air_quality_level: [GroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  createdAt: [GroupByField!]
  id: [GroupByField!]
  measurement_date: [GroupByField!]
  pollutant_levels: [GroupByField!]
  updatedAt: [GroupByField!]
}

input IndoorAirQualityKeyFilter {
  id: ID
}

"""
IndoorAirQualityListResponse output
"""
type IndoorAirQualityListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [IndoorAirQuality!]!
}

"""
IndoorAirQualityManyResponse output
"""
type IndoorAirQualityManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [IndoorAirQuality!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum IndoorAirQualityOrderBy {
  air_quality_level_ASC
  air_quality_level_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  measurement_date_ASC
  measurement_date_DESC
  pollutant_levels_ASC
  pollutant_levels_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
IndoorAirQuality subscription payload
"""
type IndoorAirQualityPayload {
  mutation: MutationType!
  node: IndoorAirQuality
  previousValues: IndoorAirQuality
  updatedFields: [String]
}

input IndoorAirQualitySort {
  BuildingProfile: BuildingProfileSort
  air_quality_level: SortOrder
  building_profile_id: BuildingProfileSort
  createdAt: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  measurement_date: SortOrder
  updatedAt: SortOrder
}

"""
IndoorAirQuality subscription filter
"""
input IndoorAirQualitySubscriptionFilter {
  mutation_in: [MutationType]
  node: IndoorAirQualityFilter
  updatedFields: UpdatedFieldsFilter
}

"""
IndoorAirQuality update input
"""
input IndoorAirQualityUpdateByFilterInput {
  air_quality_level: [UpdateByFilterStringInput]
  pollutant_levels: [UpdateByFilterJsonInput]
}

"""
IndoorAirQuality update input
"""
input IndoorAirQualityUpdateInput {
  BuildingProfile: IndoorAirQualityBuildingProfileUpdateRelationInput
  air_quality_level: String
  building_profile_id: IndoorAirQualityBuilding_profile_idUpdateRelationInput
  id: ID
  measurement_date: DateTime
  pollutant_levels: JSON
}

"""
BuildingProfile create input from IndoorAirQuality
"""
input IndoorAirQuality_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from IndoorAirQuality
"""
input IndoorAirQuality_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input IndoorAirQuality_PermissionFilter {
  AND: [IndoorAirQuality_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionFilter
  OR: [IndoorAirQuality_PermissionFilter!]
  _fullText: String
  air_quality_level: StringPredicate
  building_profile_id: BuildingProfile_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  measurement_date: DateTimePredicate
  updatedAt: DateTimePredicate
}

"""
BuildingProfile create input from indoor_air_quality
"""
input Indoor_air_quality_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from indoor_air_quality
"""
input Indoor_air_quality_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input IntPredicate {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Int
  lte: Int
  not_equals: Int
  not_in: [Int!]
}

input IntPredicateHaving {
  AND: [IntPredicateHaving!]
  OR: [IntPredicateHaving!]
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Int
  lte: Int
  not_equals: Int
  not_in: [Int!]
}

type IntrospectionQueryResponse {
  url: String!
}

enum InvitationRoleEnum {
  ADMIN
  EDITOR
  VIEWER
}

"""
Invited By Name
"""
type InvitedByName {
  email: String
  firstName: String
  lastName: String
  projectId: String
  projectName: String
  workspaceName: String
}

"""
InvokeData
"""
input InvokeData {
  functionName: String!
  inputArgs: String
  nodeVersion: String
}

"""
InvokeFunctionResponse
"""
type InvokeFunctionResponse {
  responseData: String!
}

"""
IsSocialUser
"""
input IsSocialUser {
  email: String!
}

type IsSocialUserResponse {
  isSocialUser: Boolean
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input LocateFunctionArguments {
  pos: Int
  str: String!
}

"""
LoginResponse
"""
type LoginResponse {
  auth: Auth
  success: Boolean
  workspaces: [WorkspaceInfo!]
}

"""
Details maintenance activities performed on a building.
"""
type MaintenanceRecord {
  BuildingProfile(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
  ): BuildingProfileListResponse
  _description: String
  building_profile_id: BuildingProfile
  createdAt: DateTime
  date_performed: DateTime
  deletedAt: Int
  description: String
  id: ID
  updatedAt: DateTime
  vendor_id: User
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordBuildingProfileManyRelationInput {
  connect: [BuildingProfileKeyFilter!]
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordBuildingProfileRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Maintenance_records_BuildingProfileCreateInput]
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordBuildingProfileUpdateRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Maintenance_records_BuildingProfileCreateInput]
  disconnect: [BuildingProfileKeyFilter!]
  reconnect: [BuildingProfileKeyFilter!]
  update: [Maintenance_records_BuildingProfileUpdateInput]
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: MaintenanceRecord_BuildingProfileCreateInput
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: MaintenanceRecord_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: MaintenanceRecord_BuildingProfileUpdateInput
}

"""
MaintenanceRecord create input
"""
input MaintenanceRecordCreateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idRelationInput
}

"""
MaintenanceRecord create many input
"""
input MaintenanceRecordCreateManyInput {
  BuildingProfile: MaintenanceRecordBuildingProfileManyRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idManyRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idManyRelationInput
}

"""
MaintenanceRecord delete input
"""
input MaintenanceRecordDeleteInput {
  force: Boolean
  id: ID
}

"""
MaintenanceRecordFieldsPermissions create input
"""
input MaintenanceRecordFieldsPermissions {
  createdAt: Boolean
  date_performed: Boolean
  description: Boolean
  updatedAt: Boolean
}

input MaintenanceRecordFilter {
  AND: [MaintenanceRecordFilter!]
  BuildingProfile: BuildingProfileRelationFilter
  OR: [MaintenanceRecordFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  createdAt: DateTimePredicate
  date_performed: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  updatedAt: DateTimePredicate
  vendor_id: UserFilter
}

input MaintenanceRecordGroupBy {
  first: Int
  having: Having
  last: Int
  query: MaintenanceRecordGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input MaintenanceRecordGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  createdAt: [GroupByField!]
  date_performed: [GroupByField!]
  description: [GroupByField!]
  id: [GroupByField!]
  updatedAt: [GroupByField!]
  vendor_id: UserGroupByQuery
}

input MaintenanceRecordKeyFilter {
  id: ID
}

"""
MaintenanceRecordListResponse output
"""
type MaintenanceRecordListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [MaintenanceRecord!]!
}

"""
MaintenanceRecordManyResponse output
"""
type MaintenanceRecordManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [MaintenanceRecord!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum MaintenanceRecordOrderBy {
  createdAt_ASC
  createdAt_DESC
  date_performed_ASC
  date_performed_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
MaintenanceRecord subscription payload
"""
type MaintenanceRecordPayload {
  mutation: MutationType!
  node: MaintenanceRecord
  previousValues: MaintenanceRecord
  updatedFields: [String]
}

input MaintenanceRecordSort {
  building_profile_id: BuildingProfileSort
  createdAt: SortOrder
  date_performed: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  vendor_id: UserSort
}

"""
MaintenanceRecord subscription filter
"""
input MaintenanceRecordSubscriptionFilter {
  mutation_in: [MutationType]
  node: MaintenanceRecordFilter
  updatedFields: UpdatedFieldsFilter
}

"""
MaintenanceRecord update input
"""
input MaintenanceRecordUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
}

"""
MaintenanceRecord update input
"""
input MaintenanceRecordUpdateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileUpdateRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idUpdateRelationInput
  date_performed: DateTime
  description: String
  id: ID
  vendor_id: MaintenanceRecordVendor_idUpdateRelationInput
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordVendor_idManyRelationInput {
  connect: UserKeyFilter
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordVendor_idRelationInput {
  connect: UserKeyFilter
  create: MaintenanceRecord_UserCreateInput
}

"""
MaintenanceRecord relation input
"""
input MaintenanceRecordVendor_idUpdateRelationInput {
  connect: UserKeyFilter
  create: MaintenanceRecord_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: MaintenanceRecord_UserUpdateInput
}

"""
BuildingProfile create input from MaintenanceRecord
"""
input MaintenanceRecord_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from MaintenanceRecord
"""
input MaintenanceRecord_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input MaintenanceRecord_PermissionFilter {
  AND: [MaintenanceRecord_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionRelationFilter
  OR: [MaintenanceRecord_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  createdAt: DateTimePredicate
  date_performed: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  updatedAt: DateTimePredicate
  vendor_id: User_PermissionFilter
}

"""
Users create input from MaintenanceRecord
"""
input MaintenanceRecord_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput
  MaintenanceRecord: UsersMaintenanceRecordRelationInput
  Notification: UsersNotificationRelationInput!
  Report: UsersReportRelationInput!
  SearchCriteria: UsersSearchCriteriaRelationInput!
  WorkOrder: UsersWorkOrderRelationInput!
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from MaintenanceRecord
"""
input MaintenanceRecord_UserUpdateInput {
  BuildingProfile: UsersBuildingProfileUpdateRelationInput
  MaintenanceRecord: UsersMaintenanceRecordUpdateRelationInput
  Notification: UsersNotificationUpdateRelationInput
  Report: UsersReportUpdateRelationInput
  SearchCriteria: UsersSearchCriteriaUpdateRelationInput
  WorkOrder: UsersWorkOrderUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

"""
BuildingProfile create input from maintenance_records
"""
input Maintenance_records_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from maintenance_records
"""
input Maintenance_records_BuildingProfileUpdateInput {
  data: BuildingProfileUpdateInput!
  filter: BuildingProfileKeyFilter
}

"""
MissingRelation
"""
type MissingRelation {
  table: String!
}

"""
MissingRelation Field Attributes
"""
type MissingRelationFieldTypeAttributes {
  missingTable: String!
}

type Mutation {
  ImportCSV(data: ImportCSV!): AsyncSession
  IsSocialUser(data: IsSocialUser!): IsSocialUserResponse
  apiTokenCreate(data: ApiTokenCreateInput!): ApiTokenResponse!
  apiTokenDelete(
    data: ApiTokenDeleteInput
    filter: ApiTokenKeyFilter
    force: Boolean
  ): SuccessResponse
  apiTokenDeleteByFilter(
    filter: ApiTokenFilter!
    force: Boolean
  ): SuccessResponse
  apiTokenDestroy(filter: ApiTokenKeyFilter, force: Boolean): SuccessResponse
  apiTokenDestroyByFilter(
    filter: ApiTokenFilter!
    force: Boolean
  ): SuccessResponse
  apiTokenRestore(id: String!): ApiToken!
  apiTokenUpdate(
    data: ApiTokenUpdateInput!
    destroyDetached: Boolean
    filter: ApiTokenKeyFilter
    force: Boolean
  ): ApiToken!
  apiTokenUpdateByFilter(
    data: ApiTokenUpdateByFilterInput!
    filter: ApiTokenFilter
  ): ApiTokenManyResponse!
  applicationDelete(data: ApplicationDeleteMutationInput!): SuccessResponse
    @deprecated(
      reason: "No longer supported. Use `system.applicationDelete` instead."
    )
  applicationInstall(data: ApplicationInstallInput!): Application
    @deprecated(
      reason: "No longer supported. Use `system.applicationInstall` instead."
    )
  applicationUpdate(data: ApplicationUpdateInput!): Application
    @deprecated(
      reason: "No longer supported. Use `system.applicationUpdate` instead."
    )
  authenticationProfileCreate(
    data: AuthenticationProfileCreateInput!
  ): AuthenticationProfile!
  authenticationProfileCreateMany(
    data: [AuthenticationProfileCreateManyInput]!
  ): AuthenticationProfileManyResponse!
  authenticationProfileDelete(
    data: AuthenticationProfileDeleteInput
    filter: AuthenticationProfileKeyFilter
    force: Boolean
  ): SuccessResponse
  authenticationProfileDeleteByFilter(
    filter: AuthenticationProfileFilter!
    force: Boolean
  ): SuccessResponse
  authenticationProfileDestroy(
    filter: AuthenticationProfileKeyFilter
    force: Boolean
  ): SuccessResponse
  authenticationProfileDestroyByFilter(
    filter: AuthenticationProfileFilter!
    force: Boolean
  ): SuccessResponse
  authenticationProfileRestore(id: String!): AuthenticationProfile!
  authenticationProfileUpdate(
    data: AuthenticationProfileUpdateInput!
    destroyDetached: Boolean
    filter: AuthenticationProfileKeyFilter
    force: Boolean
  ): AuthenticationProfile!
  authenticationProfileUpdateByFilter(
    data: AuthenticationProfileUpdateByFilterInput!
    filter: AuthenticationProfileFilter
  ): AuthenticationProfileManyResponse!
  authenticationSettingsUpdate(
    data: AuthenticationSettingUpdateInput!
  ): AuthenticationSetting!
  billingPlanUpdate(
    data: BillingPlanUpdateMutationInput!
  ): BillingCurrentPlanResponse
    @deprecated(
      reason: "No longer supported. Use `system.billingPlanUpdate` instead."
    )
  buildingProfileCreate(data: BuildingProfileCreateInput!): BuildingProfile!
  buildingProfileCreateMany(
    data: [BuildingProfileCreateManyInput]!
  ): BuildingProfileManyResponse!
  buildingProfileDelete(
    data: BuildingProfileDeleteInput
    filter: BuildingProfileKeyFilter
    force: Boolean
  ): SuccessResponse
  buildingProfileDeleteByFilter(
    filter: BuildingProfileFilter!
    force: Boolean
  ): SuccessResponse
  buildingProfileDestroy(
    filter: BuildingProfileKeyFilter
    force: Boolean
  ): SuccessResponse
  buildingProfileDestroyByFilter(
    filter: BuildingProfileFilter!
    force: Boolean
  ): SuccessResponse
  buildingProfileRestore(id: String!): BuildingProfile!
  buildingProfileUpdate(
    data: BuildingProfileUpdateInput!
    destroyDetached: Boolean
    filter: BuildingProfileKeyFilter
    force: Boolean
  ): BuildingProfile!
  buildingProfileUpdateByFilter(
    data: BuildingProfileUpdateByFilterInput!
    filter: BuildingProfileFilter
  ): BuildingProfileManyResponse!
  certificationCreate(data: CertificationCreateInput!): Certification!
  certificationCreateMany(
    data: [CertificationCreateManyInput]!
  ): CertificationManyResponse!
  certificationDelete(
    data: CertificationDeleteInput
    filter: CertificationKeyFilter
    force: Boolean
  ): SuccessResponse
  certificationDeleteByFilter(
    filter: CertificationFilter!
    force: Boolean
  ): SuccessResponse
  certificationDestroy(
    filter: CertificationKeyFilter
    force: Boolean
  ): SuccessResponse
  certificationDestroyByFilter(
    filter: CertificationFilter!
    force: Boolean
  ): SuccessResponse
  certificationRestore(id: String!): Certification!
  certificationUpdate(
    data: CertificationUpdateInput!
    destroyDetached: Boolean
    filter: CertificationKeyFilter
    force: Boolean
  ): Certification!
  certificationUpdateByFilter(
    data: CertificationUpdateByFilterInput!
    filter: CertificationFilter
  ): CertificationManyResponse!
  complianceRecordCreate(data: ComplianceRecordCreateInput!): ComplianceRecord!
  complianceRecordCreateMany(
    data: [ComplianceRecordCreateManyInput]!
  ): ComplianceRecordManyResponse!
  complianceRecordDelete(
    data: ComplianceRecordDeleteInput
    filter: ComplianceRecordKeyFilter
    force: Boolean
  ): SuccessResponse
  complianceRecordDeleteByFilter(
    filter: ComplianceRecordFilter!
    force: Boolean
  ): SuccessResponse
  complianceRecordDestroy(
    filter: ComplianceRecordKeyFilter
    force: Boolean
  ): SuccessResponse
  complianceRecordDestroyByFilter(
    filter: ComplianceRecordFilter!
    force: Boolean
  ): SuccessResponse
  complianceRecordRestore(id: String!): ComplianceRecord!
  complianceRecordUpdate(
    data: ComplianceRecordUpdateInput!
    destroyDetached: Boolean
    filter: ComplianceRecordKeyFilter
    force: Boolean
  ): ComplianceRecord!
  complianceRecordUpdateByFilter(
    data: ComplianceRecordUpdateByFilterInput!
    filter: ComplianceRecordFilter
  ): ComplianceRecordManyResponse!
  deploy(data: DeployingBuildInput): Boolean
    @deprecated(reason: "No longer supported. Use `system.deploy` instead.")
  energyEfficiencyCreate(data: EnergyEfficiencyCreateInput!): EnergyEfficiency!
  energyEfficiencyCreateMany(
    data: [EnergyEfficiencyCreateManyInput]!
  ): EnergyEfficiencyManyResponse!
  energyEfficiencyDelete(
    data: EnergyEfficiencyDeleteInput
    filter: EnergyEfficiencyKeyFilter
    force: Boolean
  ): SuccessResponse
  energyEfficiencyDeleteByFilter(
    filter: EnergyEfficiencyFilter!
    force: Boolean
  ): SuccessResponse
  energyEfficiencyDestroy(
    filter: EnergyEfficiencyKeyFilter
    force: Boolean
  ): SuccessResponse
  energyEfficiencyDestroyByFilter(
    filter: EnergyEfficiencyFilter!
    force: Boolean
  ): SuccessResponse
  energyEfficiencyRestore(id: String!): EnergyEfficiency!
  energyEfficiencyUpdate(
    data: EnergyEfficiencyUpdateInput!
    destroyDetached: Boolean
    filter: EnergyEfficiencyKeyFilter
    force: Boolean
  ): EnergyEfficiency!
  energyEfficiencyUpdateByFilter(
    data: EnergyEfficiencyUpdateByFilterInput!
    filter: EnergyEfficiencyFilter
  ): EnergyEfficiencyManyResponse!
  environmentVariableCreate(
    data: EnvironmentVariableCreateInput!
  ): EnvironmentVariable!
  environmentVariableCreateMany(
    data: [EnvironmentVariableCreateManyInput]!
  ): EnvironmentVariableManyResponse!
  environmentVariableDelete(
    data: EnvironmentVariableDeleteInput
    filter: EnvironmentVariableKeyFilter
    force: Boolean
  ): SuccessResponse
  environmentVariableDeleteByFilter(
    filter: EnvironmentVariableFilter!
    force: Boolean
  ): SuccessResponse
  environmentVariableDestroy(
    filter: EnvironmentVariableKeyFilter
    force: Boolean
  ): SuccessResponse
  environmentVariableDestroyByFilter(
    filter: EnvironmentVariableFilter!
    force: Boolean
  ): SuccessResponse
  environmentVariableRestore(id: String!): EnvironmentVariable!
  environmentVariableUpdate(
    data: EnvironmentVariableUpdateInput!
    destroyDetached: Boolean
    filter: EnvironmentVariableKeyFilter
    force: Boolean
  ): EnvironmentVariable!
  environmentVariableUpdateByFilter(
    data: EnvironmentVariableUpdateByFilterInput!
    filter: EnvironmentVariableFilter
  ): EnvironmentVariableManyResponse!
  environmentalInformationCreate(
    data: EnvironmentalInformationCreateInput!
  ): EnvironmentalInformation!
  environmentalInformationCreateMany(
    data: [EnvironmentalInformationCreateManyInput]!
  ): EnvironmentalInformationManyResponse!
  environmentalInformationDelete(
    data: EnvironmentalInformationDeleteInput
    filter: EnvironmentalInformationKeyFilter
    force: Boolean
  ): SuccessResponse
  environmentalInformationDeleteByFilter(
    filter: EnvironmentalInformationFilter!
    force: Boolean
  ): SuccessResponse
  environmentalInformationDestroy(
    filter: EnvironmentalInformationKeyFilter
    force: Boolean
  ): SuccessResponse
  environmentalInformationDestroyByFilter(
    filter: EnvironmentalInformationFilter!
    force: Boolean
  ): SuccessResponse
  environmentalInformationRestore(id: String!): EnvironmentalInformation!
  environmentalInformationUpdate(
    data: EnvironmentalInformationUpdateInput!
    destroyDetached: Boolean
    filter: EnvironmentalInformationKeyFilter
    force: Boolean
  ): EnvironmentalInformation!
  environmentalInformationUpdateByFilter(
    data: EnvironmentalInformationUpdateByFilterInput!
    filter: EnvironmentalInformationFilter
  ): EnvironmentalInformationManyResponse!
  equipmentInventoryCreate(
    data: EquipmentInventoryCreateInput!
  ): EquipmentInventory!
  equipmentInventoryCreateMany(
    data: [EquipmentInventoryCreateManyInput]!
  ): EquipmentInventoryManyResponse!
  equipmentInventoryDelete(
    data: EquipmentInventoryDeleteInput
    filter: EquipmentInventoryKeyFilter
    force: Boolean
  ): SuccessResponse
  equipmentInventoryDeleteByFilter(
    filter: EquipmentInventoryFilter!
    force: Boolean
  ): SuccessResponse
  equipmentInventoryDestroy(
    filter: EquipmentInventoryKeyFilter
    force: Boolean
  ): SuccessResponse
  equipmentInventoryDestroyByFilter(
    filter: EquipmentInventoryFilter!
    force: Boolean
  ): SuccessResponse
  equipmentInventoryRestore(id: String!): EquipmentInventory!
  equipmentInventoryUpdate(
    data: EquipmentInventoryUpdateInput!
    destroyDetached: Boolean
    filter: EquipmentInventoryKeyFilter
    force: Boolean
  ): EquipmentInventory!
  equipmentInventoryUpdateByFilter(
    data: EquipmentInventoryUpdateByFilterInput!
    filter: EquipmentInventoryFilter
  ): EquipmentInventoryManyResponse!
  fieldCreate(data: TableFieldCreateInput!): TableField!
    @deprecated(
      reason: "No longer supported. Use `system.fieldCreate` instead."
    )
  fieldDelete(data: TableFieldDeleteInput!): SuccessResponse!
    @deprecated(
      reason: "No longer supported. Use `system.fieldDelete` instead."
    )
  fieldUpdate(data: TableFieldUpdateInput!): TableField!
    @deprecated(
      reason: "No longer supported. Use `system.fieldUpdate` instead."
    )
  fieldUpdatePosition(data: TableFieldPositionUpdateInput!): SuccessResponse!
    @deprecated(
      reason: "No longer supported. Use `system.fieldUpdatePosition` instead."
    )
  fileCreate(data: FileCreateInput!): File!
  fileCreateMany(data: [FileCreateManyInput]!): FileManyResponse!
  fileDelete(
    data: FileDeleteInput
    filter: FileKeyFilter
    force: Boolean
  ): SuccessResponse
  fileDeleteByFilter(filter: FileFilter!, force: Boolean): SuccessResponse
  fileDestroy(filter: FileKeyFilter, force: Boolean): SuccessResponse
  fileDestroyByFilter(filter: FileFilter!, force: Boolean): SuccessResponse
  fileRestore(id: String!): File!
  fileUpdate(
    data: FileUpdateInput!
    destroyDetached: Boolean
    filter: FileKeyFilter
    force: Boolean
  ): File!
  fileUpdateByFilter(
    data: FileUpdateByFilterInput!
    filter: FileFilter
  ): FileManyResponse!
  filesSettingCreate(data: FilesSettingCreateInput!): FilesSetting!
  filesSettingCreateMany(
    data: [FilesSettingCreateManyInput]!
  ): FilesSettingManyResponse!
  filesSettingDelete(
    data: FilesSettingDeleteInput
    filter: FilesSettingKeyFilter
    force: Boolean
  ): SuccessResponse
  filesSettingDeleteByFilter(
    filter: FilesSettingFilter!
    force: Boolean
  ): SuccessResponse
  filesSettingDestroy(
    filter: FilesSettingKeyFilter
    force: Boolean
  ): SuccessResponse
  filesSettingDestroyByFilter(
    filter: FilesSettingFilter!
    force: Boolean
  ): SuccessResponse
  filesSettingRestore(id: String!): FilesSetting!
  filesSettingUpdate(
    data: FilesSettingUpdateInput!
    destroyDetached: Boolean
    filter: FilesSettingKeyFilter
    force: Boolean
  ): FilesSetting!
  filesSettingUpdateByFilter(
    data: FilesSettingUpdateByFilterInput!
    filter: FilesSettingFilter
  ): FilesSettingManyResponse!
  improvementCreate(data: ImprovementCreateInput!): Improvement!
  improvementCreateMany(
    data: [ImprovementCreateManyInput]!
  ): ImprovementManyResponse!
  improvementDelete(
    data: ImprovementDeleteInput
    filter: ImprovementKeyFilter
    force: Boolean
  ): SuccessResponse
  improvementDeleteByFilter(
    filter: ImprovementFilter!
    force: Boolean
  ): SuccessResponse
  improvementDestroy(
    filter: ImprovementKeyFilter
    force: Boolean
  ): SuccessResponse
  improvementDestroyByFilter(
    filter: ImprovementFilter!
    force: Boolean
  ): SuccessResponse
  improvementRestore(id: String!): Improvement!
  improvementUpdate(
    data: ImprovementUpdateInput!
    destroyDetached: Boolean
    filter: ImprovementKeyFilter
    force: Boolean
  ): Improvement!
  improvementUpdateByFilter(
    data: ImprovementUpdateByFilterInput!
    filter: ImprovementFilter
  ): ImprovementManyResponse!
  indexCreate(data: IndexCreateInput!): TableIndex!
  indexDelete(data: IndexDeleteInput!): SuccessResponse
  indexUpdate(data: IndexUpdateInput!): TableIndex!
  indoorAirQualityCreate(data: IndoorAirQualityCreateInput!): IndoorAirQuality!
  indoorAirQualityCreateMany(
    data: [IndoorAirQualityCreateManyInput]!
  ): IndoorAirQualityManyResponse!
  indoorAirQualityDelete(
    data: IndoorAirQualityDeleteInput
    filter: IndoorAirQualityKeyFilter
    force: Boolean
  ): SuccessResponse
  indoorAirQualityDeleteByFilter(
    filter: IndoorAirQualityFilter!
    force: Boolean
  ): SuccessResponse
  indoorAirQualityDestroy(
    filter: IndoorAirQualityKeyFilter
    force: Boolean
  ): SuccessResponse
  indoorAirQualityDestroyByFilter(
    filter: IndoorAirQualityFilter!
    force: Boolean
  ): SuccessResponse
  indoorAirQualityRestore(id: String!): IndoorAirQuality!
  indoorAirQualityUpdate(
    data: IndoorAirQualityUpdateInput!
    destroyDetached: Boolean
    filter: IndoorAirQualityKeyFilter
    force: Boolean
  ): IndoorAirQuality!
  indoorAirQualityUpdateByFilter(
    data: IndoorAirQualityUpdateByFilterInput!
    filter: IndoorAirQualityFilter
  ): IndoorAirQualityManyResponse!
  invoke(data: InvokeData): InvokeFunctionResponse
    @deprecated(reason: "No longer supported. Use `system.invoke` instead.")
  maintenanceRecordCreate(
    data: MaintenanceRecordCreateInput!
  ): MaintenanceRecord!
  maintenanceRecordCreateMany(
    data: [MaintenanceRecordCreateManyInput]!
  ): MaintenanceRecordManyResponse!
  maintenanceRecordDelete(
    data: MaintenanceRecordDeleteInput
    filter: MaintenanceRecordKeyFilter
    force: Boolean
  ): SuccessResponse
  maintenanceRecordDeleteByFilter(
    filter: MaintenanceRecordFilter!
    force: Boolean
  ): SuccessResponse
  maintenanceRecordDestroy(
    filter: MaintenanceRecordKeyFilter
    force: Boolean
  ): SuccessResponse
  maintenanceRecordDestroyByFilter(
    filter: MaintenanceRecordFilter!
    force: Boolean
  ): SuccessResponse
  maintenanceRecordRestore(id: String!): MaintenanceRecord!
  maintenanceRecordUpdate(
    data: MaintenanceRecordUpdateInput!
    destroyDetached: Boolean
    filter: MaintenanceRecordKeyFilter
    force: Boolean
  ): MaintenanceRecord!
  maintenanceRecordUpdateByFilter(
    data: MaintenanceRecordUpdateByFilterInput!
    filter: MaintenanceRecordFilter
  ): MaintenanceRecordManyResponse!
  notificationCreate(data: NotificationCreateInput!): Notification!
  notificationCreateMany(
    data: [NotificationCreateManyInput]!
  ): NotificationManyResponse!
  notificationDelete(
    data: NotificationDeleteInput
    filter: NotificationKeyFilter
    force: Boolean
  ): SuccessResponse
  notificationDeleteByFilter(
    filter: NotificationFilter!
    force: Boolean
  ): SuccessResponse
  notificationDestroy(
    filter: NotificationKeyFilter
    force: Boolean
  ): SuccessResponse
  notificationDestroyByFilter(
    filter: NotificationFilter!
    force: Boolean
  ): SuccessResponse
  notificationRestore(id: String!): Notification!
  notificationUpdate(
    data: NotificationUpdateInput!
    destroyDetached: Boolean
    filter: NotificationKeyFilter
    force: Boolean
  ): Notification!
  notificationUpdateByFilter(
    data: NotificationUpdateByFilterInput!
    filter: NotificationFilter
  ): NotificationManyResponse!
  permitCreate(data: PermitCreateInput!): Permit!
  permitCreateMany(data: [PermitCreateManyInput]!): PermitManyResponse!
  permitDelete(
    data: PermitDeleteInput
    filter: PermitKeyFilter
    force: Boolean
  ): SuccessResponse
  permitDeleteByFilter(filter: PermitFilter!, force: Boolean): SuccessResponse
  permitDestroy(filter: PermitKeyFilter, force: Boolean): SuccessResponse
  permitDestroyByFilter(filter: PermitFilter!, force: Boolean): SuccessResponse
  permitRestore(id: String!): Permit!
  permitUpdate(
    data: PermitUpdateInput!
    destroyDetached: Boolean
    filter: PermitKeyFilter
    force: Boolean
  ): Permit!
  permitUpdateByFilter(
    data: PermitUpdateByFilterInput!
    filter: PermitFilter
  ): PermitManyResponse!
  prepareDeploy: DeployDataResponse!
    @deprecated(
      reason: "No longer supported. Use `system.prepareDeploy` instead."
    )
  reportCreate(data: ReportCreateInput!): Report!
  reportCreateMany(data: [ReportCreateManyInput]!): ReportManyResponse!
  reportDelete(
    data: ReportDeleteInput
    filter: ReportKeyFilter
    force: Boolean
  ): SuccessResponse
  reportDeleteByFilter(filter: ReportFilter!, force: Boolean): SuccessResponse
  reportDestroy(filter: ReportKeyFilter, force: Boolean): SuccessResponse
  reportDestroyByFilter(filter: ReportFilter!, force: Boolean): SuccessResponse
  reportRestore(id: String!): Report!
  reportUpdate(
    data: ReportUpdateInput!
    destroyDetached: Boolean
    filter: ReportKeyFilter
    force: Boolean
  ): Report!
  reportUpdateByFilter(
    data: ReportUpdateByFilterInput!
    filter: ReportFilter
  ): ReportManyResponse!
  roleCreate(data: RoleCreateInput!): Role!
  roleCreateMany(data: [RoleCreateManyInput]!): RoleManyResponse!
  roleDelete(
    data: RoleDeleteInput
    filter: RoleKeyFilter
    force: Boolean
  ): SuccessResponse
  roleDeleteByFilter(filter: RoleFilter!, force: Boolean): SuccessResponse
  roleDestroy(filter: RoleKeyFilter, force: Boolean): SuccessResponse
  roleDestroyByFilter(filter: RoleFilter!, force: Boolean): SuccessResponse
  roleRestore(id: String!): Role!
  roleUpdate(
    data: RoleUpdateInput!
    destroyDetached: Boolean
    filter: RoleKeyFilter
    force: Boolean
  ): Role!
  roleUpdateByFilter(
    data: RoleUpdateByFilterInput!
    filter: RoleFilter
  ): RoleManyResponse!
  searchCriterionCreate(data: SearchCriterionCreateInput!): SearchCriterion!
  searchCriterionCreateMany(
    data: [SearchCriterionCreateManyInput]!
  ): SearchCriterionManyResponse!
  searchCriterionDelete(
    data: SearchCriterionDeleteInput
    filter: SearchCriterionKeyFilter
    force: Boolean
  ): SuccessResponse
  searchCriterionDeleteByFilter(
    filter: SearchCriterionFilter!
    force: Boolean
  ): SuccessResponse
  searchCriterionDestroy(
    filter: SearchCriterionKeyFilter
    force: Boolean
  ): SuccessResponse
  searchCriterionDestroyByFilter(
    filter: SearchCriterionFilter!
    force: Boolean
  ): SuccessResponse
  searchCriterionRestore(id: String!): SearchCriterion!
  searchCriterionUpdate(
    data: SearchCriterionUpdateInput!
    destroyDetached: Boolean
    filter: SearchCriterionKeyFilter
    force: Boolean
  ): SearchCriterion!
  searchCriterionUpdateByFilter(
    data: SearchCriterionUpdateByFilterInput!
    filter: SearchCriterionFilter
  ): SearchCriterionManyResponse!
  sendInvitationTo8base(inviteEmail: String!): SuccessResponse
  settingsUpdate(data: SettingUpdateInput!): Setting!
  siteDocumentationCreate(
    data: SiteDocumentationCreateInput!
  ): SiteDocumentation!
  siteDocumentationCreateMany(
    data: [SiteDocumentationCreateManyInput]!
  ): SiteDocumentationManyResponse!
  siteDocumentationDelete(
    data: SiteDocumentationDeleteInput
    filter: SiteDocumentationKeyFilter
    force: Boolean
  ): SuccessResponse
  siteDocumentationDeleteByFilter(
    filter: SiteDocumentationFilter!
    force: Boolean
  ): SuccessResponse
  siteDocumentationDestroy(
    filter: SiteDocumentationKeyFilter
    force: Boolean
  ): SuccessResponse
  siteDocumentationDestroyByFilter(
    filter: SiteDocumentationFilter!
    force: Boolean
  ): SuccessResponse
  siteDocumentationRestore(id: String!): SiteDocumentation!
  siteDocumentationUpdate(
    data: SiteDocumentationUpdateInput!
    destroyDetached: Boolean
    filter: SiteDocumentationKeyFilter
    force: Boolean
  ): SiteDocumentation!
  siteDocumentationUpdateByFilter(
    data: SiteDocumentationUpdateByFilterInput!
    filter: SiteDocumentationFilter
  ): SiteDocumentationManyResponse!
  subscriptionTierCreate(data: SubscriptionTierCreateInput!): SubscriptionTier!
  subscriptionTierCreateMany(
    data: [SubscriptionTierCreateManyInput]!
  ): SubscriptionTierManyResponse!
  subscriptionTierDelete(
    data: SubscriptionTierDeleteInput
    filter: SubscriptionTierKeyFilter
    force: Boolean
  ): SuccessResponse
  subscriptionTierDeleteByFilter(
    filter: SubscriptionTierFilter!
    force: Boolean
  ): SuccessResponse
  subscriptionTierDestroy(
    filter: SubscriptionTierKeyFilter
    force: Boolean
  ): SuccessResponse
  subscriptionTierDestroyByFilter(
    filter: SubscriptionTierFilter!
    force: Boolean
  ): SuccessResponse
  subscriptionTierRestore(id: String!): SubscriptionTier!
  subscriptionTierUpdate(
    data: SubscriptionTierUpdateInput!
    destroyDetached: Boolean
    filter: SubscriptionTierKeyFilter
    force: Boolean
  ): SubscriptionTier!
  subscriptionTierUpdateByFilter(
    data: SubscriptionTierUpdateByFilterInput!
    filter: SubscriptionTierFilter
  ): SubscriptionTierManyResponse!
  system: SystemMutation
  tableCreate(data: TableCreateInput!): Table!
    @deprecated(
      reason: "No longer supported. Use `system.tableCreate` instead."
    )
  tableDelete(data: TableDeleteInput!): SuccessResponse!
    @deprecated(
      reason: "No longer supported. Use `system.tableDelete` instead."
    )
  tableUpdate(data: TableUpdateInput!): Table!
    @deprecated(
      reason: "No longer supported. Use `system.tableUpdate` instead."
    )
  userChangePassword(data: ChangePasswordInput!): SuccessResponse
  userCreate(data: UserCreateInput!): User!
  userCreateMany(data: [UserCreateManyInput]!): UserManyResponse!
  userDelete(
    data: UserDeleteInput
    filter: UserKeyFilter
    force: Boolean
  ): SuccessResponse
  userDeleteByFilter(filter: UserFilter!, force: Boolean): SuccessResponse
  userDestroy(filter: UserKeyFilter, force: Boolean): SuccessResponse
  userDestroyByFilter(filter: UserFilter!, force: Boolean): SuccessResponse
  userLogin(data: UserLoginInput!): LoginResponse
  userPasswordForgot(data: PasswordForgotInput!): SuccessResponse
  userPasswordForgotConfirm(data: PasswordForgotConfirmInput!): SuccessResponse
  userRefreshToken(data: RefreshTokenInput!): Auth
  userRestore(id: String!): User!
  userSignUp(authProfileId: ID, user: UserCreateInput!): User!
    @deprecated(
      reason: "No longer supported. Use `userSignUpWithToken` instead."
    )
  userSignUpResend(data: SignUpResendInput!): SuccessResponse
    @deprecated(
      reason: "No longer supported. Use `userVerificationEmailResend` instead."
    )
  userSignUpWithPassword(
    authProfileId: ID
    password: String!
    user: UserCreateInput!
  ): User!
  userSignUpWithToken(authProfileId: ID, user: UserCreateInput!): User!
  userUpdate(
    data: UserUpdateInput!
    destroyDetached: Boolean
    filter: UserKeyFilter
    force: Boolean
  ): User!
  userUpdateByFilter(
    data: UserUpdateByFilterInput!
    filter: UserFilter
  ): UserManyResponse!
  userVerificationEmailResend(
    authProfileId: ID
    data: VerificationEmailResendInput!
  ): SuccessResponse
  viewCreate(data: ViewCreateInput!): Table!
    @deprecated(reason: "No longer supported. Use `system.viewCreate` instead.")
  viewUpdate(data: ViewUpdateInput!): Table!
  workOrderCreate(data: WorkOrderCreateInput!): WorkOrder!
  workOrderCreateMany(data: [WorkOrderCreateManyInput]!): WorkOrderManyResponse!
  workOrderDelete(
    data: WorkOrderDeleteInput
    filter: WorkOrderKeyFilter
    force: Boolean
  ): SuccessResponse
  workOrderDeleteByFilter(
    filter: WorkOrderFilter!
    force: Boolean
  ): SuccessResponse
  workOrderDestroy(filter: WorkOrderKeyFilter, force: Boolean): SuccessResponse
  workOrderDestroyByFilter(
    filter: WorkOrderFilter!
    force: Boolean
  ): SuccessResponse
  workOrderRestore(id: String!): WorkOrder!
  workOrderUpdate(
    data: WorkOrderUpdateInput!
    destroyDetached: Boolean
    filter: WorkOrderKeyFilter
    force: Boolean
  ): WorkOrder!
  workOrderUpdateByFilter(
    data: WorkOrderUpdateByFilterInput!
    filter: WorkOrderFilter
  ): WorkOrderManyResponse!
  workspaceCreate(data: WorkspaceCreateMutationInput!): WorkspaceCreateResponse
    @deprecated(
      reason: "No longer supported. Use `system.workspaceCreate` instead."
    )
  workspaceCreateAsync(
    data: WorkspaceCreateMutationInput!
  ): WorkspaceCreateResponse
    @deprecated(
      reason: "No longer supported. Use `system.workspaceCreateAsync` instead."
    )
  workspaceDelete(data: WorkspaceDeleteMutationInput!): SuccessResponse
  workspaceLeave(force: Boolean): SuccessResponse
    @deprecated(
      reason: "No longer supported. Use `system.workspaceLeave` instead."
    )
  workspaceUpdate(data: WorkspaceUpdateMutationInput!): WorkspaceUpdateResponse
    @deprecated(
      reason: "No longer supported. Use `system.workspaceUpdate` instead."
    )
}

enum MutationType {
  create
  delete
  destroy
  update
}

"""
System notifications for various events and updates.
"""
type Notification {
  _description: String
  createdAt: DateTime
  created_date: DateTime
  deletedAt: Int
  id: ID
  message: String
  read: Boolean
  type: String
  updatedAt: DateTime
  user_id: User
}

"""
Notification create input
"""
input NotificationCreateInput {
  created_date: DateTime
  message: String
  read: Boolean
  type: String
  user_id: NotificationUser_idRelationInput
}

"""
Notification create many input
"""
input NotificationCreateManyInput {
  created_date: DateTime
  message: String
  read: Boolean
  type: String
  user_id: NotificationUser_idManyRelationInput
}

"""
Notification delete input
"""
input NotificationDeleteInput {
  force: Boolean
  id: ID
}

"""
NotificationFieldsPermissions create input
"""
input NotificationFieldsPermissions {
  createdAt: Boolean
  created_date: Boolean
  message: Boolean
  read: Boolean
  type: Boolean
  updatedAt: Boolean
}

input NotificationFilter {
  AND: [NotificationFilter!]
  OR: [NotificationFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  created_date: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  message: StringPredicate
  read: BoolPredicate
  type: StringPredicate
  updatedAt: DateTimePredicate
  user_id: UserFilter
}

input NotificationGroupBy {
  first: Int
  having: Having
  last: Int
  query: NotificationGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input NotificationGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  created_date: [GroupByField!]
  id: [GroupByField!]
  message: [GroupByField!]
  read: [GroupByField!]
  type: [GroupByField!]
  updatedAt: [GroupByField!]
  user_id: UserGroupByQuery
}

input NotificationKeyFilter {
  id: ID
}

"""
NotificationListResponse output
"""
type NotificationListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Notification!]!
}

"""
NotificationManyResponse output
"""
type NotificationManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [Notification!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum NotificationOrderBy {
  createdAt_ASC
  createdAt_DESC
  created_date_ASC
  created_date_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  message_ASC
  message_DESC
  read_ASC
  read_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
Notification subscription payload
"""
type NotificationPayload {
  mutation: MutationType!
  node: Notification
  previousValues: Notification
  updatedFields: [String]
}

input NotificationSort {
  createdAt: SortOrder
  created_date: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  message: SortOrder
  read: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  user_id: UserSort
}

enum NotificationStatusType {
  done
}

"""
Notification subscription filter
"""
input NotificationSubscriptionFilter {
  mutation_in: [MutationType]
  node: NotificationFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Notification update input
"""
input NotificationUpdateByFilterInput {
  message: [UpdateByFilterStringInput]
  read: [UpdateByFilterBooleanSwitchInput]
  type: [UpdateByFilterStringInput]
}

"""
Notification update input
"""
input NotificationUpdateInput {
  created_date: DateTime
  id: ID
  message: String
  read: Boolean
  type: String
  user_id: NotificationUser_idUpdateRelationInput
}

"""
Notification relation input
"""
input NotificationUser_idManyRelationInput {
  connect: UserKeyFilter
}

"""
Notification relation input
"""
input NotificationUser_idRelationInput {
  connect: UserKeyFilter
  create: Notification_UserCreateInput
}

"""
Notification relation input
"""
input NotificationUser_idUpdateRelationInput {
  connect: UserKeyFilter
  create: Notification_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: Notification_UserUpdateInput
}

input Notification_PermissionFilter {
  AND: [Notification_PermissionFilter!]
  OR: [Notification_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  created_date: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  message: StringPredicate
  read: BoolPredicate
  type: StringPredicate
  updatedAt: DateTimePredicate
  user_id: User_PermissionFilter
}

"""
Users create input from Notification
"""
input Notification_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput
  MaintenanceRecord: UsersMaintenanceRecordRelationInput
  Notification: UsersNotificationRelationInput
  Report: UsersReportRelationInput
  SearchCriteria: UsersSearchCriteriaRelationInput
  WorkOrder: UsersWorkOrderRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from Notification
"""
input Notification_UserUpdateInput {
  BuildingProfile: UsersBuildingProfileUpdateRelationInput
  MaintenanceRecord: UsersMaintenanceRecordUpdateRelationInput
  Notification: UsersNotificationUpdateRelationInput
  Report: UsersReportUpdateRelationInput
  SearchCriteria: UsersSearchCriteriaUpdateRelationInput
  WorkOrder: UsersWorkOrderUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

"""
Number Field Attributes
"""
type NumberFieldTypeAttributes {
  autoIncrement: Boolean
  currency: String
  format: String!
  isBigInt: Boolean
  maxValue: Float
  minValue: Float
  precision: Int
}

"""
Number Type Format Enum
"""
enum NumberTypeFormatEnum {
  CURRENCY
  FRACTION
  NUMBER
  PERCENTAGE
  SCIENTIFIC
}

type OrganizationUpgradeResponse {
  organizationId: String!
}

type OrganizationUserInvitationResponse {
  invitationId: String!
}

"""
BuildingProfile create input from owner_id
"""
input Owner_id_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from owner_id
"""
input Owner_id_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

"""
PasswordForgotConfirmInput
"""
input PasswordForgotConfirmInput {
  authProfileId: ID!
  code: String!
  email: String!
  newPassword: String!
}

"""
PasswordForgotInput
"""
input PasswordForgotInput {
  authProfileId: ID!
  email: String!
}

input PatternFunctionArguments {
  escape: String
  pattern: String!
}

type Permission {
  _description: String
  appId: String
  createdAt: DateTime
  createdBy: User
  permission: JSON
  resource: String
  resourceType: String
  role: Role
  updatedAt: DateTime
}

input PermissionFilter {
  AND: [PermissionFilter!]
  OR: [PermissionFilter!]
  _fullText: String
  appId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  resource: StringPredicate
  resourceType: StringPredicate
  role: RoleFilter
  updatedAt: DateTimePredicate
}

input PermissionGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  appId: [GroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  permission: [GroupByField!]
  resource: [GroupByField!]
  resourceType: [GroupByField!]
  role: RoleGroupByQuery
  updatedAt: [GroupByField!]
}

"""
Permission Filter
"""
input PermissionInputFilter {
  action: String
  applicationName: String
  resource: String
  resourceType: PermissionResourceTypeEnum
}

"""
PermissionListResponse output
"""
type PermissionListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Permission!]!
}

"""
Permissions subscription payload
"""
type PermissionPayload {
  mutation: MutationType!
  node: Permission
  previousValues: Permission
  updatedFields: [String]
}

input PermissionRelationFilter {
  every: PermissionFilter
  none: PermissionFilter
  some: PermissionFilter
}

enum PermissionResourceTypeEnum {
  custom
  data
}

"""
Permissions subscription filter
"""
input PermissionSubscriptionFilter {
  mutation_in: [MutationType]
  node: PermissionFilter
  updatedFields: UpdatedFieldsFilter
}

input Permission_PermissionFilter {
  AND: [Permission_PermissionFilter!]
  OR: [Permission_PermissionFilter!]
  _fullText: String
  appId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  resource: StringPredicate
  resourceType: StringPredicate
  role: Role_PermissionFilter
  updatedAt: DateTimePredicate
}

input Permission_PermissionRelationFilter {
  every: Permission_PermissionFilter
  none: Permission_PermissionFilter
  some: Permission_PermissionFilter
}

"""
custom permissions input
"""
input PermissionsCustom {
  data: PermissionsCustomData
  logic: PermissionsCustomLogic
  settings: PermissionsCustomSettings
  users: PermissionsCustomUsers
}

input PermissionsCustomData {
  schemaManagement: PermissionsCustomDataSchemaManagement
  viewerAccess: PermissionsCustomDataViewerAccess
}

input PermissionsCustomDataSchemaManagement {
  allow: Boolean!
}

input PermissionsCustomDataViewerAccess {
  allow: Boolean!
}

input PermissionsCustomLogic {
  deploy: PermissionsCustomLogicDeploy
  invoke: PermissionsCustomLogicInvoke
  logs: PermissionsCustomLogicLogs
  view: PermissionsCustomLogicView
}

input PermissionsCustomLogicDeploy {
  allow: Boolean!
}

input PermissionsCustomLogicInvoke {
  allow: Boolean!
}

input PermissionsCustomLogicLogs {
  allow: Boolean!
}

input PermissionsCustomLogicView {
  allow: Boolean!
}

input PermissionsCustomSettings {
  workspaceAdministration: PermissionsCustomSettingsWorkspaceAdministration
}

input PermissionsCustomSettingsWorkspaceAdministration {
  allow: Boolean!
}

input PermissionsCustomUsers {
  teamAdministration: PermissionsCustomUsersTeamAdministration
}

input PermissionsCustomUsersTeamAdministration {
  allow: Boolean!
}

"""
Schema tables permissions input
"""
input PermissionsData {
  BuildingProfile: PermissionsDataBuildingProfile
  Certification: PermissionsDataCertification
  ComplianceRecord: PermissionsDataComplianceRecord
  EnergyEfficiency: PermissionsDataEnergyEfficiency
  EnvironmentalInformation: PermissionsDataEnvironmentalInformation
  EquipmentInventory: PermissionsDataEquipmentInventory
  Files: PermissionsDataFiles
  FilesSettings: PermissionsDataFilesSettings
  Improvement: PermissionsDataImprovement
  IndoorAirQuality: PermissionsDataIndoorAirQuality
  MaintenanceRecord: PermissionsDataMaintenanceRecord
  Notification: PermissionsDataNotification
  Permit: PermissionsDataPermit
  Report: PermissionsDataReport
  Roles: PermissionsDataRoles
  SearchCriteria: PermissionsDataSearchCriteria
  SiteDocumentation: PermissionsDataSiteDocumentation
  SubscriptionTier: PermissionsDataSubscriptionTier
  Users: PermissionsDataUsers
  WorkOrder: PermissionsDataWorkOrder
}

input PermissionsDataBuildingProfile {
  create: PermissionsDataBuildingProfileCreate
  delete: PermissionsDataBuildingProfileDelete
  destroy: PermissionsDataBuildingProfileDestroy
  read: PermissionsDataBuildingProfileRead
  update: PermissionsDataBuildingProfileUpdate
}

input PermissionsDataBuildingProfileCreate {
  allow: Boolean!
}

input PermissionsDataBuildingProfileDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataBuildingProfileDestroy {
  allow: Boolean!
}

input PermissionsDataBuildingProfileRead {
  allow: Boolean!
  fields: BuildingProfileFieldsPermissions
  filter: BuildingProfile_PermissionFilter
}

input PermissionsDataBuildingProfileUpdate {
  allow: Boolean!
  fields: BuildingProfileFieldsPermissions
  filter: BuildingProfile_PermissionFilter
}

input PermissionsDataCertification {
  create: PermissionsDataCertificationCreate
  delete: PermissionsDataCertificationDelete
  destroy: PermissionsDataCertificationDestroy
  read: PermissionsDataCertificationRead
  update: PermissionsDataCertificationUpdate
}

input PermissionsDataCertificationCreate {
  allow: Boolean!
}

input PermissionsDataCertificationDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataCertificationDestroy {
  allow: Boolean!
}

input PermissionsDataCertificationRead {
  allow: Boolean!
  fields: CertificationFieldsPermissions
  filter: Certification_PermissionFilter
}

input PermissionsDataCertificationUpdate {
  allow: Boolean!
  fields: CertificationFieldsPermissions
  filter: Certification_PermissionFilter
}

input PermissionsDataComplianceRecord {
  create: PermissionsDataComplianceRecordCreate
  delete: PermissionsDataComplianceRecordDelete
  destroy: PermissionsDataComplianceRecordDestroy
  read: PermissionsDataComplianceRecordRead
  update: PermissionsDataComplianceRecordUpdate
}

input PermissionsDataComplianceRecordCreate {
  allow: Boolean!
}

input PermissionsDataComplianceRecordDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataComplianceRecordDestroy {
  allow: Boolean!
}

input PermissionsDataComplianceRecordRead {
  allow: Boolean!
  fields: ComplianceRecordFieldsPermissions
  filter: ComplianceRecord_PermissionFilter
}

input PermissionsDataComplianceRecordUpdate {
  allow: Boolean!
  fields: ComplianceRecordFieldsPermissions
  filter: ComplianceRecord_PermissionFilter
}

input PermissionsDataEnergyEfficiency {
  create: PermissionsDataEnergyEfficiencyCreate
  delete: PermissionsDataEnergyEfficiencyDelete
  destroy: PermissionsDataEnergyEfficiencyDestroy
  read: PermissionsDataEnergyEfficiencyRead
  update: PermissionsDataEnergyEfficiencyUpdate
}

input PermissionsDataEnergyEfficiencyCreate {
  allow: Boolean!
}

input PermissionsDataEnergyEfficiencyDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataEnergyEfficiencyDestroy {
  allow: Boolean!
}

input PermissionsDataEnergyEfficiencyRead {
  allow: Boolean!
  fields: EnergyEfficiencyFieldsPermissions
  filter: EnergyEfficiency_PermissionFilter
}

input PermissionsDataEnergyEfficiencyUpdate {
  allow: Boolean!
  fields: EnergyEfficiencyFieldsPermissions
  filter: EnergyEfficiency_PermissionFilter
}

input PermissionsDataEnvironmentalInformation {
  create: PermissionsDataEnvironmentalInformationCreate
  delete: PermissionsDataEnvironmentalInformationDelete
  destroy: PermissionsDataEnvironmentalInformationDestroy
  read: PermissionsDataEnvironmentalInformationRead
  update: PermissionsDataEnvironmentalInformationUpdate
}

input PermissionsDataEnvironmentalInformationCreate {
  allow: Boolean!
}

input PermissionsDataEnvironmentalInformationDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataEnvironmentalInformationDestroy {
  allow: Boolean!
}

input PermissionsDataEnvironmentalInformationRead {
  allow: Boolean!
  fields: EnvironmentalInformationFieldsPermissions
  filter: EnvironmentalInformation_PermissionFilter
}

input PermissionsDataEnvironmentalInformationUpdate {
  allow: Boolean!
  fields: EnvironmentalInformationFieldsPermissions
  filter: EnvironmentalInformation_PermissionFilter
}

input PermissionsDataEquipmentInventory {
  create: PermissionsDataEquipmentInventoryCreate
  delete: PermissionsDataEquipmentInventoryDelete
  destroy: PermissionsDataEquipmentInventoryDestroy
  read: PermissionsDataEquipmentInventoryRead
  update: PermissionsDataEquipmentInventoryUpdate
}

input PermissionsDataEquipmentInventoryCreate {
  allow: Boolean!
}

input PermissionsDataEquipmentInventoryDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataEquipmentInventoryDestroy {
  allow: Boolean!
}

input PermissionsDataEquipmentInventoryRead {
  allow: Boolean!
  fields: EquipmentInventoryFieldsPermissions
  filter: EquipmentInventory_PermissionFilter
}

input PermissionsDataEquipmentInventoryUpdate {
  allow: Boolean!
  fields: EquipmentInventoryFieldsPermissions
  filter: EquipmentInventory_PermissionFilter
}

input PermissionsDataFiles {
  create: PermissionsDataFilesCreate
  delete: PermissionsDataFilesDelete
  destroy: PermissionsDataFilesDestroy
  read: PermissionsDataFilesRead
  update: PermissionsDataFilesUpdate
}

input PermissionsDataFilesCreate {
  allow: Boolean!
}

input PermissionsDataFilesDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataFilesDestroy {
  allow: Boolean!
}

input PermissionsDataFilesRead {
  allow: Boolean!
  fields: FileFieldsPermissions
  filter: File_PermissionFilter
}

input PermissionsDataFilesSettings {
  create: PermissionsDataFilesSettingsCreate
  delete: PermissionsDataFilesSettingsDelete
  destroy: PermissionsDataFilesSettingsDestroy
  read: PermissionsDataFilesSettingsRead
  update: PermissionsDataFilesSettingsUpdate
}

input PermissionsDataFilesSettingsCreate {
  allow: Boolean!
}

input PermissionsDataFilesSettingsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataFilesSettingsDestroy {
  allow: Boolean!
}

input PermissionsDataFilesSettingsRead {
  allow: Boolean!
  fields: FilesSettingFieldsPermissions
  filter: FilesSetting_PermissionFilter
}

input PermissionsDataFilesSettingsUpdate {
  allow: Boolean!
  fields: FilesSettingFieldsPermissions
  filter: FilesSetting_PermissionFilter
}

input PermissionsDataFilesUpdate {
  allow: Boolean!
  fields: FileFieldsPermissions
  filter: File_PermissionFilter
}

input PermissionsDataImprovement {
  create: PermissionsDataImprovementCreate
  delete: PermissionsDataImprovementDelete
  destroy: PermissionsDataImprovementDestroy
  read: PermissionsDataImprovementRead
  update: PermissionsDataImprovementUpdate
}

input PermissionsDataImprovementCreate {
  allow: Boolean!
}

input PermissionsDataImprovementDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataImprovementDestroy {
  allow: Boolean!
}

input PermissionsDataImprovementRead {
  allow: Boolean!
  fields: ImprovementFieldsPermissions
  filter: Improvement_PermissionFilter
}

input PermissionsDataImprovementUpdate {
  allow: Boolean!
  fields: ImprovementFieldsPermissions
  filter: Improvement_PermissionFilter
}

input PermissionsDataIndoorAirQuality {
  create: PermissionsDataIndoorAirQualityCreate
  delete: PermissionsDataIndoorAirQualityDelete
  destroy: PermissionsDataIndoorAirQualityDestroy
  read: PermissionsDataIndoorAirQualityRead
  update: PermissionsDataIndoorAirQualityUpdate
}

input PermissionsDataIndoorAirQualityCreate {
  allow: Boolean!
}

input PermissionsDataIndoorAirQualityDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataIndoorAirQualityDestroy {
  allow: Boolean!
}

input PermissionsDataIndoorAirQualityRead {
  allow: Boolean!
  fields: IndoorAirQualityFieldsPermissions
  filter: IndoorAirQuality_PermissionFilter
}

input PermissionsDataIndoorAirQualityUpdate {
  allow: Boolean!
  fields: IndoorAirQualityFieldsPermissions
  filter: IndoorAirQuality_PermissionFilter
}

input PermissionsDataMaintenanceRecord {
  create: PermissionsDataMaintenanceRecordCreate
  delete: PermissionsDataMaintenanceRecordDelete
  destroy: PermissionsDataMaintenanceRecordDestroy
  read: PermissionsDataMaintenanceRecordRead
  update: PermissionsDataMaintenanceRecordUpdate
}

input PermissionsDataMaintenanceRecordCreate {
  allow: Boolean!
}

input PermissionsDataMaintenanceRecordDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataMaintenanceRecordDestroy {
  allow: Boolean!
}

input PermissionsDataMaintenanceRecordRead {
  allow: Boolean!
  fields: MaintenanceRecordFieldsPermissions
  filter: MaintenanceRecord_PermissionFilter
}

input PermissionsDataMaintenanceRecordUpdate {
  allow: Boolean!
  fields: MaintenanceRecordFieldsPermissions
  filter: MaintenanceRecord_PermissionFilter
}

input PermissionsDataNotification {
  create: PermissionsDataNotificationCreate
  delete: PermissionsDataNotificationDelete
  destroy: PermissionsDataNotificationDestroy
  read: PermissionsDataNotificationRead
  update: PermissionsDataNotificationUpdate
}

input PermissionsDataNotificationCreate {
  allow: Boolean!
}

input PermissionsDataNotificationDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataNotificationDestroy {
  allow: Boolean!
}

input PermissionsDataNotificationRead {
  allow: Boolean!
  fields: NotificationFieldsPermissions
  filter: Notification_PermissionFilter
}

input PermissionsDataNotificationUpdate {
  allow: Boolean!
  fields: NotificationFieldsPermissions
  filter: Notification_PermissionFilter
}

input PermissionsDataPermit {
  create: PermissionsDataPermitCreate
  delete: PermissionsDataPermitDelete
  destroy: PermissionsDataPermitDestroy
  read: PermissionsDataPermitRead
  update: PermissionsDataPermitUpdate
}

input PermissionsDataPermitCreate {
  allow: Boolean!
}

input PermissionsDataPermitDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataPermitDestroy {
  allow: Boolean!
}

input PermissionsDataPermitRead {
  allow: Boolean!
  fields: PermitFieldsPermissions
  filter: Permit_PermissionFilter
}

input PermissionsDataPermitUpdate {
  allow: Boolean!
  fields: PermitFieldsPermissions
  filter: Permit_PermissionFilter
}

input PermissionsDataReport {
  create: PermissionsDataReportCreate
  delete: PermissionsDataReportDelete
  destroy: PermissionsDataReportDestroy
  read: PermissionsDataReportRead
  update: PermissionsDataReportUpdate
}

input PermissionsDataReportCreate {
  allow: Boolean!
}

input PermissionsDataReportDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataReportDestroy {
  allow: Boolean!
}

input PermissionsDataReportRead {
  allow: Boolean!
  fields: ReportFieldsPermissions
  filter: Report_PermissionFilter
}

input PermissionsDataReportUpdate {
  allow: Boolean!
  fields: ReportFieldsPermissions
  filter: Report_PermissionFilter
}

input PermissionsDataRoles {
  create: PermissionsDataRolesCreate
  delete: PermissionsDataRolesDelete
  destroy: PermissionsDataRolesDestroy
  read: PermissionsDataRolesRead
  update: PermissionsDataRolesUpdate
}

input PermissionsDataRolesCreate {
  allow: Boolean!
}

input PermissionsDataRolesDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataRolesDestroy {
  allow: Boolean!
}

input PermissionsDataRolesRead {
  allow: Boolean!
  fields: RoleFieldsPermissions
  filter: Role_PermissionFilter
}

input PermissionsDataRolesUpdate {
  allow: Boolean!
  fields: RoleFieldsPermissions
  filter: Role_PermissionFilter
}

input PermissionsDataSearchCriteria {
  create: PermissionsDataSearchCriteriaCreate
  delete: PermissionsDataSearchCriteriaDelete
  destroy: PermissionsDataSearchCriteriaDestroy
  read: PermissionsDataSearchCriteriaRead
  update: PermissionsDataSearchCriteriaUpdate
}

input PermissionsDataSearchCriteriaCreate {
  allow: Boolean!
}

input PermissionsDataSearchCriteriaDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataSearchCriteriaDestroy {
  allow: Boolean!
}

input PermissionsDataSearchCriteriaRead {
  allow: Boolean!
  fields: SearchCriterionFieldsPermissions
  filter: SearchCriterion_PermissionFilter
}

input PermissionsDataSearchCriteriaUpdate {
  allow: Boolean!
  fields: SearchCriterionFieldsPermissions
  filter: SearchCriterion_PermissionFilter
}

input PermissionsDataSiteDocumentation {
  create: PermissionsDataSiteDocumentationCreate
  delete: PermissionsDataSiteDocumentationDelete
  destroy: PermissionsDataSiteDocumentationDestroy
  read: PermissionsDataSiteDocumentationRead
  update: PermissionsDataSiteDocumentationUpdate
}

input PermissionsDataSiteDocumentationCreate {
  allow: Boolean!
}

input PermissionsDataSiteDocumentationDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataSiteDocumentationDestroy {
  allow: Boolean!
}

input PermissionsDataSiteDocumentationRead {
  allow: Boolean!
  fields: SiteDocumentationFieldsPermissions
  filter: SiteDocumentation_PermissionFilter
}

input PermissionsDataSiteDocumentationUpdate {
  allow: Boolean!
  fields: SiteDocumentationFieldsPermissions
  filter: SiteDocumentation_PermissionFilter
}

input PermissionsDataSubscriptionTier {
  create: PermissionsDataSubscriptionTierCreate
  delete: PermissionsDataSubscriptionTierDelete
  destroy: PermissionsDataSubscriptionTierDestroy
  read: PermissionsDataSubscriptionTierRead
  update: PermissionsDataSubscriptionTierUpdate
}

input PermissionsDataSubscriptionTierCreate {
  allow: Boolean!
}

input PermissionsDataSubscriptionTierDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataSubscriptionTierDestroy {
  allow: Boolean!
}

input PermissionsDataSubscriptionTierRead {
  allow: Boolean!
  fields: SubscriptionTierFieldsPermissions
  filter: SubscriptionTier_PermissionFilter
}

input PermissionsDataSubscriptionTierUpdate {
  allow: Boolean!
  fields: SubscriptionTierFieldsPermissions
  filter: SubscriptionTier_PermissionFilter
}

input PermissionsDataUsers {
  create: PermissionsDataUsersCreate
  delete: PermissionsDataUsersDelete
  destroy: PermissionsDataUsersDestroy
  read: PermissionsDataUsersRead
  update: PermissionsDataUsersUpdate
}

input PermissionsDataUsersCreate {
  allow: Boolean!
}

input PermissionsDataUsersDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataUsersDestroy {
  allow: Boolean!
}

input PermissionsDataUsersRead {
  allow: Boolean!
  fields: UserFieldsPermissions
  filter: User_PermissionFilter
}

input PermissionsDataUsersUpdate {
  allow: Boolean!
  fields: UserFieldsPermissions
  filter: User_PermissionFilter
}

input PermissionsDataWorkOrder {
  create: PermissionsDataWorkOrderCreate
  delete: PermissionsDataWorkOrderDelete
  destroy: PermissionsDataWorkOrderDestroy
  read: PermissionsDataWorkOrderRead
  update: PermissionsDataWorkOrderUpdate
}

input PermissionsDataWorkOrderCreate {
  allow: Boolean!
}

input PermissionsDataWorkOrderDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataWorkOrderDestroy {
  allow: Boolean!
}

input PermissionsDataWorkOrderRead {
  allow: Boolean!
  fields: WorkOrderFieldsPermissions
  filter: WorkOrder_PermissionFilter
}

input PermissionsDataWorkOrderUpdate {
  allow: Boolean!
  fields: WorkOrderFieldsPermissions
  filter: WorkOrder_PermissionFilter
}

"""
PermissionsInput create input
"""
input PermissionsInput {
  custom: PermissionsCustom
  data: PermissionsData
}

"""
Records of permits issued for building activities.
"""
type Permit {
  _description: String
  building_profile_id: BuildingProfile
  createdAt: DateTime
  deletedAt: Int
  description: String
  expiration_date: DateTime
  id: ID
  issue_date: DateTime
  permit_number: String
  updatedAt: DateTime
}

"""
Permit relation input
"""
input PermitBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
Permit relation input
"""
input PermitBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: Permit_BuildingProfileCreateInput
}

"""
Permit relation input
"""
input PermitBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: Permit_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: Permit_BuildingProfileUpdateInput
}

"""
Permit create input
"""
input PermitCreateInput {
  building_profile_id: PermitBuilding_profile_idRelationInput
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  permit_number: String
}

"""
Permit create many input
"""
input PermitCreateManyInput {
  building_profile_id: PermitBuilding_profile_idManyRelationInput
  description: String
  expiration_date: DateTime
  issue_date: DateTime
  permit_number: String
}

"""
Permit delete input
"""
input PermitDeleteInput {
  force: Boolean
  id: ID
}

"""
PermitFieldsPermissions create input
"""
input PermitFieldsPermissions {
  createdAt: Boolean
  description: Boolean
  expiration_date: Boolean
  issue_date: Boolean
  permit_number: Boolean
  updatedAt: Boolean
}

input PermitFilter {
  AND: [PermitFilter!]
  OR: [PermitFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  expiration_date: DateTimePredicate
  id: IDPredicate
  issue_date: DateTimePredicate
  permit_number: StringPredicate
  updatedAt: DateTimePredicate
}

input PermitGroupBy {
  first: Int
  having: Having
  last: Int
  query: PermitGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input PermitGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  createdAt: [GroupByField!]
  description: [GroupByField!]
  expiration_date: [GroupByField!]
  id: [GroupByField!]
  issue_date: [GroupByField!]
  permit_number: [GroupByField!]
  updatedAt: [GroupByField!]
}

input PermitKeyFilter {
  id: ID
}

"""
PermitListResponse output
"""
type PermitListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Permit!]!
}

"""
PermitManyResponse output
"""
type PermitManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [Permit!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum PermitOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  expiration_date_ASC
  expiration_date_DESC
  id_ASC
  id_DESC
  issue_date_ASC
  issue_date_DESC
  permit_number_ASC
  permit_number_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
Permit subscription payload
"""
type PermitPayload {
  mutation: MutationType!
  node: Permit
  previousValues: Permit
  updatedFields: [String]
}

input PermitSort {
  building_profile_id: BuildingProfileSort
  createdAt: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  issue_date: SortOrder
  permit_number: SortOrder
  updatedAt: SortOrder
}

"""
Permit subscription filter
"""
input PermitSubscriptionFilter {
  mutation_in: [MutationType]
  node: PermitFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Permit update input
"""
input PermitUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
  permit_number: [UpdateByFilterStringInput]
}

"""
Permit update input
"""
input PermitUpdateInput {
  building_profile_id: PermitBuilding_profile_idUpdateRelationInput
  description: String
  expiration_date: DateTime
  id: ID
  issue_date: DateTime
  permit_number: String
}

"""
BuildingProfile create input from Permit
"""
input Permit_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from Permit
"""
input Permit_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input Permit_PermissionFilter {
  AND: [Permit_PermissionFilter!]
  OR: [Permit_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  expiration_date: DateTimePredicate
  id: IDPredicate
  issue_date: DateTimePredicate
  permit_number: StringPredicate
  updatedAt: DateTimePredicate
}

type ProjectItemWS {
  description: String
  id: ID!
  image: WorkspaceImage
  name: String!
  region: String
}

type Query {
  apiToken(id: ID, name: String, withDeleted: Boolean): ApiToken
  apiTokensList(
    after: String
    before: String
    filter: ApiTokenFilter
    first: Int
    groupBy: ApiTokenGroupBy
    last: Int
    orderBy: [ApiTokenOrderBy]
    skip: Int
    sort: [ApiTokenSort!]
    withDeleted: Boolean
  ): ApiTokenListResponse!
  application(id: String!): Application
    @deprecated(
      reason: "No longer supported. Use `system.application` instead."
    )
  applicationsList: ApplicationListResponse
    @deprecated(
      reason: "No longer supported. Use `system.applicationsList` instead."
    )
  asyncSessionStatus(sessionId: String!): AsyncSessionStatusResponse
    @deprecated(
      reason: "No longer supported. Use `system.asyncSessionStatus` instead."
    )
  authenticationProfile(
    id: ID
    name: String
    withDeleted: Boolean
  ): AuthenticationProfile
  authenticationProfilesList(
    after: String
    before: String
    filter: AuthenticationProfileFilter
    first: Int
    groupBy: AuthenticationProfileGroupBy
    last: Int
    orderBy: [AuthenticationProfileOrderBy]
    skip: Int
    sort: [AuthenticationProfileSort!]
    withDeleted: Boolean
  ): AuthenticationProfileListResponse!
  authenticationSettings: AuthenticationSetting
  billingCurrentPlan(organizationId: ID): BillingCurrentPlanResponse
    @deprecated(
      reason: "No longer supported. Use `system.billingCurrentPlan` instead."
    )
  billingDetails: BillingDetailsResponse
    @deprecated(
      reason: "No longer supported. Use `system.memberPaymentDetails, system.organizationPaymentDetails or system.workspacePaymentDetails` instead."
    )
  billingInvoicesList(
    after: ID
    before: ID
    by: BillingInvoicesListFilterType
    limit: Int
    projectId: ID
  ): BillingInvoicesListResponse!
    @deprecated(
      reason: "No longer supported. Use `system.memberBillingHistory, system.organizationBillingHistory or system.workspaceBillingHistory` instead."
    )
  billingMetricUsageQuotasList(
    organizationId: ID
    projectId: ID
  ): BillingMetricUsageQuotasListResponse!
    @deprecated(
      reason: "No longer supported. Use `system.billingMetricUsageQuotasList` instead."
    )
  billingMetricUsagesList(
    filter: BillingMetricUsagesListFilter
    organizationId: ID
    projectId: ID
  ): BillingMetricUsagesListResponse!
    @deprecated(
      reason: "No longer supported. Use `system.billingMetricUsagesList` instead."
    )
  buildingProfile(id: ID, withDeleted: Boolean): BuildingProfile
  buildingProfilesList(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
    withDeleted: Boolean
  ): BuildingProfileListResponse!
  certification(id: ID, withDeleted: Boolean): Certification
  certificationsList(
    after: String
    before: String
    filter: CertificationFilter
    first: Int
    groupBy: CertificationGroupBy
    last: Int
    orderBy: [CertificationOrderBy]
    skip: Int
    sort: [CertificationSort!]
    withDeleted: Boolean
  ): CertificationListResponse!
  companyName: String
  complianceRecord(id: ID, withDeleted: Boolean): ComplianceRecord
  complianceRecordsList(
    after: String
    before: String
    filter: ComplianceRecordFilter
    first: Int
    groupBy: ComplianceRecordGroupBy
    last: Int
    orderBy: [ComplianceRecordOrderBy]
    skip: Int
    sort: [ComplianceRecordSort!]
    withDeleted: Boolean
  ): ComplianceRecordListResponse!
  deployStatus(buildName: String!): DeployStatusResult!
    @deprecated(
      reason: "No longer supported. Use `system.deployStatus` instead."
    )
  energyEfficienciesList(
    after: String
    before: String
    filter: EnergyEfficiencyFilter
    first: Int
    groupBy: EnergyEfficiencyGroupBy
    last: Int
    orderBy: [EnergyEfficiencyOrderBy]
    skip: Int
    sort: [EnergyEfficiencySort!]
    withDeleted: Boolean
  ): EnergyEfficiencyListResponse!
  energyEfficiency(id: ID, withDeleted: Boolean): EnergyEfficiency
  environmentVariable(
    id: ID
    name: String
    withDeleted: Boolean
  ): EnvironmentVariable
  environmentVariablesList(
    after: String
    before: String
    filter: EnvironmentVariableFilter
    first: Int
    groupBy: EnvironmentVariableGroupBy
    last: Int
    orderBy: [EnvironmentVariableOrderBy]
    skip: Int
    sort: [EnvironmentVariableSort!]
    withDeleted: Boolean
  ): EnvironmentVariableListResponse!
  environmentalInformation(
    id: ID
    withDeleted: Boolean
  ): EnvironmentalInformation
  environmentalInformationsList(
    after: String
    before: String
    filter: EnvironmentalInformationFilter
    first: Int
    groupBy: EnvironmentalInformationGroupBy
    last: Int
    orderBy: [EnvironmentalInformationOrderBy]
    skip: Int
    sort: [EnvironmentalInformationSort!]
    withDeleted: Boolean
  ): EnvironmentalInformationListResponse!
  equipmentInventoriesList(
    after: String
    before: String
    filter: EquipmentInventoryFilter
    first: Int
    groupBy: EquipmentInventoryGroupBy
    last: Int
    orderBy: [EquipmentInventoryOrderBy]
    skip: Int
    sort: [EquipmentInventorySort!]
    withDeleted: Boolean
  ): EquipmentInventoryListResponse!
  equipmentInventory(id: ID, withDeleted: Boolean): EquipmentInventory
  file(fileId: String, id: ID, withDeleted: Boolean): File
  fileUploadInfo: FileUploadInfoResponse
    @deprecated(
      reason: "No longer supported. Use `fileUploadSignInfo` instead."
    )
  filesList(
    after: String
    before: String
    filter: FileFilter
    first: Int
    groupBy: FileGroupBy
    last: Int
    orderBy: [FileOrderBy]
    skip: Int
    sort: [FileSort!]
    withDeleted: Boolean
  ): FileListResponse!
  filesSetting(
    filemanagername: String
    id: ID
    withDeleted: Boolean
  ): FilesSetting
  filesSettingsList(
    after: String
    before: String
    filter: FilesSettingFilter
    first: Int
    groupBy: FilesSettingGroupBy
    last: Int
    orderBy: [FilesSettingOrderBy]
    skip: Int
    sort: [FilesSettingSort!]
    withDeleted: Boolean
  ): FilesSettingListResponse!
  functionsList(
    applicationId: String
    filter: FunctionInfoFilter
    orderBy: [FunctionInfoOrderBy]
  ): FunctionListResponse
    @deprecated(
      reason: "No longer supported. Use `system.functionsList` instead."
    )
  functionsVersionCheck: FunctionInfoCheck
  improvement(id: ID, withDeleted: Boolean): Improvement
  improvementsList(
    after: String
    before: String
    filter: ImprovementFilter
    first: Int
    groupBy: ImprovementGroupBy
    last: Int
    orderBy: [ImprovementOrderBy]
    skip: Int
    sort: [ImprovementSort!]
    withDeleted: Boolean
  ): ImprovementListResponse!
  indoorAirQualitiesList(
    after: String
    before: String
    filter: IndoorAirQualityFilter
    first: Int
    groupBy: IndoorAirQualityGroupBy
    last: Int
    orderBy: [IndoorAirQualityOrderBy]
    skip: Int
    sort: [IndoorAirQualitySort!]
    withDeleted: Boolean
  ): IndoorAirQualityListResponse!
  indoorAirQuality(id: ID, withDeleted: Boolean): IndoorAirQuality
  isAllowedCallbackURL(callbackURL: String!): isAllowedCallbackURLQueryResponse
  logs(
    applicationId: String
    endTime: DateTime
    functionName: String!
    limit: Int
    startTime: DateTime
  ): [String]
    @deprecated(reason: "No longer supported. Use `system.logsList` instead.")
  maintenanceRecord(id: ID, withDeleted: Boolean): MaintenanceRecord
  maintenanceRecordsList(
    after: String
    before: String
    filter: MaintenanceRecordFilter
    first: Int
    groupBy: MaintenanceRecordGroupBy
    last: Int
    orderBy: [MaintenanceRecordOrderBy]
    skip: Int
    sort: [MaintenanceRecordSort!]
    withDeleted: Boolean
  ): MaintenanceRecordListResponse!
  notification(id: ID, withDeleted: Boolean): Notification
  notificationsList(
    after: String
    before: String
    filter: NotificationFilter
    first: Int
    groupBy: NotificationGroupBy
    last: Int
    orderBy: [NotificationOrderBy]
    skip: Int
    sort: [NotificationSort!]
    withDeleted: Boolean
  ): NotificationListResponse!
  permit(id: ID, withDeleted: Boolean): Permit
  permitsList(
    after: String
    before: String
    filter: PermitFilter
    first: Int
    groupBy: PermitGroupBy
    last: Int
    orderBy: [PermitOrderBy]
    skip: Int
    sort: [PermitSort!]
    withDeleted: Boolean
  ): PermitListResponse!
  report(id: ID, withDeleted: Boolean): Report
  reportsList(
    after: String
    before: String
    filter: ReportFilter
    first: Int
    groupBy: ReportGroupBy
    last: Int
    orderBy: [ReportOrderBy]
    skip: Int
    sort: [ReportSort!]
    withDeleted: Boolean
  ): ReportListResponse!
  role(id: ID, name: String, withDeleted: Boolean): Role
  rolesList(
    after: String
    before: String
    filter: RoleFilter
    first: Int
    groupBy: RoleGroupBy
    last: Int
    orderBy: [RoleOrderBy]
    skip: Int
    sort: [RoleSort!]
    withDeleted: Boolean
  ): RoleListResponse!
  searchCriteriaList(
    after: String
    before: String
    filter: SearchCriterionFilter
    first: Int
    groupBy: SearchCriterionGroupBy
    last: Int
    orderBy: [SearchCriterionOrderBy]
    skip: Int
    sort: [SearchCriterionSort!]
    withDeleted: Boolean
  ): SearchCriterionListResponse!
  searchCriterion(id: ID, withDeleted: Boolean): SearchCriterion
  settings: Setting
  siteDocumentation(id: ID, withDeleted: Boolean): SiteDocumentation
  siteDocumentationsList(
    after: String
    before: String
    filter: SiteDocumentationFilter
    first: Int
    groupBy: SiteDocumentationGroupBy
    last: Int
    orderBy: [SiteDocumentationOrderBy]
    skip: Int
    sort: [SiteDocumentationSort!]
    withDeleted: Boolean
  ): SiteDocumentationListResponse!
  subscriptionTier(id: ID, name: String, withDeleted: Boolean): SubscriptionTier
  subscriptionTiersList(
    after: String
    before: String
    filter: SubscriptionTierFilter
    first: Int
    groupBy: SubscriptionTierGroupBy
    last: Int
    orderBy: [SubscriptionTierOrderBy]
    skip: Int
    sort: [SubscriptionTierSort!]
    withDeleted: Boolean
  ): SubscriptionTierListResponse!
  system: SystemQuery
  table(id: ID, name: String): Table
    @deprecated(reason: "No longer supported. Use `system.table` instead.")
  tableField(id: ID!): TableField
    @deprecated(reason: "No longer supported. Use `system.tableField` instead.")
  tablesList(filter: TableListFilter): TableListResponse!
    @deprecated(reason: "No longer supported. Use `system.tablesList` instead.")
  user(email: String, id: ID, withDeleted: Boolean): User
  userBillingConfiguration(
    filterPlanProjects: Boolean
    kind: String
    organizationId: ID
    region: String
  ): UserBillingConfigurationResponse!
  userBillingConfigurationArchie(
    ideaId: ID
    kind: String
    organizationId: ID
    region: String
  ): UserBillingConfigurationResponse!
  userInvitationsList: UserInvitationList
    @deprecated(
      reason: "No longer supported. Use `system.userInvitationsList` instead."
    )
  usersList(
    after: String
    before: String
    filter: UserFilter
    first: Int
    groupBy: UserGroupBy
    last: Int
    orderBy: [UserOrderBy]
    skip: Int
    sort: [UserSort!]
    withDeleted: Boolean
  ): UserListResponse!
  viewDryRun(sql: String!): ViewDryRunOutput
  workOrder(id: ID, withDeleted: Boolean): WorkOrder
  workOrdersList(
    after: String
    before: String
    filter: WorkOrderFilter
    first: Int
    groupBy: WorkOrderGroupBy
    last: Int
    orderBy: [WorkOrderOrderBy]
    skip: Int
    sort: [WorkOrderSort!]
    withDeleted: Boolean
  ): WorkOrderListResponse!
  workspacesList: WorkspaceListResponse
    @deprecated(
      reason: "No longer supported. Use `system.workspacesList` instead."
    )
}

"""
RefreshTokenInput
"""
input RefreshTokenInput {
  authProfileId: ID
  email: String
  refreshToken: String!
}

"""
Relation
"""
type Relation {
  refField: TableField
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTable: Table!
  relationFieldName: String
  relationTableName: String
}

"""
Relation Create Input
"""
input RelationCreateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean!
  refFieldIsRequired: Boolean!
  refFieldName: String
  refTableId: ID!
}

"""
Relation Update Input
"""
input RelationUpdateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTableId: ID
}

"""
Relative Date Predicate Operation Enum
"""
enum RelativePredicateOpEnum {
  ADD
  SUB
}

"""
Relative Date Predicate Unit Enum
"""
enum RelativePredicateUnitEnum {
  DAY
  DAY_HOUR
  DAY_MICROSECOND
  DAY_MINUTE
  DAY_SECOND
  HOUR
  HOUR_MICROSECOND
  HOUR_MINUTE
  HOUR_SECOND
  MICROSECOND
  MINUTE
  MINUTE_MICROSECOND
  MINUTE_SECOND
  MONTH
  QUARTER
  SECOND
  SECOND_MICROSECOND
  WEEK
  YEAR
  YEAR_MONTH
}

input ReplaceFunctionArguments {
  from: String!
  to: String!
}

"""
Custom reports generated based on building data.
"""
type Report {
  _description: String
  configuration: JSON
  createdAt: DateTime
  deletedAt: Int
  description: String
  file: File
  generated_date: DateTime
  id: ID
  name: String
  updatedAt: DateTime
  user_id: User
}

"""
Report create input
"""
input ReportCreateInput {
  configuration: JSON
  description: String
  file: ReportFileRelationInput
  generated_date: DateTime
  name: String
  user_id: ReportUser_idRelationInput
}

"""
Report create many input
"""
input ReportCreateManyInput {
  configuration: JSON
  description: String
  file: ReportFileManyRelationInput
  generated_date: DateTime
  name: String
  user_id: ReportUser_idManyRelationInput
}

"""
Report delete input
"""
input ReportDeleteInput {
  force: Boolean
  id: ID
}

"""
ReportFieldsPermissions create input
"""
input ReportFieldsPermissions {
  configuration: Boolean
  createdAt: Boolean
  description: Boolean
  generated_date: Boolean
  name: Boolean
  updatedAt: Boolean
}

"""
Report relation input
"""
input ReportFileManyRelationInput {
  connect: FileKeyFilter
}

"""
Report relation input
"""
input ReportFileRelationInput {
  connect: FileKeyFilter
  create: Report_file_FileCreateInput
}

"""
Report relation input
"""
input ReportFileUpdateRelationInput {
  connect: FileKeyFilter
  create: Report_file_FileCreateInput
  disconnect: FileKeyFilter
  reconnect: FileKeyFilter
  update: Report_file_FileUpdateInput
}

input ReportFilter {
  AND: [ReportFilter!]
  OR: [ReportFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  file: FileFilter
  generated_date: DateTimePredicate
  id: IDPredicate
  name: StringPredicate
  updatedAt: DateTimePredicate
  user_id: UserFilter
}

input ReportGroupBy {
  first: Int
  having: Having
  last: Int
  query: ReportGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input ReportGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  configuration: [GroupByField!]
  createdAt: [GroupByField!]
  description: [GroupByField!]
  file: FileGroupByQuery
  generated_date: [GroupByField!]
  id: [GroupByField!]
  name: [GroupByField!]
  updatedAt: [GroupByField!]
  user_id: UserGroupByQuery
}

input ReportKeyFilter {
  id: ID
}

"""
ReportListResponse output
"""
type ReportListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Report!]!
}

"""
ReportManyResponse output
"""
type ReportManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [Report!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum ReportOrderBy {
  configuration_ASC
  configuration_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  generated_date_ASC
  generated_date_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
Report subscription payload
"""
type ReportPayload {
  mutation: MutationType!
  node: Report
  previousValues: Report
  updatedFields: [String]
}

input ReportRelationFilter {
  every: ReportFilter
  none: ReportFilter
  some: ReportFilter
}

input ReportSort {
  createdAt: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  file: FileSort
  generated_date: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
  user_id: UserSort
}

"""
Report subscription filter
"""
input ReportSubscriptionFilter {
  mutation_in: [MutationType]
  node: ReportFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Report update input
"""
input ReportUpdateByFilterInput {
  configuration: [UpdateByFilterJsonInput]
  description: [UpdateByFilterStringInput]
  name: [UpdateByFilterStringInput]
}

"""
Report update input
"""
input ReportUpdateInput {
  configuration: JSON
  description: String
  file: ReportFileUpdateRelationInput
  generated_date: DateTime
  id: ID
  name: String
  user_id: ReportUser_idUpdateRelationInput
}

"""
Report relation input
"""
input ReportUser_idManyRelationInput {
  connect: UserKeyFilter
}

"""
Report relation input
"""
input ReportUser_idRelationInput {
  connect: UserKeyFilter
  create: Report_UserCreateInput
}

"""
Report relation input
"""
input ReportUser_idUpdateRelationInput {
  connect: UserKeyFilter
  create: Report_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: Report_UserUpdateInput
}

input Report_PermissionFilter {
  AND: [Report_PermissionFilter!]
  OR: [Report_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  file: File_PermissionFilter
  generated_date: DateTimePredicate
  id: IDPredicate
  name: StringPredicate
  updatedAt: DateTimePredicate
  user_id: User_PermissionFilter
}

input Report_PermissionRelationFilter {
  every: Report_PermissionFilter
  none: Report_PermissionFilter
  some: Report_PermissionFilter
}

"""
Users create input from Report
"""
input Report_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput
  MaintenanceRecord: UsersMaintenanceRecordRelationInput
  Notification: UsersNotificationRelationInput!
  Report: UsersReportRelationInput
  SearchCriteria: UsersSearchCriteriaRelationInput!
  WorkOrder: UsersWorkOrderRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from Report
"""
input Report_UserUpdateInput {
  BuildingProfile: UsersBuildingProfileUpdateRelationInput
  MaintenanceRecord: UsersMaintenanceRecordUpdateRelationInput
  Notification: UsersNotificationUpdateRelationInput
  Report: UsersReportUpdateRelationInput
  SearchCriteria: UsersSearchCriteriaUpdateRelationInput
  WorkOrder: UsersWorkOrderUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

"""
Files create input from report_file
"""
input Report_file_FileCreateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  report_file: FilesReport_fileRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileRelationInput
  users_avatar: FilesUsers_avatarRelationInput
}

"""
Files update input from report_file
"""
input Report_file_FileUpdateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean
  report_file: FilesReport_fileUpdateRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileUpdateRelationInput
  users_avatar: FilesUsers_avatarUpdateRelationInput
}

input ResizeImageDirectiveCropOptions {
  height: Int!
  offsetX: Int = 0
  offsetY: Int = 0
  width: Int!
}

input ResizeImageDirectiveFlipOptions {
  horizontally: Boolean
  vertically: Boolean
}

input ResizeImageDirectiveResizeOptions {
  height: Int
  width: Int
}

type Role {
  _description: String
  apiTokens(
    after: String
    before: String
    filter: ApiTokenFilter
    first: Int
    groupBy: ApiTokenGroupBy
    last: Int
    orderBy: [ApiTokenOrderBy]
    skip: Int
    sort: [ApiTokenSort!]
  ): ApiTokenListResponse
  authenticationProfiles(
    after: String
    before: String
    filter: AuthenticationProfileFilter
    first: Int
    groupBy: AuthenticationProfileGroupBy
    last: Int
    orderBy: [AuthenticationProfileOrderBy]
    skip: Int
    sort: [AuthenticationProfileSort!]
  ): AuthenticationProfileListResponse
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  description: String
  id: ID
  membersCount: Int!
  name: String
  permissions(filter: PermissionInputFilter): PermissionListResponse
  updatedAt: DateTime
  users(
    after: String
    before: String
    filter: UserFilter
    first: Int
    groupBy: UserGroupBy
    last: Int
    orderBy: [UserOrderBy]
    skip: Int
    sort: [UserSort!]
  ): UserListResponse
}

"""
Roles create input
"""
input RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""
Roles create many input
"""
input RoleCreateManyInput {
  apiTokens: RolesApiTokensManyRelationInput
  authenticationProfiles: RolesAuthenticationProfilesManyRelationInput
  description: String
  name: String!
  users: RolesUsersManyRelationInput
}

"""
Roles delete input
"""
input RoleDeleteInput {
  force: Boolean
  id: ID
}

enum RoleEnum {
  ADMIN
  EDITOR
  VIEWER
}

"""
RoleFieldsPermissions create input
"""
input RoleFieldsPermissions {
  createdAt: Boolean
  description: Boolean
  name: Boolean
  updatedAt: Boolean
}

input RoleFilter {
  AND: [RoleFilter!]
  OR: [RoleFilter!]
  _fullText: String
  apiTokens: ApiTokenRelationFilter
  authenticationProfiles: AuthenticationProfileRelationFilter
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  name: StringPredicate
  permissions: PermissionRelationFilter
  updatedAt: DateTimePredicate
  users: UserRelationFilter
}

input RoleGroupBy {
  first: Int
  having: Having
  last: Int
  query: RoleGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input RoleGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  apiTokens: ApiTokenGroupByQuery
  authenticationProfiles: AuthenticationProfileGroupByQuery
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  description: [GroupByField!]
  id: [GroupByField!]
  name: [GroupByField!]
  permissions: PermissionGroupByQuery
  updatedAt: [GroupByField!]
  users: UserGroupByQuery
}

input RoleKeyFilter {
  id: ID
  name: String
}

"""
RoleListResponse output
"""
type RoleListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Role!]!
}

"""
RoleManyResponse output
"""
type RoleManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [Role!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum RoleOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  systemType_ASC
  systemType_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
Roles subscription payload
"""
type RolePayload {
  mutation: MutationType!
  node: Role
  previousValues: Role
  updatedFields: [String]
}

input RoleRelationFilter {
  every: RoleFilter
  none: RoleFilter
  some: RoleFilter
}

input RoleSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

"""
Roles subscription filter
"""
input RoleSubscriptionFilter {
  mutation_in: [MutationType]
  node: RoleFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Roles update input
"""
input RoleUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
  name: [UpdateByFilterStringInput]
  systemType: [UpdateByFilterStringInput]
}

"""
Roles update input
"""
input RoleUpdateInput {
  apiTokens: RolesApiTokensUpdateRelationInput
  authenticationProfiles: RolesAuthenticationProfilesUpdateRelationInput
  description: String
  id: ID
  name: String
  permissions: PermissionsInput
  users: RolesUsersUpdateRelationInput
}

input Role_PermissionFilter {
  AND: [Role_PermissionFilter!]
  OR: [Role_PermissionFilter!]
  _fullText: String
  apiTokens: ApiToken_PermissionRelationFilter
  authenticationProfiles: AuthenticationProfile_PermissionRelationFilter
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  name: StringPredicate
  permissions: Permission_PermissionRelationFilter
  updatedAt: DateTimePredicate
  users: User_PermissionRelationFilter
}

input Role_PermissionRelationFilter {
  every: Role_PermissionFilter
  none: Role_PermissionFilter
  some: Role_PermissionFilter
}

"""
Roles relation input
"""
input RolesApiTokensManyRelationInput {
  connect: [ApiTokenKeyFilter!]
}

"""
Roles relation input
"""
input RolesApiTokensRelationInput {
  connect: [ApiTokenKeyFilter!]
}

"""
Roles relation input
"""
input RolesApiTokensUpdateRelationInput {
  connect: [ApiTokenKeyFilter!]
  disconnect: [ApiTokenKeyFilter!]
  reconnect: [ApiTokenKeyFilter!]
  update: [Roles_ApiTokenUpdateInput]
}

"""
Roles relation input
"""
input RolesAuthenticationProfilesManyRelationInput {
  connect: [AuthenticationProfileKeyFilter!]
}

"""
Roles relation input
"""
input RolesAuthenticationProfilesRelationInput {
  connect: [AuthenticationProfileKeyFilter!]
  create: [Roles_AuthenticationProfileCreateInput]
}

"""
Roles relation input
"""
input RolesAuthenticationProfilesUpdateRelationInput {
  connect: [AuthenticationProfileKeyFilter!]
  create: [Roles_AuthenticationProfileCreateInput]
  disconnect: [AuthenticationProfileKeyFilter!]
  reconnect: [AuthenticationProfileKeyFilter!]
  update: [Roles_AuthenticationProfileUpdateInput]
}

"""
Roles relation input
"""
input RolesUsersManyRelationInput {
  connect: [UserKeyFilter!]
}

"""
Roles relation input
"""
input RolesUsersRelationInput {
  connect: [UserKeyFilter!]
  create: [Roles_UserCreateInput]
}

"""
Roles relation input
"""
input RolesUsersUpdateRelationInput {
  connect: [UserKeyFilter!]
  create: [Roles_UserCreateInput]
  disconnect: [UserKeyFilter!]
  reconnect: [UserKeyFilter!]
  update: [Roles_UserUpdateInput]
}

"""
ApiTokens update input from roles
"""
input Roles_ApiTokenUpdateInput {
  data: ApiTokenUpdateInput!
  filter: ApiTokenKeyFilter
}

"""
AuthenticationProfiles create input from roles
"""
input Roles_AuthenticationProfileCreateInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  managementDomain: String
  name: String!
  roles: AuthenticationProfilesRolesRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean = false
  type: String = "8BASE"
}

"""
AuthenticationProfiles update input from roles
"""
input Roles_AuthenticationProfileUpdateInput {
  data: AuthenticationProfileUpdateInput!
  filter: AuthenticationProfileKeyFilter
}

"""
Users create input from roles
"""
input Roles_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput!
  MaintenanceRecord: UsersMaintenanceRecordRelationInput!
  Notification: UsersNotificationRelationInput!
  Report: UsersReportRelationInput!
  SearchCriteria: UsersSearchCriteriaRelationInput!
  WorkOrder: UsersWorkOrderRelationInput!
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from roles
"""
input Roles_UserUpdateInput {
  data: UserUpdateInput!
  filter: UserKeyFilter
}

"""
Schema Origin
"""
type SchemaOrigin {
  provider: String
  type: SchemaOriginType!
}

"""
Schema Origin Type Enum
"""
enum SchemaOriginType {
  LOCAL
  REMOTE
  VIEW
}

"""
SearchCriteria relation input
"""
input SearchCriteriaUser_idManyRelationInput {
  connect: UserKeyFilter
}

"""
SearchCriteria relation input
"""
input SearchCriteriaUser_idRelationInput {
  connect: UserKeyFilter
  create: SearchCriteria_UserCreateInput
}

"""
SearchCriteria relation input
"""
input SearchCriteriaUser_idUpdateRelationInput {
  connect: UserKeyFilter
  create: SearchCriteria_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: SearchCriteria_UserUpdateInput
}

"""
Users create input from SearchCriteria
"""
input SearchCriteria_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput
  MaintenanceRecord: UsersMaintenanceRecordRelationInput
  Notification: UsersNotificationRelationInput!
  Report: UsersReportRelationInput
  SearchCriteria: UsersSearchCriteriaRelationInput
  WorkOrder: UsersWorkOrderRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from SearchCriteria
"""
input SearchCriteria_UserUpdateInput {
  BuildingProfile: UsersBuildingProfileUpdateRelationInput
  MaintenanceRecord: UsersMaintenanceRecordUpdateRelationInput
  Notification: UsersNotificationUpdateRelationInput
  Report: UsersReportUpdateRelationInput
  SearchCriteria: UsersSearchCriteriaUpdateRelationInput
  WorkOrder: UsersWorkOrderUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

"""
Saved search criteria for users.
"""
type SearchCriterion {
  _description: String
  createdAt: DateTime
  created_date: DateTime
  criteria: JSON
  deletedAt: Int
  id: ID
  last_modified_date: DateTime
  name: String
  updatedAt: DateTime
  user_id: User
}

"""
SearchCriteria create input
"""
input SearchCriterionCreateInput {
  created_date: DateTime
  criteria: JSON
  last_modified_date: DateTime
  name: String
  user_id: SearchCriteriaUser_idRelationInput
}

"""
SearchCriteria create many input
"""
input SearchCriterionCreateManyInput {
  created_date: DateTime
  criteria: JSON
  last_modified_date: DateTime
  name: String
  user_id: SearchCriteriaUser_idManyRelationInput
}

"""
SearchCriteria delete input
"""
input SearchCriterionDeleteInput {
  force: Boolean
  id: ID
}

"""
SearchCriterionFieldsPermissions create input
"""
input SearchCriterionFieldsPermissions {
  createdAt: Boolean
  created_date: Boolean
  criteria: Boolean
  last_modified_date: Boolean
  name: Boolean
  updatedAt: Boolean
}

input SearchCriterionFilter {
  AND: [SearchCriterionFilter!]
  OR: [SearchCriterionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  created_date: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  last_modified_date: DateTimePredicate
  name: StringPredicate
  updatedAt: DateTimePredicate
  user_id: UserFilter
}

input SearchCriterionGroupBy {
  first: Int
  having: Having
  last: Int
  query: SearchCriterionGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input SearchCriterionGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  created_date: [GroupByField!]
  criteria: [GroupByField!]
  id: [GroupByField!]
  last_modified_date: [GroupByField!]
  name: [GroupByField!]
  updatedAt: [GroupByField!]
  user_id: UserGroupByQuery
}

input SearchCriterionKeyFilter {
  id: ID
}

"""
SearchCriterionListResponse output
"""
type SearchCriterionListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [SearchCriterion!]!
}

"""
SearchCriterionManyResponse output
"""
type SearchCriterionManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SearchCriterion!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum SearchCriterionOrderBy {
  createdAt_ASC
  createdAt_DESC
  created_date_ASC
  created_date_DESC
  criteria_ASC
  criteria_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  last_modified_date_ASC
  last_modified_date_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
SearchCriteria subscription payload
"""
type SearchCriterionPayload {
  mutation: MutationType!
  node: SearchCriterion
  previousValues: SearchCriterion
  updatedFields: [String]
}

input SearchCriterionSort {
  createdAt: SortOrder
  created_date: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  last_modified_date: SortOrder
  name: SortOrder
  updatedAt: SortOrder
  user_id: UserSort
}

"""
SearchCriteria subscription filter
"""
input SearchCriterionSubscriptionFilter {
  mutation_in: [MutationType]
  node: SearchCriterionFilter
  updatedFields: UpdatedFieldsFilter
}

"""
SearchCriteria update input
"""
input SearchCriterionUpdateByFilterInput {
  criteria: [UpdateByFilterJsonInput]
  name: [UpdateByFilterStringInput]
}

"""
SearchCriteria update input
"""
input SearchCriterionUpdateInput {
  created_date: DateTime
  criteria: JSON
  id: ID
  last_modified_date: DateTime
  name: String
  user_id: SearchCriteriaUser_idUpdateRelationInput
}

input SearchCriterion_PermissionFilter {
  AND: [SearchCriterion_PermissionFilter!]
  OR: [SearchCriterion_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  created_date: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  last_modified_date: DateTimePredicate
  name: StringPredicate
  updatedAt: DateTimePredicate
  user_id: User_PermissionFilter
}

type Setting {
  _description: String
  bgColor: String
  buttonLinkColor: String
  containerColor: String
  createdAt: DateTime
  createdBy: User
  currency: String
  dateFormat: String
  landingPageImage: File
  language: String
  leftNavColor: String
  menuBarBGColor: String
  menuBarIconsColor: String
  menuBarLogo: File
  passwordMinLength: Int
  passwordRequireLowercase: Boolean
  passwordRequireNumbers: Boolean
  passwordRequireSpecial: Boolean
  passwordRequireUppercase: Boolean
  passwordUpdateInterval: Int
  rememberDevice: String
  timezone: String
  updatedAt: DateTime
  userInterfaceStyle: String
  vanityUrl: String
}

input SettingFilter {
  AND: [SettingFilter!]
  OR: [SettingFilter!]
  _fullText: String
  bgColor: StringPredicate
  buttonLinkColor: StringPredicate
  containerColor: StringPredicate
  createdAt: DateTimePredicate
  createdBy: UserFilter
  currency: StringPredicate
  dateFormat: StringPredicate
  deletedAt: IntPredicate
  landingPageImage: FileFilter
  language: StringPredicate
  leftNavColor: StringPredicate
  menuBarBGColor: StringPredicate
  menuBarIconsColor: StringPredicate
  menuBarLogo: FileFilter
  passwordMinLength: IntPredicate
  passwordRequireLowercase: BoolPredicate
  passwordRequireNumbers: BoolPredicate
  passwordRequireSpecial: BoolPredicate
  passwordRequireUppercase: BoolPredicate
  passwordUpdateInterval: IntPredicate
  rememberDevice: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
  userInterfaceStyle: StringPredicate
  vanityUrl: StringPredicate
}

input SettingGroupBy {
  first: Int
  having: Having
  last: Int
  query: SettingGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input SettingGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  bgColor: [GroupByField!]
  buttonLinkColor: [GroupByField!]
  containerColor: [GroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  currency: [GroupByField!]
  dateFormat: [GroupByField!]
  landingPageImage: FileGroupByQuery
  language: [GroupByField!]
  leftNavColor: [GroupByField!]
  menuBarBGColor: [GroupByField!]
  menuBarIconsColor: [GroupByField!]
  menuBarLogo: FileGroupByQuery
  passwordMinLength: [GroupByField!]
  passwordRequireLowercase: [GroupByField!]
  passwordRequireNumbers: [GroupByField!]
  passwordRequireSpecial: [GroupByField!]
  passwordRequireUppercase: [GroupByField!]
  passwordUpdateInterval: [GroupByField!]
  rememberDevice: [GroupByField!]
  timezone: [GroupByField!]
  updatedAt: [GroupByField!]
  userInterfaceStyle: [GroupByField!]
  vanityUrl: [GroupByField!]
}

"""
SettingListResponse output
"""
type SettingListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [Setting!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum SettingOrderBy {
  bgColor_ASC
  bgColor_DESC
  buttonLinkColor_ASC
  buttonLinkColor_DESC
  containerColor_ASC
  containerColor_DESC
  createdAt_ASC
  createdAt_DESC
  currency_ASC
  currency_DESC
  dateFormat_ASC
  dateFormat_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  language_ASC
  language_DESC
  leftNavColor_ASC
  leftNavColor_DESC
  menuBarBGColor_ASC
  menuBarBGColor_DESC
  menuBarIconsColor_ASC
  menuBarIconsColor_DESC
  passwordMinLength_ASC
  passwordMinLength_DESC
  passwordRequireLowercase_ASC
  passwordRequireLowercase_DESC
  passwordRequireNumbers_ASC
  passwordRequireNumbers_DESC
  passwordRequireSpecial_ASC
  passwordRequireSpecial_DESC
  passwordRequireUppercase_ASC
  passwordRequireUppercase_DESC
  passwordUpdateInterval_ASC
  passwordUpdateInterval_DESC
  rememberDevice_ASC
  rememberDevice_DESC
  timezone_ASC
  timezone_DESC
  updatedAt_ASC
  updatedAt_DESC
  userInterfaceStyle_ASC
  userInterfaceStyle_DESC
  vanityUrl_ASC
  vanityUrl_DESC
}

"""
Settings subscription payload
"""
type SettingPayload {
  mutation: MutationType!
  node: Setting
  previousValues: Setting
  updatedFields: [String]
}

input SettingRelationFilter {
  every: SettingFilter
  none: SettingFilter
  some: SettingFilter
}

input SettingSort {
  bgColor: SortOrder
  buttonLinkColor: SortOrder
  containerColor: SortOrder
  createdAt: SortOrder
  createdBy: UserSort
  currency: SortOrder
  dateFormat: SortOrder
  deletedAt: SortOrder
  landingPageImage: FileSort
  language: SortOrder
  leftNavColor: SortOrder
  menuBarBGColor: SortOrder
  menuBarIconsColor: SortOrder
  menuBarLogo: FileSort
  passwordMinLength: SortOrder
  passwordRequireLowercase: SortOrder
  passwordRequireNumbers: SortOrder
  passwordRequireSpecial: SortOrder
  passwordRequireUppercase: SortOrder
  passwordUpdateInterval: SortOrder
  rememberDevice: SortOrder
  timezone: SortOrder
  updatedAt: SortOrder
  userInterfaceStyle: SortOrder
  vanityUrl: SortOrder
}

"""
Settings subscription filter
"""
input SettingSubscriptionFilter {
  mutation_in: [MutationType]
  node: SettingFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Settings update input
"""
input SettingUpdateInput {
  bgColor: String
  buttonLinkColor: String
  containerColor: String
  currency: String
  dateFormat: String
  language: String
  leftNavColor: String
  menuBarBGColor: String
  menuBarIconsColor: String
  passwordMinLength: Int
  passwordRequireLowercase: Boolean
  passwordRequireNumbers: Boolean
  passwordRequireSpecial: Boolean
  passwordRequireUppercase: Boolean
  passwordUpdateInterval: Int
  rememberDevice: String
  timezone: String
  userInterfaceStyle: String
  vanityUrl: String
}

input Setting_PermissionFilter {
  AND: [Setting_PermissionFilter!]
  OR: [Setting_PermissionFilter!]
  _fullText: String
  bgColor: StringPredicate
  buttonLinkColor: StringPredicate
  containerColor: StringPredicate
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  currency: StringPredicate
  dateFormat: StringPredicate
  deletedAt: IntPredicate
  landingPageImage: File_PermissionFilter
  language: StringPredicate
  leftNavColor: StringPredicate
  menuBarBGColor: StringPredicate
  menuBarIconsColor: StringPredicate
  menuBarLogo: File_PermissionFilter
  passwordMinLength: IntPredicate
  passwordRequireLowercase: BoolPredicate
  passwordRequireNumbers: BoolPredicate
  passwordRequireSpecial: BoolPredicate
  passwordRequireUppercase: BoolPredicate
  passwordUpdateInterval: IntPredicate
  rememberDevice: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
  userInterfaceStyle: StringPredicate
  vanityUrl: StringPredicate
}

input Setting_PermissionRelationFilter {
  every: Setting_PermissionFilter
  none: Setting_PermissionFilter
  some: Setting_PermissionFilter
}

"""
SignUpResendInput
"""
input SignUpResendInput {
  email: String!
}

"""
Includes site photos, videos, and other documents related to the building.
"""
type SiteDocumentation {
  BuildingProfile(
    after: String
    before: String
    filter: BuildingProfileFilter
    first: Int
    groupBy: BuildingProfileGroupBy
    last: Int
    orderBy: [BuildingProfileOrderBy]
    skip: Int
    sort: [BuildingProfileSort!]
  ): BuildingProfileListResponse
  _description: String
  building_profile_id: BuildingProfile
  createdAt: DateTime
  deletedAt: Int
  description: String
  document_file: File
  document_type: String
  id: ID
  updatedAt: DateTime
  upload_date: DateTime
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationBuildingProfileManyRelationInput {
  connect: [BuildingProfileKeyFilter!]
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationBuildingProfileRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Site_documentation_BuildingProfileCreateInput]
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationBuildingProfileUpdateRelationInput {
  connect: [BuildingProfileKeyFilter!]
  create: [Site_documentation_BuildingProfileCreateInput]
  disconnect: [BuildingProfileKeyFilter!]
  reconnect: [BuildingProfileKeyFilter!]
  update: [Site_documentation_BuildingProfileUpdateInput]
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: SiteDocumentation_BuildingProfileCreateInput
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: SiteDocumentation_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: SiteDocumentation_BuildingProfileUpdateInput
}

"""
SiteDocumentation create input
"""
input SiteDocumentationCreateInput {
  BuildingProfile: SiteDocumentationBuildingProfileRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileRelationInput
  document_type: String
  upload_date: DateTime
}

"""
SiteDocumentation create many input
"""
input SiteDocumentationCreateManyInput {
  BuildingProfile: SiteDocumentationBuildingProfileManyRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idManyRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileManyRelationInput
  document_type: String
  upload_date: DateTime
}

"""
SiteDocumentation delete input
"""
input SiteDocumentationDeleteInput {
  force: Boolean
  id: ID
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationDocument_fileManyRelationInput {
  connect: FileKeyFilter
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationDocument_fileRelationInput {
  connect: FileKeyFilter
  create: SiteDocumentation_document_file_FileCreateInput
}

"""
SiteDocumentation relation input
"""
input SiteDocumentationDocument_fileUpdateRelationInput {
  connect: FileKeyFilter
  create: SiteDocumentation_document_file_FileCreateInput
  disconnect: FileKeyFilter
  reconnect: FileKeyFilter
  update: SiteDocumentation_document_file_FileUpdateInput
}

"""
SiteDocumentationFieldsPermissions create input
"""
input SiteDocumentationFieldsPermissions {
  createdAt: Boolean
  description: Boolean
  document_type: Boolean
  updatedAt: Boolean
  upload_date: Boolean
}

input SiteDocumentationFilter {
  AND: [SiteDocumentationFilter!]
  BuildingProfile: BuildingProfileRelationFilter
  OR: [SiteDocumentationFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  document_file: FileFilter
  document_type: StringPredicate
  id: IDPredicate
  updatedAt: DateTimePredicate
  upload_date: DateTimePredicate
}

input SiteDocumentationGroupBy {
  first: Int
  having: Having
  last: Int
  query: SiteDocumentationGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input SiteDocumentationGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  createdAt: [GroupByField!]
  description: [GroupByField!]
  document_file: FileGroupByQuery
  document_type: [GroupByField!]
  id: [GroupByField!]
  updatedAt: [GroupByField!]
  upload_date: [GroupByField!]
}

input SiteDocumentationKeyFilter {
  id: ID
}

"""
SiteDocumentationListResponse output
"""
type SiteDocumentationListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [SiteDocumentation!]!
}

"""
SiteDocumentationManyResponse output
"""
type SiteDocumentationManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SiteDocumentation!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum SiteDocumentationOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  document_type_ASC
  document_type_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  upload_date_ASC
  upload_date_DESC
}

"""
SiteDocumentation subscription payload
"""
type SiteDocumentationPayload {
  mutation: MutationType!
  node: SiteDocumentation
  previousValues: SiteDocumentation
  updatedFields: [String]
}

input SiteDocumentationRelationFilter {
  every: SiteDocumentationFilter
  none: SiteDocumentationFilter
  some: SiteDocumentationFilter
}

input SiteDocumentationSort {
  building_profile_id: BuildingProfileSort
  createdAt: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  document_file: FileSort
  document_type: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  upload_date: SortOrder
}

"""
SiteDocumentation subscription filter
"""
input SiteDocumentationSubscriptionFilter {
  mutation_in: [MutationType]
  node: SiteDocumentationFilter
  updatedFields: UpdatedFieldsFilter
}

"""
SiteDocumentation update input
"""
input SiteDocumentationUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
  document_type: [UpdateByFilterStringInput]
}

"""
SiteDocumentation update input
"""
input SiteDocumentationUpdateInput {
  BuildingProfile: SiteDocumentationBuildingProfileUpdateRelationInput
  building_profile_id: SiteDocumentationBuilding_profile_idUpdateRelationInput
  description: String
  document_file: SiteDocumentationDocument_fileUpdateRelationInput
  document_type: String
  id: ID
  upload_date: DateTime
}

"""
BuildingProfile create input from SiteDocumentation
"""
input SiteDocumentation_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput
  Improvement: BuildingProfileImprovementRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from SiteDocumentation
"""
input SiteDocumentation_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input SiteDocumentation_PermissionFilter {
  AND: [SiteDocumentation_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionRelationFilter
  OR: [SiteDocumentation_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  document_file: File_PermissionFilter
  document_type: StringPredicate
  id: IDPredicate
  updatedAt: DateTimePredicate
  upload_date: DateTimePredicate
}

input SiteDocumentation_PermissionRelationFilter {
  every: SiteDocumentation_PermissionFilter
  none: SiteDocumentation_PermissionFilter
  some: SiteDocumentation_PermissionFilter
}

"""
Files create input from siteDocumentation_document_file
"""
input SiteDocumentation_document_file_FileCreateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  report_file: FilesReport_fileRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileRelationInput
  users_avatar: FilesUsers_avatarRelationInput
}

"""
Files update input from siteDocumentation_document_file
"""
input SiteDocumentation_document_file_FileUpdateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean
  report_file: FilesReport_fileUpdateRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileUpdateRelationInput
  users_avatar: FilesUsers_avatarUpdateRelationInput
}

"""
BuildingProfile create input from site_documentation
"""
input Site_documentation_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput!
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput!
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from site_documentation
"""
input Site_documentation_BuildingProfileUpdateInput {
  data: BuildingProfileUpdateInput!
  filter: BuildingProfileKeyFilter
}

"""
Smart Field Attributes
"""
type SmartFieldTypeAttributes {
  format: String!
  innerFields: [CustomTableField]
}

"""
Smart Type Format Enum
"""
enum SmartTypeFormatEnum {
  ADDRESS
  PHONE
}

"""
SortOrder
"""
enum SortOrder {
  ASC
  DESC
}

input StringPadFunctionArguments {
  len: Int!
  str: String!
}

input StringPredicate {
  contains: String
  ends_with: String
  equals: String
  in: [String!]
  is_empty: Boolean
  is_not_empty: Boolean
  not_contains: String
  not_ends_with: String
  not_equals: String
  not_in: [String!]
  not_starts_with: String
  starts_with: String
}

input StringPredicateHaving {
  AND: [StringPredicateHaving!]
  OR: [StringPredicateHaving!]
  contains: String
  ends_with: String
  equals: String
  in: [String!]
  is_empty: Boolean
  is_not_empty: Boolean
  not_contains: String
  not_ends_with: String
  not_equals: String
  not_in: [String!]
  not_starts_with: String
  starts_with: String
}

enum StringTrimMode {
  BOTH
  LEADING
  TRAILING
}

type Subscription {
  ApiTokens(filter: ApiTokenSubscriptionFilter): ApiTokenPayload
  AuthenticationProfiles(
    filter: AuthenticationProfileSubscriptionFilter
  ): AuthenticationProfilePayload
  AuthenticationSettings(
    filter: AuthenticationSettingSubscriptionFilter
  ): AuthenticationSettingPayload
  BuildingProfile(
    filter: BuildingProfileSubscriptionFilter
  ): BuildingProfilePayload
  Certification(filter: CertificationSubscriptionFilter): CertificationPayload
  ComplianceRecord(
    filter: ComplianceRecordSubscriptionFilter
  ): ComplianceRecordPayload
  EnergyEfficiency(
    filter: EnergyEfficiencySubscriptionFilter
  ): EnergyEfficiencyPayload
  EnvironmentVariables(
    filter: EnvironmentVariableSubscriptionFilter
  ): EnvironmentVariablePayload
  EnvironmentalInformation(
    filter: EnvironmentalInformationSubscriptionFilter
  ): EnvironmentalInformationPayload
  EquipmentInventory(
    filter: EquipmentInventorySubscriptionFilter
  ): EquipmentInventoryPayload
  Files(filter: FileSubscriptionFilter): FilePayload
  FilesSettings(filter: FilesSettingSubscriptionFilter): FilesSettingPayload
  Improvement(filter: ImprovementSubscriptionFilter): ImprovementPayload
  IndoorAirQuality(
    filter: IndoorAirQualitySubscriptionFilter
  ): IndoorAirQualityPayload
  MaintenanceRecord(
    filter: MaintenanceRecordSubscriptionFilter
  ): MaintenanceRecordPayload
  Notification(filter: NotificationSubscriptionFilter): NotificationPayload
  Permissions(filter: PermissionSubscriptionFilter): PermissionPayload
  Permit(filter: PermitSubscriptionFilter): PermitPayload
  Report(filter: ReportSubscriptionFilter): ReportPayload
  Roles(filter: RoleSubscriptionFilter): RolePayload
  SearchCriteria(
    filter: SearchCriterionSubscriptionFilter
  ): SearchCriterionPayload
  Settings(filter: SettingSubscriptionFilter): SettingPayload
  SiteDocumentation(
    filter: SiteDocumentationSubscriptionFilter
  ): SiteDocumentationPayload
  SubscriptionTier(
    filter: SubscriptionTierSubscriptionFilter
  ): SubscriptionTierPayload
  Users(filter: UserSubscriptionFilter): UserPayload
  WorkOrder(filter: WorkOrderSubscriptionFilter): WorkOrderPayload
}

"""
Details related to different subscription tiers.
"""
type SubscriptionTier {
  _description: String
  createdAt: DateTime
  deletedAt: Int
  description: String
  features: JSON
  id: ID
  name: String
  price: Int
  updatedAt: DateTime
}

"""
SubscriptionTier create input
"""
input SubscriptionTierCreateInput {
  description: String
  features: JSON
  name: String
  price: Int
}

"""
SubscriptionTier create many input
"""
input SubscriptionTierCreateManyInput {
  description: String
  features: JSON
  name: String
  price: Int
}

"""
SubscriptionTier delete input
"""
input SubscriptionTierDeleteInput {
  force: Boolean
  id: ID
}

"""
SubscriptionTierFieldsPermissions create input
"""
input SubscriptionTierFieldsPermissions {
  createdAt: Boolean
  description: Boolean
  features: Boolean
  name: Boolean
  price: Boolean
  updatedAt: Boolean
}

input SubscriptionTierFilter {
  AND: [SubscriptionTierFilter!]
  OR: [SubscriptionTierFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  name: StringPredicate
  price: IntPredicate
  updatedAt: DateTimePredicate
}

input SubscriptionTierGroupBy {
  first: Int
  having: Having
  last: Int
  query: SubscriptionTierGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input SubscriptionTierGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  description: [GroupByField!]
  features: [GroupByField!]
  id: [GroupByField!]
  name: [GroupByField!]
  price: [GroupByField!]
  updatedAt: [GroupByField!]
}

input SubscriptionTierKeyFilter {
  id: ID
  name: String
}

"""
SubscriptionTierListResponse output
"""
type SubscriptionTierListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [SubscriptionTier!]!
}

"""
SubscriptionTierManyResponse output
"""
type SubscriptionTierManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SubscriptionTier!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum SubscriptionTierOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  features_ASC
  features_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
SubscriptionTier subscription payload
"""
type SubscriptionTierPayload {
  mutation: MutationType!
  node: SubscriptionTier
  previousValues: SubscriptionTier
  updatedFields: [String]
}

input SubscriptionTierSort {
  createdAt: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  price: SortOrder
  updatedAt: SortOrder
}

"""
SubscriptionTier subscription filter
"""
input SubscriptionTierSubscriptionFilter {
  mutation_in: [MutationType]
  node: SubscriptionTierFilter
  updatedFields: UpdatedFieldsFilter
}

"""
SubscriptionTier update input
"""
input SubscriptionTierUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
  features: [UpdateByFilterJsonInput]
  name: [UpdateByFilterStringInput]
  price: [UpdateByFilterIntInput]
}

"""
SubscriptionTier update input
"""
input SubscriptionTierUpdateInput {
  description: String
  features: JSON
  id: ID
  name: String
  price: Int
}

input SubscriptionTier_PermissionFilter {
  AND: [SubscriptionTier_PermissionFilter!]
  OR: [SubscriptionTier_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  name: StringPredicate
  price: IntPredicate
  updatedAt: DateTimePredicate
}

input SubstringFunctionArguments {
  len: Int
  pos: Int!
}

type SuccessResponse {
  success: Boolean
}

type SuccessWithMessageResponse {
  message: String
  success: Boolean
}

"""
Switch Field Attributes
"""
type SwitchFieldTypeAttributes {
  format: String!
  listOptions: [String]
}

"""
Switch Type Format Enum
"""
enum SwitchTypeFormatEnum {
  ACTIVE_INACTIVE
  CUSTOM
  HIGH_LOW
  ON_OFF
  TRUE_FALSE
  YES_NO
}

input SystemAIIdeasInput {
  examples: [String]
  name: String
}

"""
Application
"""
type SystemApplication {
  appType: String!
  createdAt: DateTime!
  description: String
  displayName: String
  id: ID!
  name: String!
  status: SystemApplicationStatusEnum!
}

"""
ApplicationDeleteMutationInput
"""
input SystemApplicationDeleteMutationInput {
  force: Boolean
  id: String!
}

"""
Application install input
"""
input SystemApplicationInstallInput {
  appType: String!
  description: String
  displayName: String
  name: String!
  status: SystemApplicationStatusEnum = INACTIVE
}

"""
SystemApplicationListResponse output
"""
type SystemApplicationListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemApplication!]!
}

"""
Application Status Enum
"""
enum SystemApplicationStatusEnum {
  ACTIVE
  INACTIVE
}

"""
Application update input
"""
input SystemApplicationUpdateInput {
  description: String
  displayName: String
  id: String!
  name: String
  status: SystemApplicationStatusEnum
}

type SystemAsyncSessionStatusResponse {
  result: JSON
  status: String!
}

type SystemAuthProfile {
  id: String
  name: String
  type: String
}

type SystemAuthenticationInfo {
  authProfile: [SystemAuthProfile]
  environmentId: String
  environmentName: String
}

type SystemBackendUtilizationResponse {
  authProfiles: Int
  databaseRows: Int
  field: Int
  fileStorageSize: Int
  functions: Int
  roles: Int
  tables: Int
}

type SystemBasicSectionConfigurationForPromptExecutionResponse {
  content: JSON
}

type SystemBasicSectionConfigurationItem {
  criteria: String!
  description: String!
  enabledWith8base: Boolean
  id: ID!
  name: String!
}

type SystemBasicSectionConfigurationResponse {
  application_classification: [SystemBasicSectionConfigurationItem]
  building_blocks: [SystemBasicSectionConfigurationItem]
  commercialization_model: [SystemBasicSectionConfigurationItem]
}

type SystemBillingCurrentPlanResponse {
  customerId: String
  displayName: String
  features: [SystemBillingPlanFeature]
  id: ID
  limitMetrics: [SystemBillingPlanLimitMetrics]
  name: String
  nextPlan: SystemBillingNextPlanResponse
  paymentDate: DateTime
  paymentDetails: String
  pdf: String
  price: Int
  status: SystemWorkspaceStatus
  subscriptionId: String
  trialEnd: DateTime
}

enum SystemBillingDetailsOrigin {
  member
  organization
  workspace
}

type SystemBillingDetailsResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: SystemBillingDetailsOrigin!
}

type SystemBillingInvoiceItem {
  amountDue: Float
  amountPaid: Float
  amountRemaining: Float
  description: String
  endingBalance: Float
  id: ID!
  invoicePdf: String
  number: String
  organization: SystemBillingInvoiceItemOrganizationInfo
  paid: Boolean
  periodEnd: DateTime
  periodStart: DateTime
  plan: SystemBillingInvoiceItemPlanInfo
  project: SystemBillingInvoiceItemProjectInfo
  status: String
  total: Float
}

type SystemBillingInvoiceItemOrganizationInfo {
  id: ID
  name: String
}

type SystemBillingInvoiceItemPlanInfo {
  displayName: String
  id: ID
  name: String
}

type SystemBillingInvoiceItemProjectInfo {
  id: ID
  name: String
}

enum SystemBillingInvoicesListFilterType {
  CUSTOMER
  PROJECT
}

"""
SystemBillingInvoicesListResponse output
"""
type SystemBillingInvoicesListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemBillingInvoiceItem!]!
}

type SystemBillingLimitMetricItem {
  description: String
  displayName: String
  name: String
  showPriority: Int
  tooltip: String
  unit: String
}

type SystemBillingMetricOverageItem {
  value: Float
  warning: String
}

type SystemBillingMetricUsageItem {
  limitMetric: SystemBillingLimitMetricItem
  overage: SystemBillingMetricOverageItem
  value: Float
}

type SystemBillingMetricUsageQuotaItem {
  limitMetric: SystemBillingLimitMetricItem
  value: Float
}

"""
SystemBillingMetricUsageQuotasListResponse output
"""
type SystemBillingMetricUsageQuotasListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemBillingMetricUsageQuotaItem!]!
}

input SystemBillingMetricUsagesListFilter {
  entryDate: DateTimePredicate!
}

"""
SystemBillingMetricUsagesListResponse output
"""
type SystemBillingMetricUsagesListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemBillingMetricUsageItem!]!
}

type SystemBillingNextPlanResponse {
  displayName: String
  id: ID
  name: String
  pdf: String
  price: Int
}

type SystemBillingPlanBaseInfo {
  capacity: String
  description: String
  displayName: String
  featuresTitle: String
  id: ID
  isCustom: Boolean
  isLegacy: Boolean
  limitMetrics: [SystemBillingPlanLimitMetricItem]
  name: String
  pdf: String
  price: Int
  status: String
}

type SystemBillingPlanFeature {
  displayName: String
  isActive: Boolean
  name: String
}

type SystemBillingPlanLimitMetricItem {
  displayName: String
  hardLimit: Float
  name: String
  overagePrice: Int
  softLimit: Float
}

type SystemBillingPlanLimitMetrics {
  hardLimit: String
  id: String
  name: String
  overagePrice: String
  softLimit: String
}

"""
BillingPlanUpdateMutationInput
"""
input SystemBillingPlanUpdateMutationInput {
  planId: ID!
  projectID: ID!
}

enum SystemBranchEnvironmentMode {
  FULL
  SYSTEM
}

type SystemCacheEvictResponse {
  evicted: [String]!
}

input SystemChangePlanIdeaMutationInput {
  archieId: ID!
  couponId: String
  couponName: String
  id: ID!
  newPlan: String!
}

input SystemChangeRoleIdeaMemberMutationInput {
  email: String!
  ideaId: ID!
  role: InvitationRoleEnum!
}

input SystemChangeRoleIdeaMutationInputList {
  recipients: [SystemChangeRoleIdeaMemberMutationInput!]!
}

"""
Ci Commit Mode
"""
enum SystemCiCommitMode {
  FULL
  ONLY_MIGRATIONS
  ONLY_PROJECT
}

"""
Ci Status
"""
type SystemCiStatusOutput {
  migrations: [String]
  status: String!
}

"""
CloudLogs Entry
"""
type SystemCloudLogsEntry {
  message: String
  timestamp: DateTime
}

"""
Computed field mode
"""
enum SystemComputedFieldMode {
  STORED
  VIRTUAL
}

"""
Custom Table Field Type
"""
type SystemCustomTableField {
  computedMode: SystemComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType
  fieldTypeAttributes: SystemFieldTypeAttributes
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String
}

"""
Date Field Attributes
"""
type SystemDateFieldTypeAttributes {
  format: String!
}

"""
Date Type Format Enum
"""
enum SystemDateTypeFormatEnum {
  DATE
  DATETIME
}

"""
Delete Member From Organization Response
"""
type SystemDeleteArchieMemberFromOrganizationResponse {
  success: Boolean!
}

input SystemDeleteIdeaMutationInput {
  id: ID!
}

input SystemDeleteMemberIdeaMutationInput {
  email: String!
  ideaId: ID!
}

input SystemDeleteMemberIdeaMutationInputList {
  members: [SystemDeleteMemberIdeaMutationInput!]!
}

"""
DeployDataResponse
"""
type SystemDeployDataResponse {
  buildName: String!
  uploadBuildUrl: String!
  uploadMetaDataUrl: String!
}

enum SystemDeployModeEnum {
  FULL
  FUNCTIONS
  MIGRATIONS
  ONLY_PLUGINS
  ONLY_PROJECT
}

"""
DeployOptions
"""
input SystemDeployOptions {
  extensionNames: [String]
  mode: SystemDeployModeEnum = ONLY_PROJECT
  nodeVersion: String
  pluginNames: [String]
}

enum SystemDeployStatusEnum {
  compiling
  complete_error
  complete_success
  deploying
  initialize
  preparing
}

"""
SystemDeployStatusResult
"""
type SystemDeployStatusResult {
  message: String
  status: SystemDeployStatusEnum!
}

"""
DeployingBuildInput
"""
input SystemDeployingBuildInput {
  buildName: String!
  options: SystemDeployOptions
}

type SystemDeploymentABItemResponse {
  dateDeploy: DateTime
  statusDeploy: String
  urlDeploy: String
  userDeploy: SystemMemberAccountInfo
  versionDeploy: String
  versionFrontEnd: String
}

type SystemDeploymentProjectItemResponse {
  dateDeploy: DateTime
  name: String
  statusDeploy: String
  urlDeploy: String
  versionDeploy: String
  versionFrontEnd: String
  workspaceId: ID
}

"""
SystemDeploymentProjectListResponse output
"""
type SystemDeploymentProjectListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemDeploymentProjectItemResponse!]!
}

"""
SystemEnvironmentBackupListResponse output
"""
type SystemEnvironmentBackupListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [EnvironmentBackupItem!]!
}

type SystemEnvironmentMember {
  avatar: SystemEnvironmentMemberAvatar
  createdAt: DateTime
  email: String!
  firstName: String
  lastName: String
  permissions: SystemEnvironmentMemberPermissionsList
  registeredAt: DateTime
  roles: SystemEnvironmentMemberRolesList
  status: String!
}

type SystemEnvironmentMemberAvatar {
  downloadUrl: String
  id: String
}

input SystemEnvironmentMemberFilter {
  email: String
  workspaceId: String
}

type SystemEnvironmentMemberPermission {
  permission: JSON
  resource: String
  resourceType: String
}

type SystemEnvironmentMemberPermissionsList {
  count: Int!
  items: [SystemEnvironmentMemberPermission!]
}

type SystemEnvironmentMemberRole {
  id: String!
  name: String!
}

input SystemEnvironmentMemberRoleIdFilterPredicate {
  equals: ID
  not_equals: ID
}

type SystemEnvironmentMemberRolesList {
  count: Int!
  items: [SystemEnvironmentMemberRole!]
}

input SystemEnvironmentMemberStatusFilterPredicate {
  equals: String
  not_equals: String
}

input SystemEnvironmentMemberUpdateData {
  roles: [String]
}

input SystemEnvironmentMembersFilter {
  email: String!
}

input SystemEnvironmentMembersListFilter {
  email: String
  firstName: String
  lastName: String
  roleId: SystemEnvironmentMemberRoleIdFilterPredicate
  status: SystemEnvironmentMemberStatusFilterPredicate
  workspaceId: ID
}

"""
SystemEnvironmentMembersListResponse output
"""
type SystemEnvironmentMembersListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemEnvironmentMember!]!
}

input SystemEnvironmentMembersListSort {
  email: SortOrder
  firstName: SortOrder
  isOwner: SortOrder
  lastName: SortOrder
  status: SortOrder
}

type SystemEnvironmentProjectItem {
  fields: String
  functions: String
  id: ID!
  name: String!
  tables: String
  worksApiHost: String
  workspaceId: ID!
  workspaceName: String!
}

enum SystemEnvironmentRelationModeEnum {
  ForeignKey
  Pivot
}

type SystemEnvironmentRoleBaseInfo {
  id: String!
  name: String!
}

type SystemEnvironmentRoleList {
  assignedRoles: [SystemEnvironmentRoleBaseInfo]
  environmentId: String!
  environmentName: String!
  exists: Boolean
  roles: [SystemEnvironmentRoleBaseInfo]
}

type SystemEnvironmentSettings {
  deleteLock: Boolean
  fileManagementProvider: SystemFileManagerProviderTypeEnum
  introspection: Boolean
  relationMode: SystemEnvironmentRelationModeEnum
}

"""
SystemEnvironmentsListResponse output
"""
type SystemEnvironmentsListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [EnvironmentItem!]!
}

"""
SystemEnvironmentsProjectListResponse output
"""
type SystemEnvironmentsProjectListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemEnvironmentProjectItem!]!
}

input SystemExportIdeaToDocumentInput {
  advancedConsiderations: Boolean
  applicationServices: Boolean
  applicationServicesDetails: Boolean
  designGeneral: Boolean
  ideaId: ID!
  includeAll: Boolean
  modules: Boolean
  modulesDetails: Boolean
  output: String
  overview: Boolean
  screens: Boolean
  siteMap: Boolean
  userTypes: Boolean
}

type SystemExportIdeaToDocumentResponse {
  content: JSON
  documentType: String!
}

"""
Field Data Features
"""
type SystemFieldDataFeatures {
  create: Boolean!
  sort: Boolean!
  update: Boolean!
}

"""
Field Schema Features
"""
type SystemFieldSchemaFeatures {
  delete: Boolean!
  update: Boolean!
}

"""
Field types
"""
enum SystemFieldType {
  DATE
  FILE
  GEO
  ID
  JSON
  MISSING_RELATION
  NUMBER
  ONE_WAY_RELATION
  RELATION
  SMART
  SWITCH
  TEXT
  UUID
}

"""
Field Type Attributes
"""
union SystemFieldTypeAttributes =
  | SystemDateFieldTypeAttributes
  | SystemFileFieldTypeAttributes
  | SystemGeoFieldTypeAttributes
  | SystemMissingRelationFieldTypeAttributes
  | SystemNumberFieldTypeAttributes
  | SystemSmartFieldTypeAttributes
  | SystemSwitchFieldTypeAttributes
  | SystemTextFieldTypeAttributes
  | SystemUUIDFieldTypeAttributes

"""
Field Type Attributes Input
"""
input SystemFieldTypeAttributesInput {
  autoIncrement: Boolean
  currency: String
  expiration: Int
  fieldSize: Int
  format: String
  isBigInt: Boolean
  listOptions: [String!]
  maxSize: Int
  maxValue: Float
  minValue: Float
  precision: Int
  srid: Int
  typeRestrictions: [String!]
}

type SystemFileBaseInfo {
  downloadUrl: String
  id: String
}

"""
File Field Attributes
"""
type SystemFileFieldTypeAttributes {
  expiration: Int
  format: String!
  maxSize: Int
  showTitle: Boolean @deprecated(reason: "Field is deprecated")
  showUrl: Boolean @deprecated(reason: "Field is deprecated")
  typeRestrictions: [String!]
}

enum SystemFileManagerProviderTypeEnum {
  aws
  filestack
  uploadcare
}

"""
File Type Format Enum
"""
enum SystemFileTypeFormatEnum {
  FILE
  IMAGE
}

"""
FileUploadByUrlInput
"""
input SystemFileUploadByUrlInput {
  url: String!
}

"""
FileUploadByUrlResponse
"""
type SystemFileUploadByUrlResponse {
  fileId: String!
  meta: JSON!
}

union SystemFileUploadSignInfo =
  | AwsSignInfoResponse
  | FileStackSignInfoResponse
  | UploadcareSignInfoResponse

type SystemFrontendUtilizationABResponse {
  CDN: Boolean
  assets: Int
  customStates: Int
  functions: Int
  layouts: Int
  libraries: Int
  pages: Int
  requests: Int
  resources: Int
}

type SystemFrontendUtilizationResponse {
  assets: Int
  customStates: Int
  functions: Int
  layouts: Int
  libraries: Int
  pages: Int
  requests: Int
  resources: Int
}

"""
FunctionInfo
"""
interface SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  name: String!
}

"""
FunctionInfoCheck
"""
type SystemFunctionInfoCheck {
  version: String
}

"""
FunctionInfoFilter
"""
input SystemFunctionInfoFilter {
  description: String
  functionType: SystemFunctionType
  name: String
}

"""
FunctionInfoOrderBy
"""
enum SystemFunctionInfoOrderBy {
  description_ASC
  description_DESC
  functionType_ASC
  functionType_DESC
  name_ASC
  name_DESC
}

"""
SystemFunctionListResponse output
"""
type SystemFunctionListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemFunctionInfo!]!
}

"""
FunctionResolverInfo
"""
type SystemFunctionResolverInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  gqlType: String!
  name: String!
}

"""
FunctionTaskInfo
"""
type SystemFunctionTaskInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  name: String!
  scheduleExpression: String
}

"""
FunctionTriggerInfo
"""
type SystemFunctionTriggerInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  name: String!
  operation: String!
  tableName: String!
  type: String!
}

"""
FunctionType
"""
enum SystemFunctionType {
  resolver
  schedule
  task
  trigger
  webhook
}

"""
FunctionWebhookInfo
"""
type SystemFunctionWebhookInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  httpMethod: String!
  name: String!
  workspaceFullPath: String!
  workspaceRelativePath: String!
}

"""
Diff Environment Input
"""
type SystemGenerateEnvironmentOutput {
  url: String
}

"""
Geo Field Attributes
"""
type SystemGeoFieldTypeAttributes {
  format: String!
  srid: Int
}

type SystemGetCouponResponse {
  amount_off: Float
  duration: String!
  duration_in_months: Int!
  id: String!
  name: String!
  percent_off: Float
  valid: Boolean!
}

type SystemGetInvitationIdeaResponse {
  archieId: ID!
  ideaId: ID!
  invitationId: ID!
  nickName: String!
  role: InvitationRoleEnum!
  status: String!
}

type SystemGraphQLArchitecturesResponse {
  enabling_technologies: JSON
  id: ID!
  infrastructure_diagram: JSON
  integrations: JSON
}

type SystemGraphQLBlueprintResponse {
  ai_enablement_ideas: JSON
  application_classification: JSON
  building_blocks: JSON
  commercialization_model: JSON
  design_preview: JSON
  design_principles: JSON
  id: ID!
  insights: JSON
  modules: JSON
  originalPrompt: JSON
  problem_statement: JSON
  solution_statement: JSON
  user_types: JSON
}

type SystemGraphQLBuildingBlocksRequirementsResponse {
  description: String
  details: String
  id: ID!
  label: String
  status: String
  stories: JSON
}

type SystemGraphQLBuildingBlocksResponse {
  buildingBlocksRequirements: [SystemGraphQLBuildingBlocksRequirementsResponse]
  checked: Boolean
  description: String
  id: ID!
  name: String
  order: Int
  status: String
}

type SystemGraphQLBuildingBlocksScreensResponse {
  id: ID
  name: String
  order: Int
  purpose: String
  screensWireframes: [SystemGraphQLScreensWireFramesResponse]
  status: String
  urlPath: String
}

type SystemGraphQLFeaturesBreakdownResponse {
  functionality: String
  id: ID!
  name: String
  technicalRequirements: JSON
  userInterfaces: JSON
}

type SystemGraphQLModulesRequirementsResponse {
  description: String
  details: String
  id: ID!
  label: String
  status: String
  stories: JSON
}

type SystemGraphQLModulesResponse {
  description: String
  icon: String
  id: ID!
  modulesRequirements: [SystemGraphQLModulesRequirementsResponse]
  name: String
  order: Int
  status: String
  uiPattern: JSON
}

type SystemGraphQLOverviewResponse {
  accessibility_requirements: JSON
  application_classification: JSON
  commercialization_model: JSON
  compliance_requirements: JSON
  design_principles: JSON
  id: ID!
  performance_requirements: JSON
  problem_statement: JSON
  security_requirements: JSON
  solution_statement: JSON
  status: String
}

type SystemGraphQLScreensWireFramesResponse {
  html: String
  id: ID!
  name: String
  status: String
}

input SystemGraphQLSectionResultRegenerateMutationInput {
  archieId: ID!
  idea: ID!
  instructions: String
  package: String!
  provisionalData: Boolean
  requirementsDescription: String
  sectionCategoriesWithIds: JSON
}

type SystemGraphQLUserAccountsResponse {
  email: String
  firstName: String
}

type SystemGraphQLUserInterfacesResponse {
  requirements_design_guidelines: JSON
  requirements_site_map: JSON
  requirements_ui_ux_general: JSON
  status: String
  wireframe_layout: JSON
}

type SystemGraphQLUserTypeDetailsResponse {
  comprehensive_needs: JSON
  comprehensive_painpoints: JSON
  id: ID!
  status: String
}

type SystemGraphQLUserTypeUseCaseResponse {
  description: String
  id: ID!
  name: String
}

type SystemGraphQLUserTypesResponse {
  description: String
  deviceusages: [String]
  id: ID!
  name: String
  order: Int
  softwareproficiency: String
  status: String
  userTypesDetails: [SystemGraphQLUserTypeDetailsResponse]
  userTypesUseCases: [SystemGraphQLUserTypeUseCaseResponse]
}

type SystemIdeaDetailsResponse {
  archieId: ID!
  architectures: [SystemGraphQLArchitecturesResponse]
  blueprints: [SystemGraphQLBlueprintResponse]
  buildingBlocks: [SystemGraphQLBuildingBlocksResponse]
  createdAt: DateTime
  description: String
  detailedProgress: JSON
  elevatorDescription: String
  executedDesign: Boolean
  featuresBreakdown: [SystemGraphQLFeaturesBreakdownResponse]
  id: ID!
  invitations: [SystemIdeaInvitationBaseResponse]
  isDemoProject: Boolean
  members: [SystemIdeaMemberBaseResponse]
  modules: [SystemGraphQLModulesResponse]
  nextStep: String!
  nickName: String!
  overviews: [SystemGraphQLOverviewResponse]
  owner: SystemMemberAccountInfo
  ownerType: String
  plan: SystemPlanInfoIdea
  progress: Float!
  requirementsDescription: String
  screens: [SystemGraphQLBuildingBlocksScreensResponse]
  updatedAt: DateTime
  userInterfaces: [SystemGraphQLUserInterfacesResponse]
  userTypes: [SystemGraphQLUserTypesResponse]
}

input SystemIdeaGeneralCreateMutationInput {
  description: String!
  nickName: String
  organizationId: String
}

type SystemIdeaGeneralResponse {
  archieId: ID!
  description: String!
  id: ID!
  nickName: String!
}

input SystemIdeaGeneralUpdateMutationInput {
  description: String
  elevatorDescription: String
  id: ID!
  nickName: String
  requirementsDescription: String
}

input SystemIdeaImproveMutationInput {
  description: String
}

type SystemIdeaImproveResponse {
  suggestion: String!
}

input SystemIdeaImproveWithAIMutationInput {
  aiIdeas: [SystemAIIdeasInput]
  archieId: ID!
}

type SystemIdeaImproveWithAIResponse {
  expectedBenefits: [String]
  kpis: [String]
  statement: String!
}

type SystemIdeaInvitationBaseResponse {
  email: String!
  id: ID!
  role: InvitationRoleEnum!
}

"""
Idea Invitation Member
"""
type SystemIdeaInvitationMember {
  id: String
  role: String
  status: String
  userAccounts: SystemGraphQLUserAccountsResponse
}

type SystemIdeaItemOrganizationMember {
  archieId: ID!
  createdAt: DateTime
  description: String!
  detailedProgress: JSON
  id: ID!
  nextStep: String
  nickName: String!
  progress: Float!
  updatedAt: DateTime
}

type SystemIdeaItemRespSingle {
  archieId: ID!
  createdAt: DateTime
  description: String!
  detailedProgress: JSON
  id: ID!
  lastActivityAt: DateTime
  members: [SystemMemberAccountInfo]
  nextStep: String!
  nickName: String!
  owner: SystemMemberAccountInfo
  progress: Float!
  updatedAt: DateTime
}

"""
SystemIdeaItemResponse output
"""
type SystemIdeaItemResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemIdeaItemRespSingle!]!
}

type SystemIdeaMemberBaseResponse {
  avatar: GraphQLFileItemResponse
  email: String!
  firstName: String!
  lastName: String!
  onboardingStatus: JSON!
  organizationId: ID!
  role: InvitationRoleEnum!
}

type SystemIdeaUserResponse {
  ideas: SystemIdeaItemResponse!
}

union SystemInboxEventDetailsUnion =
  | SystemInboxEventEnvironmentInvitationDetails
  | SystemInboxEventNotificationDetailsType
  | SystemInboxEventOrganizationInvitationDetails

type SystemInboxEventEnvironmentInvitationDetails {
  environmentName: String
  invitedBy: SystemInboxEventInvitedBy
  project: SystemInboxEventProject
  status: SystemInboxEventStatusEnum
  uuid: String
  workspace: SystemInboxEventWorkspace
}

type SystemInboxEventInvitedBy {
  avatar: GraphQLFileItemResponse
  email: String
  firstName: String
  lastName: String
}

type SystemInboxEventItem {
  createdAt: DateTime!
  details: SystemInboxEventDetailsUnion
  id: ID!
  isCompleted: Boolean
  type: SystemInboxEventTypeEnum
}

type SystemInboxEventNotificationDetailsType {
  details: JSON
  kind: String
}

type SystemInboxEventOrganization {
  avatar: GraphQLFileItemResponse
  id: ID!
  name: String
}

type SystemInboxEventOrganizationInvitationDetails {
  invitedBy: SystemInboxEventInvitedBy
  organization: SystemInboxEventOrganization
  status: SystemInboxEventStatusEnum
  uuid: String
}

type SystemInboxEventProject {
  apiHost: String
  avatar: GraphQLFileItemResponse
  id: ID!
  kind: String
  name: String
}

enum SystemInboxEventStatusEnum {
  accepted
  declined
  sent
}

enum SystemInboxEventTypeEnum {
  EnvironmentInvitation
  Notification
  OrganizationInvitation
}

type SystemInboxEventWorkspace {
  apiHost: String
  avatar: GraphQLFileItemResponse
  id: ID!
  kind: String
  name: String
}

"""
SystemInboxEventsListResponse output
"""
type SystemInboxEventsListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemInboxEventItem!]!
}

"""
Table Create Index Input
"""
input SystemIndexCreateInput {
  columns: [SystemTableIndexColumnInput!]!
  force: Boolean
  name: String
  tableId: ID!
  type: TableIndexType!
}

"""
Table Delete Index Input
"""
input SystemIndexDeleteInput {
  id: ID!
}

"""
Table Update Index Input
"""
input SystemIndexUpdateInput {
  columns: [SystemTableIndexColumnInput!]
  force: Boolean
  id: ID!
  name: String
  type: TableIndexType
}

"""
Idea Invitation Accept/Cancel Response
"""
type SystemInvitationAcceptCancelResponse {
  success: Boolean!
}

"""
Idea invitation accept/Cancel input
"""
input SystemInvitationIdeaAcceptCancelInput {
  accepted: Boolean!
  id: String!
}

"""
Idea Invitation Cancel Response
"""
type SystemInvitationIdeaResendResponse {
  success: Boolean!
}

"""
Idea invitation cancel input
"""
input SystemInvitationIdeaResendlInput {
  id: String!
}

"""
Invite recipient input
"""
input SystemInviteIdeaRecipientInput {
  email: String!
  ideaId: String!
  organizationUserId: String
  role: RoleEnum!
}

"""
Invite idea input
"""
input SystemInviteMembersIdeaInput {
  organizationId: String
  recipients: [SystemInviteIdeaRecipientInput!]!
}

"""
Invite members input
"""
input SystemInviteMembersInput {
  recipients: [SystemInviteRecipientInput!]!
}

"""
Invite recipient input
"""
input SystemInviteRecipientInput {
  email: String!
  firstName: String
  lastName: String
  roles: [ID!]
}

"""
Invited By Name
"""
type SystemInvitedByName {
  email: String
  firstName: String
  lastName: String
  projectId: String
  projectName: String
  workspaceName: String
}

"""
InvokeData
"""
input SystemInvokeData {
  functionName: String!
  inputArgs: String
  nodeVersion: String
}

"""
InvokeFunctionResponse
"""
type SystemInvokeFunctionResponse {
  responseData: String!
}

"""
LogsListFiltered Response
"""
type SystemLogsListFilteredResponse {
  count: Int
  items: [SystemCloudLogsEntry]
  nextToken: String
}

"""
Member - list of workspaces you are member of
Owner - list of workspaces you are owner of
OrganizationUser - list of organizations you are part of
"""
type SystemMemberAccountDeleteDetails {
  member: [SystemOrganizationWorkspaceItem]
  organizationUser: [SystemOrganizationBaseItem]
  owner: [SystemOrganizationWorkspaceItem]
}

type SystemMemberAccountDeleteResponse {
  details: SystemMemberAccountDeleteDetails
  success: Boolean!
}

type SystemMemberAccountInfo {
  aboutMe: String
  addressLine1: String
  addressLine2: String
  archieRole: String
  authCreateMethod: String
  avatar: GraphQLFileItemResponse
  city: String
  companyName: String
  country: String
  createdAt: DateTime
  email: String!
  firstName: String
  githubUsername: String
  id: String
  intendedUse: String
  isADemoUser: Boolean
  isArchieAdmin: Boolean
  isDeveloper: Boolean
  isEmailVerified: Boolean
  isOrganizationOwner: Boolean
  lastName: String
  learningMode: Boolean
  linkedInUsername: String
  onboardingStatus: JSON
  projectDescription: String
  role: String
  sourceAccount: String
  state: String
  status: String
  timezone: String
  twitterUsername: String
  type: SystemUserType
  website: String
  zipCode: String
}

input SystemMemberAccountUpsertDataInput {
  aboutMe: String
  addressLine1: String
  addressLine2: String
  archieRole: String
  authCreateMethod: String
  avatar: GraphQLCreateFileItemInput
  city: String
  companyName: String
  country: String
  createdAt: DateTime
  email: String
  firstName: String
  githubUsername: String
  id: String
  intendedUse: String
  isADemoUser: Boolean
  isArchieAdmin: Boolean
  isDeveloper: Boolean
  isEmailVerified: Boolean
  isOrganizationOwner: Boolean
  lastName: String
  learningMode: Boolean
  linkedInUsername: String
  onboardingStatus: JSON
  organizationCreatorRole: String
  organizationKind: String
  organizationNeed: String
  organizationSize: String
  projectDescription: String
  role: String
  sourceAccount: String
  state: String
  status: String
  timezone: String
  twitterUsername: String
  type: SystemUserType
  website: String
  zipCode: String
}

input SystemMemberArchieInviteOrganizationInput {
  email: String!
  role: String!
}

"""
Member Change Organization Role Input
"""
input SystemMemberChangeOrganizationRoleInput {
  id: String!
  role: String!
}

"""
Member Change Organization Role Response
"""
type SystemMemberChangeOrganizationRoleResponse {
  success: Boolean!
}

"""
Member Invitation
"""
type SystemMemberInvitation {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: SystemInvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

"""
Member invitation accept input
"""
input SystemMemberInvitationAcceptInput {
  accepted: Boolean!
  id: String!
}

"""
Member Invitation Accept Response
"""
type SystemMemberInvitationAcceptResponse {
  success: Boolean!
}

"""
Cancel members invitations input
"""
input SystemMemberInvitationCancelInput {
  email: String!
}

"""
Resend member invitation input
"""
input SystemMemberInvitationResendInput {
  email: ID!
}

type SystemMemberInvitationsList {
  count: Int
  items: [SystemMemberInvitation]
}

type SystemMemberOrganizationAccountInfo {
  aboutMe: String
  addressLine1: String
  addressLine2: String
  archieRole: String
  authCreateMethod: String
  avatar: GraphQLFileItemResponse
  city: String
  companyName: String
  country: String
  createdAt: DateTime
  email: String!
  firstName: String
  githubUsername: String
  id: String
  ideas: [SystemIdeaItemOrganizationMember]
  intendedUse: String
  isADemoUser: Boolean
  isArchieAdmin: Boolean
  isDeveloper: Boolean
  isEmailVerified: Boolean
  isOrganizationOwner: Boolean
  lastName: String
  learningMode: Boolean
  linkedInUsername: String
  onboardingStatus: JSON
  organization: SystemOrganizationBaseItem
  projectDescription: String
  role: String
  sourceAccount: String
  state: String
  status: String
  timezone: String
  twitterUsername: String
  type: SystemUserType
  website: String
  zipCode: String
}

"""
Member Change Organization Role Input
"""
input SystemMemberOrganizationInviteMutationInput {
  ideaId: String
  ideaRole: String
  invitedByName: String!
  members: [SystemMemberArchieInviteOrganizationInput]
  organizationId: ID!
  organizationName: String!
}

"""
Member Change Organization Role Input
"""
input SystemMemberOrganizationResendInviteMutationInput {
  email: String!
  invitedByName: String!
  organizationId: ID!
  organizationName: String!
}

"""
MemberPaymentDetailsUpdateMutationInput
"""
input SystemMemberPaymentDetailsUpdateMutationInput {
  cardToken: String
}

"""
Member Resend Verify Account Email Response
"""
type SystemMemberResendVerifyAccountEmailResponse {
  success: Boolean!
}

"""
Member Resend Verify Account Email input
"""
input SystemMemberResendVerifyAccountEmaillInput {
  email: String!
}

type SystemMembersAccountList {
  items: [SystemMemberOrganizationAccountInfo]
}

type SystemMembersIdeaList {
  count: Int
  items: [SystemIdeaInvitationMember]
}

"""
MissingRelation Field Attributes
"""
type SystemMissingRelationFieldTypeAttributes {
  missingTable: String!
}

type SystemMutation {
  ExportIdeaToDocument(
    data: SystemExportIdeaToDocumentInput!
  ): SystemExportIdeaToDocumentResponse
  applicationDelete(
    data: SystemApplicationDeleteMutationInput!
  ): SuccessResponse
  applicationInstall(data: SystemApplicationInstallInput!): SystemApplication
  applicationUpdate(data: SystemApplicationUpdateInput!): SystemApplication
  billingContextCacheEvict(
    keys: [String!]!
    projectKeys: [String!]!
  ): SystemCacheEvictResponse
  billingPlanUpdate(
    data: SystemBillingPlanUpdateMutationInput!
  ): SystemBillingCurrentPlanResponse
  changePlanIdea(
    data: SystemChangePlanIdeaMutationInput!
  ): SystemBillingCurrentPlanResponse
  changeRoleIdeaInvitation(
    data: SystemChangeRoleIdeaMutationInputList!
  ): SuccessResponse
  changeRoleIdeaMember(
    data: SystemChangeRoleIdeaMutationInputList!
  ): SuccessResponse
  ciCommit(
    build: String
    migrationNames: [String]
    mode: SystemCiCommitMode
    nodeVersion: String
  ): AsyncSession
  ciInstall: SuccessResponse
  createOrganizationSettingsTech(
    description: String
    name: String!
    organizationSettingsId: ID!
  ): SystemOrganizationSettingsTech!
  deleteArchieMemberFromOrganization(
    email: String!
    organizationId: String!
  ): SystemDeleteArchieMemberFromOrganizationResponse!
  deleteIdea(data: SystemDeleteIdeaMutationInput!): SuccessResponse
  deleteMemberIdea(
    data: SystemDeleteMemberIdeaMutationInputList!
  ): SuccessResponse
  deploy(data: SystemDeployingBuildInput): Boolean
  environmentBackup(environmentName: String!): AsyncSession
  environmentBranch(
    force: Boolean
    mode: SystemBranchEnvironmentMode
    name: String!
  ): AsyncSession
  environmentDelete(environmentName: String!): SuccessResponse
  environmentDeleteAsync(environmentName: String!): AsyncSession
  environmentMemberDelete(
    filter: SystemEnvironmentMembersFilter
  ): SuccessResponse!
  environmentMemberUpdate(
    data: SystemEnvironmentMemberUpdateData
    filter: SystemEnvironmentMembersFilter
  ): SystemEnvironmentMember
  environmentRestore(backup: String!, environmentName: String!): AsyncSession
  environmentSetup(data: EnvironmentSetupInput): SuccessResponse
  fieldCreate(data: SystemTableFieldCreateInput!): SystemTableField!
  fieldDelete(data: SystemTableFieldDeleteInput!): SuccessResponse!
  fieldUpdate(data: SystemTableFieldUpdateInput!): SystemTableField!
  fieldUpdatePosition(
    data: SystemTableFieldPositionUpdateInput!
  ): SuccessResponse!
  fileUploadByUrl(
    data: SystemFileUploadByUrlInput!
  ): SystemFileUploadByUrlResponse!
  ideaImprove(data: SystemIdeaImproveMutationInput!): SystemIdeaImproveResponse
  ideaImproveWithAI(
    data: SystemIdeaImproveWithAIMutationInput!
  ): SystemIdeaImproveWithAIResponse
  ideaTransferOwner(
    data: SystemTransferIdeaOwnerMutationInput!
  ): SuccessResponse
  ideaUserCreate(
    data: SystemIdeaGeneralCreateMutationInput!
  ): SystemIdeaGeneralResponse
  ideaUserUpdate(
    data: SystemIdeaGeneralUpdateMutationInput!
  ): SystemIdeaGeneralResponse
  indexCreate(data: SystemIndexCreateInput!): SystemTableIndex!
  indexDelete(data: SystemIndexDeleteInput!): SuccessResponse
  indexUpdate(data: SystemIndexUpdateInput!): SystemTableIndex!
  invitationIdeaAcceptCancel(
    data: SystemInvitationIdeaAcceptCancelInput!
  ): SystemInvitationAcceptCancelResponse!
  invitationIdeaResend(
    data: SystemInvitationIdeaResendlInput!
  ): SystemInvitationIdeaResendResponse!
  inviteMembers(
    data: SystemInviteMembersInput!
    force: Boolean
  ): [SystemTeamInvitationDetails]!
  inviteToIdea(data: SystemInviteMembersIdeaInput!): SuccessResponse
  invoke(data: SystemInvokeData): SystemInvokeFunctionResponse
  memberAccountDelete: SystemMemberAccountDeleteResponse
  memberAccountUpsert(
    data: SystemMemberAccountUpsertDataInput
  ): SystemMemberAccountInfo
  memberChangeOrganizationRole(
    data: SystemMemberChangeOrganizationRoleInput!
  ): SystemMemberChangeOrganizationRoleResponse!
  memberInvitationAccept(
    data: SystemMemberInvitationAcceptInput!
  ): SystemMemberInvitationAcceptResponse!
  memberInvitationCancel(
    data: SystemMemberInvitationCancelInput!
  ): SuccessResponse
  memberInvitationResend(
    data: SystemMemberInvitationResendInput!
  ): SuccessResponse
  memberPaymentDetailsUpdate(
    data: SystemMemberPaymentDetailsUpdateMutationInput!
  ): SystemPaymentDetailsResponse
  memberResendVerifyAccountEmail(
    data: SystemMemberResendVerifyAccountEmaillInput!
  ): SystemMemberResendVerifyAccountEmailResponse!
  notificationUpdate(
    id: String!
    status: NotificationStatusType!
  ): SuccessResponse
  onboardingUpdate(
    data: SystemMemberAccountUpsertDataInput
  ): SystemMemberAccountInfo
  organizationArchieUpgrade(
    data: SystemOrganizationUpgradeMutationInput!
  ): OrganizationUpgradeResponse
  organizationInviteUser(
    email: String!
    firstName: String
    lastName: String
    organizationId: ID!
    projectRoles: [SystemOrganizationProjectWithEnvironmentRolesInput]
    role: String!
  ): OrganizationUserInvitationResponse
  organizationInviteUserAccept(invitationId: String!): SuccessResponse
  organizationInviteUserCancel(invitationId: String!): SuccessResponse
  organizationMemberInvite(
    data: SystemMemberOrganizationInviteMutationInput!
  ): SuccessResponse
  organizationMemberResendInvite(
    data: SystemMemberOrganizationResendInviteMutationInput!
  ): SuccessResponse
  organizationPaymentDetailsUpdate(
    data: SystemOrganizationPaymentDetailsUpdateMutationInput!
  ): SystemPaymentDetailsResponse
  organizationProjectUserRemove(email: String!, projectId: ID!): SuccessResponse
  organizationProjectUserShare(
    email: String!
    environmentRoles: [SystemOrganizationProjectEnvironmentRolesInput]
    projectId: ID!
  ): SuccessResponse
  organizationUpdate(
    description: String
    id: String!
    image: GraphQLCreateFileItemInput
    name: String
    type: SystemOrganizationTypeEnum
  ): SystemOrganizationItem
  organizationUserRemove(
    email: String!
    organizationId: String!
  ): SuccessResponse
  organizationUserUpdate(
    email: String!
    organizationId: ID!
    role: String!
  ): SystemOrganizationUserInfo
  partnerCreate(
    data: SystemPartnerGeneralCreateMutationInput!
  ): SystemPartnerGeneralResponse
  postMessageToQueue(data: SystemPostMessageToQueueInput!): SuccessResponse
  prepareDeploy: SystemDeployDataResponse!
  projectCreate(data: SystemProjectCreateMutationInput!): AsyncSession
  projectDelete(projectId: ID!): AsyncSession
  projectLeave(projectId: ID!): SuccessResponse
  projectUpdate(
    data: SystemProjectUpdateMutationInput!
  ): SystemProjectUpdateResponse
  removeOrganizationSettingsTech(
    organizationSettingsTechId: ID!
  ): SuccessResponse!
  rolePermissionsCacheEvict(keys: [String!]!): SystemCacheEvictResponse
  sectionResultCreate(
    data: SystemSectionResultCreateMutationInput!
  ): SystemSectionResultResponse
  sectionResultGenerate(
    data: SystemSectionResultGenerateMutationInput!
  ): SuccessResponse
  sectionResultPropagate(
    data: SystemSectionResultPropagateUpdateMutationInput!
  ): SuccessResponse
  sectionResultRegenerate(
    data: SystemGraphQLSectionResultRegenerateMutationInput!
  ): SuccessResponse
  sectionResultUpdate(
    data: SystemSectionResultUpdateMutationInput!
  ): SuccessResponse
  tableCreate(data: SystemTableCreateInput!): SystemTable!
  tableDelete(data: SystemTableDeleteInput!): SuccessResponse!
  tableUpdate(data: SystemTableUpdateInput!): SystemTable!
  updateOrganizationSettings(
    fileId: String
    id: ID!
    isWhiteLabelActive: Boolean
    statementOfWork: String
  ): SystemOrganizationSettings!
  viewCreate(data: SystemViewCreateInput!): SystemTable!
  viewUpdate(data: SystemViewUpdateInput!): SystemTable!
  workspaceCreate(
    data: SystemWorkspaceCreateMutationInput!
  ): SystemWorkspaceCreateResponse
  workspaceCreateAsync(
    data: SystemWorkspaceCreateMutationInput!
  ): SystemWorkspaceCreateResponse
  workspaceDelete(data: SystemWorkspaceDeleteMutationInput!): SuccessResponse
  workspaceLeave(force: Boolean): SuccessResponse
  workspaceUpdate(
    data: SystemWorkspaceUpdateMutationInput!
  ): SystemWorkspaceUpdateResponse
}

"""
Number Field Attributes
"""
type SystemNumberFieldTypeAttributes {
  autoIncrement: Boolean
  currency: String
  format: String!
  isBigInt: Boolean
  maxValue: Float
  minValue: Float
  precision: Int
}

"""
Number Type Format Enum
"""
enum SystemNumberTypeFormatEnum {
  CURRENCY
  FRACTION
  NUMBER
  PERCENTAGE
  SCIENTIFIC
}

type SystemOrganizationArchieBaseItem {
  description: String
  id: ID!
  image: SystemFileBaseInfo
  isOrganizationOwner: Boolean!
  name: String!
  organizationCreatorRole: String
  organizationKind: String
  organizationSize: String
  role: String!
  type: SystemOrganizationTypeEnum
}

type SystemOrganizationBaseItem {
  description: String
  id: ID!
  image: SystemFileBaseInfo
  name: String!
  type: SystemOrganizationTypeEnum
}

type SystemOrganizationInvitation {
  accepted: Boolean
  email: String!
  emailFrom: String!
  firstName: String
  firstNameFrom: String
  id: ID!
  lastName: String
  lastNameFrom: String
  organization: SystemOrganizationBaseItem!
  role: String!
}

type SystemOrganizationItem {
  description: String
  id: ID!
  image: SystemOrganizationItemImage
  name: String!
  type: SystemOrganizationTypeEnum
  users: [SystemOrganizationUserInfo]
}

type SystemOrganizationItemImage {
  downloadUrl: String
  id: String
}

"""
OrganizationPaymentDetailsUpdateMutationInput
"""
input SystemOrganizationPaymentDetailsUpdateMutationInput {
  cardToken: String!
  organizationId: ID!
}

"""
environmentId to add to with roles (array of ids).
"""
input SystemOrganizationProjectEnvironmentRolesInput {
  environmentId: String!
  roles: [ID]
}

type SystemOrganizationProjectItem {
  description: String
  id: ID!
  image: SystemFileBaseInfo
  kind: String!
  name: String!
  organization: SystemOrganizationBaseItem
}

input SystemOrganizationProjectWithEnvironmentRolesInput {
  environmentRoles: [SystemOrganizationProjectEnvironmentRolesInput]
  projectId: ID!
}

"""
Representation of a organization settings.
"""
type SystemOrganizationSettings {
  id: ID!

  """
  Flag to indicate if white label is active.
  """
  isWhiteLabelActive: Boolean

  """
  Statement of work defined by the organization.
  """
  statementOfWork: String

  """
  Stack of technologies defined by the organization.
  """
  techStack: [SystemOrganizationSettingsTech!]!

  """
  White label image defined by the organization.
  """
  whiteLabelImage: SystemFileBaseInfo
}

"""
Representation of a organization settings technology.
"""
type SystemOrganizationSettingsTech {
  """
  Description of the tech stack.
  """
  description: String
  id: ID!

  """
  Name of the given tech stack, example "React".
  """
  name: String!
}

enum SystemOrganizationTypeEnum {
  agency
  community
  company
  individual
}

"""
Organization Upgrade Input
"""
input SystemOrganizationUpgradeMutationInput {
  description: String
  licenseId: String
  name: String!
  organizationCreatorRole: String!
  organizationKind: String!
  organizationSize: String!
  owner: String!
  type: String!
}

type SystemOrganizationUserInfo {
  avatar: GraphQLFileItemResponse
  email: String!
  firstName: String
  id: String!
  lastName: String
  projects: [SystemOrganizationProjectItem]
  role: String!
  status: String!
}

type SystemOrganizationWorkspaceItem {
  apiHost: String
  description: String
  id: ID!
  image: SystemFileBaseInfo
  kind: String!
  name: String!
  organization: SystemOrganizationBaseItem
}

"""
SystemOrganizationsListArchieResponse output
"""
type SystemOrganizationsListArchieResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemOrganizationArchieBaseItem!]!
}

"""
SystemOrganizationsListResponse output
"""
type SystemOrganizationsListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemOrganizationBaseItem!]!
}

input SystemPartnerGeneralCreateMutationInput {
  anythingElse: String
  blueprintUrl: String!
  companyName: String!
  email: String!
  firstName: String!
  lastName: String!
  location: String!
  phoneNumber: String
}

type SystemPartnerGeneralResponse {
  AccountId: String!
  anythingElse: String
  blueprintUrl: String!
  companyName: String!
  createdAt: Date!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  location: String!
  phoneNumber: String
  updatedAt: Date!
}

type SystemPartnerItemRespSingle {
  AccountId: String!
  anythingElse: String
  blueprintUrl: String!
  companyName: String!
  createdAt: Date!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  location: String!
  phoneNumber: String
  updatedAt: Date!
}

"""
SystemPartnerItemResponse output
"""
type SystemPartnerItemResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemPartnerItemRespSingle!]!
}

type SystemPartnerResponse {
  partners: SystemPartnerItemResponse!
}

enum SystemPaymentDetailsOrigin {
  member
  organization
  workspace
}

enum SystemPaymentDetailsOriginProject {
  member
  organization
  workspace
}

type SystemPaymentDetailsProjectResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: SystemPaymentDetailsOriginProject
}

type SystemPaymentDetailsResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: SystemPaymentDetailsOrigin!
}

"""
Diff Environment Input
"""
type SystemPlanEnvironmentOutput {
  url: String
}

type SystemPlanForIdeaQueryResponse {
  id: ID
}

type SystemPlanInfoIdea {
  features: [String]
  planName: String
}

input SystemPostMessageToQueueInput {
  message: JSON
  routingKey: String
}

"""
ProjectCreateMutationInput
"""
input SystemProjectCreateMutationInput {
  authType: String
  billingPlanId: ID
  cardToken: String
  description: String
  howStart: String
  ideaId: String
  image: GraphQLCreateFileItemInput
  kind: String
  name: String!
  organizationId: ID
}

type SystemProjectDeploymentsResponse {
  deploymentsProject: SystemDeploymentProjectListResponse
}

type SystemProjectFrontendResponse {
  frontendUtilization: SystemFrontendUtilizationResponse
  frontendWorkspaces: SystemWorkspaceListResponse
}

type SystemProjectImage {
  downloadUrl: String
  id: String
}

type SystemProjectItemRespSingle {
  apiHost: String
  createdAt: DateTime
  description: String
  id: ID!
  image: SystemProjectImage
  kind: String
  lastAccess: DateTime
  name: String!
  nextPlan: SystemBillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  owner: SystemMemberAccountInfo
  plan: SystemBillingCurrentPlanResponse
  region: String
  usersCount: Int
}

"""
SystemProjectItemResponse output
"""
type SystemProjectItemResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemProjectItemRespSingle!]!
}

type SystemProjectItemWS {
  description: String
  id: ID!
  image: SystemWorkspaceImage
  name: String!
  region: String
}

type SystemProjectPlanResponse {
  overagesPrice: Float
  paymentDetail: SystemPaymentDetailsProjectResponse
  plan: SystemBillingCurrentPlanResponse
}

type SystemProjectQuotasResponse {
  metricUsages: SystemBillingMetricUsagesListResponse
  metricUsagesQuotas: SystemBillingMetricUsageQuotasListResponse
}

"""
ProjectUpdateMutationInput
"""
input SystemProjectUpdateMutationInput {
  description: String
  id: ID!
  image: GraphQLCreateFileItemInput
  name: String
}

type SystemProjectUpdateResponse {
  description: String
  id: ID
  image: GraphQLFileItemResponse
  name: String
}

type SystemProjectUserDetailsResponse {
  apiHost: String!
  authenticationInfo: [SystemAuthenticationInfo]
  backendUtilization: SystemBackendUtilizationResponse
  backendWorkspaces: SystemWorkspaceListResponse
  createdAt: DateTime
  description: String
  environmentsProject: SystemEnvironmentsProjectListResponse
  id: ID!
  image: SystemProjectImage
  kind: String!
  lastAccess: DateTime
  metricUsages: SystemBillingMetricUsagesListResponse
  metricUsagesQuotas: SystemBillingMetricUsageQuotasListResponse
  name: String!
  nextPlan: SystemBillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  overagesPrice: Float
  owner: SystemMemberAccountInfo
  paymentDetail: SystemPaymentDetailsProjectResponse
  plan: SystemBillingCurrentPlanResponse
  region: String
  teamMemberCount: Int
}

type SystemProjectUserResponse {
  myProjects: SystemProjectItemResponse!
  sharedProjects: SystemProjectItemResponse!
}

type SystemPromptItemRespSingle {
  basicSectionConfiguration: JSON
  dependsOn: [String]
  id: ID!
  inputVariables: JSON!
  iterableConfig: JSON
  modelId: ID!
  modelName: String!
  name: String!
  outputSchema: JSON!
  package: String!
  sectionCategory: String
  templateBody: String!
}

"""
SystemPromptItemResponse output
"""
type SystemPromptItemResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemPromptItemRespSingle!]!
}

type SystemPromptsResponse {
  prompts: SystemPromptItemResponse!
}

type SystemQuery {
  application(id: String!): SystemApplication
  applicationsList: SystemApplicationListResponse
  asyncSessionStatus(sessionId: String!): SystemAsyncSessionStatusResponse
  basicSectionConfigurationForPromptQuery: SystemBasicSectionConfigurationForPromptExecutionResponse
  basicSectionConfigurationQuery: SystemBasicSectionConfigurationResponse
  billingCurrentPlan(organizationId: ID): SystemBillingCurrentPlanResponse
  billingDetails: SystemBillingDetailsResponse
    @deprecated(
      reason: "No longer supported. Use `system.memberPaymentDetails, system.organizationPaymentDetails or system.workspacePaymentDetails` instead."
    )
  billingInvoicesList(
    after: ID
    before: ID
    by: SystemBillingInvoicesListFilterType
    limit: Int
    projectId: ID
  ): SystemBillingInvoicesListResponse!
    @deprecated(
      reason: "No longer supported. Use `system.memberBillingHistory, system.organizationBillingHistory or system.workspaceBillingHistory` instead."
    )
  billingMetricUsageQuotasList(
    organizationId: ID
    projectId: ID
  ): SystemBillingMetricUsageQuotasListResponse!
  billingMetricUsagesList(
    filter: SystemBillingMetricUsagesListFilter
    organizationId: ID
    projectId: ID
  ): SystemBillingMetricUsagesListResponse!
  ciGenerate(
    sourceEnvironmentId: String
    tables: [String!]
    targetEnvironmentId: String
  ): SystemGenerateEnvironmentOutput
  ciGenerateAsync(
    sourceEnvironmentId: String
    tables: [String!]
    targetEnvironmentId: String
  ): AsyncSession
  ciPlan(
    sourceEnvironmentId: String
    tables: [String!]
    targetEnvironmentId: String
  ): SystemPlanEnvironmentOutput
    @deprecated(reason: "No longer supported. Use `ciGenerate` instead.")
  ciStatus: SystemCiStatusOutput
  deployStatus(buildName: String!): SystemDeployStatusResult!
  ensureOrganizationSettings(organizationId: ID!): SystemOrganizationSettings!
  environmentBackupsList(
    environmentName: String
  ): SystemEnvironmentBackupListResponse
  environmentMember(
    filter: SystemEnvironmentMemberFilter
  ): SystemEnvironmentMember
  environmentMembersList(
    environmentIds: [String]
    filter: SystemEnvironmentMembersListFilter
    first: Int
    skip: Int
    sort: [SystemEnvironmentMembersListSort!]
  ): SystemEnvironmentMembersListResponse
  environmentSettings: SystemEnvironmentSettings
  environmentsList(workspaceId: String): SystemEnvironmentsListResponse
  fileUploadSignInfo: SystemFileUploadSignInfo
  functionsList(
    applicationId: String
    filter: SystemFunctionInfoFilter
    orderBy: [SystemFunctionInfoOrderBy]
  ): SystemFunctionListResponse
  functionsVersionCheck: SystemFunctionInfoCheck
  getCouponQuery(couponName: String!): SystemGetCouponResponse
  getCurrentPlanForIdeaQuery: SystemPlanForIdeaQueryResponse
  getEnvironmentRoles(
    email: String
    projectId: ID
    workspaceId: String
  ): [SystemEnvironmentRoleList]
  getInvitationIdeaQuery(id: ID!): SystemGetInvitationIdeaResponse
  ideaDetails(demoMode: Boolean, ideaId: ID!): SystemIdeaDetailsResponse
  ideaMembers(id: String!): SystemMembersIdeaList
  ideaSectionDetails(
    ideaId: ID!
    packageIdea: ID!
    sectionCategory: ID!
  ): SystemIdeaDetailsResponse
  ideasDemoListQuery: SystemIdeaUserResponse
  ideasListQuery: SystemIdeaUserResponse
  ideasUserListQuery(organizationId: String): SystemIdeaUserResponse
  inboxEventsList(
    filter: InboxEventsListFilter
    first: Int
    skip: Int
  ): SystemInboxEventsListResponse
  introspection: IntrospectionQueryResponse
  logs(
    applicationId: String
    endTime: DateTime
    functionName: String!
    limit: Int
    startTime: DateTime
  ): [String]
    @deprecated(reason: "No longer supported. Use `system.logsList` instead.")
  logsList(
    applicationId: String
    endTime: DateTime
    functionName: String!
    limit: Int
    startTime: DateTime
  ): [SystemCloudLogsEntry]
    @deprecated(
      reason: "No longer supported. Use `system.logsListFiltered` instead."
    )
  logsListFiltered(
    endTime: DateTime
    filter: String
    limit: Int
    resource: String
    startTime: DateTime
    startToken: String
  ): SystemLogsListFilteredResponse
  memberAccount: SystemMemberAccountInfo
  memberAccountFromEmail(email: String!): SystemMemberAccountInfo
  memberBillingHistory(
    first: Int
    hideOrganizationInvoices: Boolean
    skip: Int
  ): SystemBillingInvoicesListResponse!
  memberFromOrganization(id: String!): SystemMemberOrganizationAccountInfo
  memberInvitation(id: String!): SystemMemberInvitation
  memberInvitationsList: SystemMemberInvitationsList
  memberPaymentDetails: SystemPaymentDetailsResponse
  membersByOrganization(organizationId: String!): SystemMembersAccountList
  organizationBillingHistory(
    first: Int
    hideWorkspaceInvoices: Boolean
    organizationId: ID!
    skip: Int
  ): SystemBillingInvoicesListResponse!
  organizationBillingPlan(organizationId: ID!): SystemBillingCurrentPlanResponse
  organizationById(organizationId: String!): SystemOrganizationItem
  organizationInvitationById(
    invitationId: String!
  ): SystemOrganizationInvitation
  organizationPaymentDetails(organizationId: ID!): SystemPaymentDetailsResponse
  organizationsListByArchieUser: SystemOrganizationsListArchieResponse
  organizationsListByUser: SystemOrganizationsListResponse
  partnerListQuery: SystemPartnerResponse
  projectDeployments(projectId: ID!): SystemProjectDeploymentsResponse
  projectFrontend(projectId: ID!): SystemProjectFrontendResponse
  projectInfoDetails(projectId: ID!): SystemProjectUserDetailsResponse
  projectPlan(projectId: ID!): SystemProjectPlanResponse
  projectQuotas(projectId: ID!): SystemProjectQuotasResponse
  projectsUserListQuery(organizationId: ID): SystemProjectUserResponse
  promptListQuery: SystemPromptsResponse
  table(id: ID, name: String): SystemTable
  tableField(id: ID!): SystemTableField
  tablesList(filter: SystemTableListFilter): SystemTableListResponse!
  userBillingConfiguration(
    filterPlanProjects: Boolean
    kind: String
    organizationId: ID
    region: String
  ): SystemUserBillingConfigurationResponse!
  userBillingConfigurationArchie(
    ideaId: ID
    kind: String
    organizationId: ID
    region: String
  ): SystemUserBillingConfigurationResponse!
  userInvitationsList: SystemUserInvitationList
  viewDryRun(sql: String!): SystemViewDryRunOutput
  workspaceName: String
  workspacePaymentDetails(projectId: ID): SystemPaymentDetailsResponse
  workspacesFrontendList: SystemWorkspaceListResponse
  workspacesList: SystemWorkspaceListResponse
}

"""
Relation
"""
type SystemRelation {
  refField: SystemTableField
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTable: SystemTable!
  relationFieldName: String
  relationTableName: String
}

"""
Relation Create Input
"""
input SystemRelationCreateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean!
  refFieldIsRequired: Boolean!
  refFieldName: String
  refTableId: ID!
}

"""
Relation Update Input
"""
input SystemRelationUpdateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTableId: ID
}

"""
Schema Origin
"""
type SystemSchemaOrigin {
  provider: String
  type: SystemSchemaOriginType!
}

"""
Schema Origin Type Enum
"""
enum SystemSchemaOriginType {
  LOCAL
  REMOTE
  VIEW
}

input SystemSectionResultCreateMutationInput {
  archieId: ID!
  composedPrompt: JSON!
  content: JSON!
  cost: Float
  custom: Boolean
  executionTime: Int
  failureReason: JSON
  id: ID
  isRegenerate: Boolean
  lLMApiCalls: Int
  modelId: ID!
  package: String!
  prompt: ID!
  provisionalData: Boolean
  sectionCategory: String!
  status: SystemStatusIdea
  tokensInput: Int
  tokensOutput: Int
}

input SystemSectionResultGenerateMutationInput {
  archieId: ID!
  contextData: JSON
  idea: ID!
  iterableID: String
  package: String!
  provisionalData: Boolean
  sectionCategories: [String]
}

input SystemSectionResultPropagateUpdateMutationInput {
  archieId: ID!
  content: JSON!
  package: String!
  sectionCategory: String!
}

type SystemSectionResultResponse {
  sectionId: ID!
  sectionResultId: ID!
}

input SystemSectionResultUpdateMutationInput {
  archieId: ID!
  overviewId: String
  package: String!
  sectionCategories: [JSON]
}

"""
Smart Field Attributes
"""
type SystemSmartFieldTypeAttributes {
  format: String!
  innerFields: [SystemCustomTableField]
}

"""
Smart Type Format Enum
"""
enum SystemSmartTypeFormatEnum {
  ADDRESS
  PHONE
}

"""
StatusIdea
"""
enum SystemStatusIdea {
  Completed
  Locked
  NeedsAttention
  Open
}

"""
Switch Field Attributes
"""
type SystemSwitchFieldTypeAttributes {
  format: String!
  listOptions: [String]
}

"""
Switch Type Format Enum
"""
enum SystemSwitchTypeFormatEnum {
  ACTIVE_INACTIVE
  CUSTOM
  HIGH_LOW
  ON_OFF
  TRUE_FALSE
  YES_NO
}

"""
Table
"""
type SystemTable {
  application: SystemApplication
  attributes: SystemTableAttributes
  dataFeatures: SystemTableDataFeatures!
  description: String
  displayName: String
  fields: [SystemTableField!]
  fieldsForIndexing: [SystemTableField]
  id: ID!
  indexes: [SystemTableIndex!]
  isSystem: Boolean!
  name: String!
  origin: SystemSchemaOrigin!
  schemaFeatures: SystemTableSchemaFeatures!
}

"""
Table Attributes
"""
union SystemTableAttributes = SystemViewAttributes

"""
Table Create Input
"""
input SystemTableCreateInput {
  applicationId: String
  description: String
  displayName: String
  name: String!
}

"""
Table Data Features
"""
type SystemTableDataFeatures {
  create: Boolean!
  delete: Boolean!
  update: Boolean!
}

"""
Table Delete Input
"""
input SystemTableDeleteInput {
  id: ID!
}

"""
TableField
"""
type SystemTableField {
  computedMode: SystemComputedFieldMode
  dataFeatures: SystemFieldDataFeatures!
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType!
  fieldTypeAttributes: SystemFieldTypeAttributes
  id: ID!
  isList: Boolean!
  isMeta: Boolean!
  isRequired: Boolean!
  isSystem: Boolean!
  isUnique: Boolean
  name: String!
  origin: SystemSchemaOrigin!
  relation: SystemRelation
  schemaFeatures: SystemFieldSchemaFeatures!
  table: SystemTable!
}

"""
Table Field Create Input
"""
input SystemTableFieldCreateInput {
  computedMode: SystemComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType!
  fieldTypeAttributes: SystemFieldTypeAttributesInput
  force: Boolean
  initialValue: String
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String!
  position: Int
  relation: SystemRelationCreateInput
  tableId: ID!
}

"""
Table Field Delete Input
"""
input SystemTableFieldDeleteInput {
  id: ID!
}

"""
Table Field Position Update Input
"""
input SystemTableFieldPositionUpdateInput {
  id: ID!
  newPosition: Int!
}

"""
Table Field Update Input
"""
input SystemTableFieldUpdateInput {
  computedMode: SystemComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType
  fieldTypeAttributes: SystemFieldTypeAttributesInput
  force: Boolean
  id: ID!
  initialValue: String
  isList: Boolean
  isRequired: Boolean
  isUnique: Boolean
  name: String
  position: Int
  relation: SystemRelationUpdateInput
}

"""
Table Index
"""
type SystemTableIndex {
  columns: [SystemTableIndexColumn!]
  id: ID!
  isSystem: Boolean!
  name: String
  table: SystemTable!
  type: String!
}

"""
Table Index Column
"""
type SystemTableIndexColumn {
  name: String!
}

"""
Table Index Column Input
"""
input SystemTableIndexColumnInput {
  name: String!
}

"""
Table List Application Filter
"""
input SystemTableListApplicationFilter {
  id: String
  name: String
}

"""
Table List Filter
"""
input SystemTableListFilter {
  applications: [SystemTableListApplicationFilter]
  onlyUserTables: Boolean
  tableNames: [String]
}

"""
Table List Response
"""
type SystemTableListResponse {
  count: Int
  items: [SystemTable]
}

"""
Table Schema Create Features
"""
type SystemTableSchemaCreateFeatures {
  DATE: Boolean!
  FILE: Boolean!
  GEO: Boolean!
  ID: Boolean!
  JSON: Boolean!
  MISSING_RELATION: Boolean!
  NUMBER: Boolean!
  ONE_WAY_RELATION: Boolean!
  RELATION: Boolean!
  SMART: Boolean!
  SWITCH: Boolean!
  TEXT: Boolean!
  UUID: Boolean!
}

"""
Table Schema Features
"""
type SystemTableSchemaFeatures {
  computedFields: Boolean!
  create: SystemTableSchemaCreateFeatures!
  update: SystemTableSchemaMetaFieldFeatures
}

"""
Table Schema Meta Field Features
"""
type SystemTableSchemaMetaFieldFeatures {
  displayName: Boolean!
  name: Boolean!
}

"""
Table Update Input
"""
input SystemTableUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
}

"""
Team Invitation Details
"""
type SystemTeamInvitationDetails {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: SystemInvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

"""
Text Field Attributes
"""
type SystemTextFieldTypeAttributes {
  fieldSize: Int
  format: String!
}

"""
Text Type Format Enum
"""
enum SystemTextTypeFormatEnum {
  EIN
  EMAIL
  HTML
  MARKDOWN
  NAME
  UNFORMATTED
}

input SystemTransferIdeaOwnerMutationInput {
  email: String!
  ideaId: ID!
}

"""
UUID Field Attributes
"""
type SystemUUIDFieldTypeAttributes {
  fieldSize: Int
}

type SystemUserBillingConfigurationResponse {
  availablePlans: [SystemBillingPlanBaseInfo!]!
  isCancelSubscriptionAvailable: Boolean!
    @deprecated(reason: "Flag is deprecated")
  isFreePlanAvailable: Boolean! @deprecated(reason: "Flag is deprecated")
}

"""
User Invitation Details
"""
type SystemUserInvitationDetails {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: SystemInvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

"""
User Invitation List
"""
type SystemUserInvitationList {
  count: Int
  items: [SystemUserInvitationDetails]
}

"""
User Type
"""
enum SystemUserType {
  Agency
  Corporation
  MyOwn
  Team
}

"""
View Attributes
"""
type SystemViewAttributes {
  query: String
}

"""
View Create Input
"""
input SystemViewCreateInput {
  description: String
  displayName: String
  name: String!
  query: String!
}

"""
Dry Run Response for previewing SQL Views
"""
type SystemViewDryRunOutput {
  count: Int
  items: JSON
  timeMs: Int
}

"""
View Update Input
"""
input SystemViewUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
  query: String
}

"""
WorkspaceCreateMutationInput
"""
input SystemWorkspaceCreateMutationInput {
  authType: String
  description: String
  howStart: String
  image: GraphQLCreateFileItemInput
  kind: SystemWorkspaceKind
  name: String!
  organizationId: ID
  profileId: String
  projectId: ID
}

type SystemWorkspaceCreateResponse {
  description: String
  id: ID
  kind: String
  name: String
}

"""
WorkspaceDeleteMutationInput
"""
input SystemWorkspaceDeleteMutationInput {
  workspaceId: ID!
}

type SystemWorkspaceImage {
  downloadUrl: String
  id: String
}

type SystemWorkspaceItem {
  apiHost: String
  createdAt: DateTime
  description: String
  id: ID!
  image: SystemWorkspaceImage
  is8BaseAuthEnabled: Boolean
  isCiCdEnabled: Boolean
  isOwner: Boolean!
  kind: String
  lastAccess: DateTime
  lastDeployABInfo: SystemDeploymentABItemResponse
  name: String!
  nextPlan: SystemBillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  owner: SystemMemberAccountInfo
  plan: SystemBillingCurrentPlanResponse
  project: SystemProjectItemWS
  region: String
  summaryABInfo: SystemFrontendUtilizationABResponse
  teamMemberCount: Int
  webSocket: String
}

"""
Workspace Kind
"""
enum SystemWorkspaceKind {
  frontend
  general
}

"""
SystemWorkspaceListResponse output
"""
type SystemWorkspaceListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [SystemWorkspaceItem!]!
}

enum SystemWorkspaceStatus {
  active
  blocked
  canceled
  canceling
  pending
  suspended
}

"""
WorkspaceUpdateMutationInput
"""
input SystemWorkspaceUpdateMutationInput {
  description: String
  id: ID!
  image: GraphQLCreateFileItemInput
  name: String
}

type SystemWorkspaceUpdateResponse {
  description: String
  id: ID
  image: GraphQLFileItemResponse
  name: String
}

"""
Table
"""
type Table {
  application: Application
  attributes: TableAttributes
  dataFeatures: TableDataFeatures!
  description: String
  displayName: String
  fields: [TableField!]
  fieldsForIndexing: [TableField]
  id: ID!
  indexes: [TableIndex!]
  isSystem: Boolean!
  name: String!
  origin: SchemaOrigin!
  schemaFeatures: TableSchemaFeatures!
}

"""
Table Attributes
"""
union TableAttributes = ViewAttributes

"""
Table Create Input
"""
input TableCreateInput {
  applicationId: String
  description: String
  displayName: String
  name: String!
}

"""
Table Data Features
"""
type TableDataFeatures {
  create: Boolean!
  delete: Boolean!
  update: Boolean!
}

"""
Table Delete Input
"""
input TableDeleteInput {
  id: ID!
}

"""
TableField
"""
type TableField {
  computedMode: ComputedFieldMode
  dataFeatures: FieldDataFeatures!
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType!
  fieldTypeAttributes: FieldTypeAttributes
  id: ID!
  isList: Boolean!
  isMeta: Boolean!
  isRequired: Boolean!
  isSystem: Boolean!
  isUnique: Boolean
  name: String!
  origin: SchemaOrigin!
  relation: Relation
  schemaFeatures: FieldSchemaFeatures!
  table: Table!
}

"""
Table Field Create Input
"""
input TableFieldCreateInput {
  computedMode: ComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType!
  fieldTypeAttributes: FieldTypeAttributesInput
  force: Boolean
  initialValue: String
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String!
  position: Int
  relation: RelationCreateInput
  tableId: ID!
}

"""
Table Field Delete Input
"""
input TableFieldDeleteInput {
  id: ID!
}

"""
Table Field Position Update Input
"""
input TableFieldPositionUpdateInput {
  id: ID!
  newPosition: Int!
}

"""
Table Field Update Input
"""
input TableFieldUpdateInput {
  computedMode: ComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType
  fieldTypeAttributes: FieldTypeAttributesInput
  force: Boolean
  id: ID!
  initialValue: String
  isList: Boolean
  isRequired: Boolean
  isUnique: Boolean
  name: String
  position: Int
  relation: RelationUpdateInput
}

"""
Table Index
"""
type TableIndex {
  columns: [TableIndexColumn!]
  id: ID!
  isSystem: Boolean!
  name: String
  table: Table!
  type: String!
}

"""
Table Index Column
"""
type TableIndexColumn {
  name: String!
}

"""
Table Index Column Input
"""
input TableIndexColumnInput {
  name: String!
}

enum TableIndexType {
  INDEX
  UNIQUE
}

"""
Table List Application Filter
"""
input TableListApplicationFilter {
  id: String
  name: String
}

"""
Table List Filter
"""
input TableListFilter {
  applications: [TableListApplicationFilter]
  onlyUserTables: Boolean
  tableNames: [String]
}

"""
Table List Response
"""
type TableListResponse {
  count: Int
  items: [Table]
}

"""
Table Schema Create Features
"""
type TableSchemaCreateFeatures {
  DATE: Boolean!
  FILE: Boolean!
  GEO: Boolean!
  ID: Boolean!
  JSON: Boolean!
  MISSING_RELATION: Boolean!
  NUMBER: Boolean!
  ONE_WAY_RELATION: Boolean!
  RELATION: Boolean!
  SMART: Boolean!
  SWITCH: Boolean!
  TEXT: Boolean!
  UUID: Boolean!
}

"""
Table Schema Features
"""
type TableSchemaFeatures {
  computedFields: Boolean!
  create: TableSchemaCreateFeatures!
  update: TableSchemaMetaFieldFeatures
}

"""
Table Schema Meta Field Features
"""
type TableSchemaMetaFieldFeatures {
  displayName: Boolean!
  name: Boolean!
}

"""
Table Update Input
"""
input TableUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
}

"""
Text Field Attributes
"""
type TextFieldTypeAttributes {
  fieldSize: Int
  format: String!
}

"""
Text Type Format Enum
"""
enum TextTypeFormatEnum {
  EIN
  EMAIL
  HTML
  MARKDOWN
  NAME
  UNFORMATTED
}

"""
A time string at UTC, such as `16:15:30Z`, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Time

input TrimFunctionArguments {
  mode: StringTrimMode
  str: String!
}

"""
UUID Field Attributes
"""
type UUIDFieldTypeAttributes {
  fieldSize: Int
}

input UpdateByFilterBooleanSwitchInput {
  invert: Boolean
  set: Boolean
}

input UpdateByFilterIntInput {
  add: Int
  div: Int
  mod: Int
  mult: Int
  pow: Int
  prec: Int
  set: Int
  sqrt: Boolean
  sub: Int
}

input UpdateByFilterJsonInput {
  set: JSON
}

input UpdateByFilterListStringInput {
  insert: UpdateByFilterListStringInsertOperationInput
  push: [String]
  remove: [Int]
  removeValue: String
  set: [String]
  swap: [Int]
  unshift: [String]
}

input UpdateByFilterListStringInsertOperationInput {
  start: Int!
  values: [String!]!
}

input UpdateByFilterStringInput {
  postfix: String
  prefix: String
  set: String
}

input UpdateByFilterStringSwitchInput {
  set: String
}

"""
UpdatedFieldsFilter
"""
input UpdatedFieldsFilter {
  contains: [String]
  every: [String]
}

type UploadcareSignInfoResponse {
  expire: String!
  publicKey: String!
  signature: String!
}

type User {
  BuildingProfile: BuildingProfile
  MaintenanceRecord: MaintenanceRecord
  Notification: Notification
  Report: Report
  SearchCriteria: SearchCriterion
  WorkOrder: WorkOrder
  _description: String
  avatar: File
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  email: String
  firstName: String
  id: ID
  is8base: Boolean
  lastName: String
  origin: String
  permissions(filter: PermissionInputFilter): UserPermissionList
  roles(
    after: String
    before: String
    filter: RoleFilter
    first: Int
    groupBy: RoleGroupBy
    last: Int
    orderBy: [RoleOrderBy]
    skip: Int
    sort: [RoleSort!]
  ): RoleListResponse
  status: String
  timezone: String
  updatedAt: DateTime
}

type UserBillingConfigurationResponse {
  availablePlans: [BillingPlanBaseInfo!]!
  isCancelSubscriptionAvailable: Boolean!
    @deprecated(reason: "Flag is deprecated")
  isFreePlanAvailable: Boolean! @deprecated(reason: "Flag is deprecated")
}

"""
Users create input
"""
input UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput
  MaintenanceRecord: UsersMaintenanceRecordRelationInput
  Notification: UsersNotificationRelationInput
  Report: UsersReportRelationInput
  SearchCriteria: UsersSearchCriteriaRelationInput
  WorkOrder: UsersWorkOrderRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users create many input
"""
input UserCreateManyInput {
  BuildingProfile: UsersBuildingProfileManyRelationInput!
  MaintenanceRecord: UsersMaintenanceRecordManyRelationInput!
  Notification: UsersNotificationManyRelationInput!
  Report: UsersReportManyRelationInput!
  SearchCriteria: UsersSearchCriteriaManyRelationInput!
  WorkOrder: UsersWorkOrderManyRelationInput!
  avatar: UsersAvatarManyRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesManyRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users delete input
"""
input UserDeleteInput {
  force: Boolean
  id: ID
}

"""
UserFieldsPermissions create input
"""
input UserFieldsPermissions {
  createdAt: Boolean
  email: Boolean
  firstName: Boolean
  is8base: Boolean
  lastName: Boolean
  origin: Boolean
  status: Boolean
  timezone: Boolean
  updatedAt: Boolean
}

input UserFilter {
  AND: [UserFilter!]
  BuildingProfile: BuildingProfileFilter
  MaintenanceRecord: MaintenanceRecordFilter
  Notification: NotificationFilter
  OR: [UserFilter!]
  Report: ReportFilter
  SearchCriteria: SearchCriterionFilter
  WorkOrder: WorkOrderFilter
  _fullText: String
  avatar: FileFilter
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  email: StringPredicate
  firstName: StringPredicate
  id: IDPredicate
  is8base: BoolPredicate
  is_self: Boolean
  lastName: StringPredicate
  not_self: Boolean
  origin: StringPredicate
  roles: RoleRelationFilter
  status: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
}

input UserGroupBy {
  first: Int
  having: Having
  last: Int
  query: UserGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input UserGroupByQuery {
  BuildingProfile: BuildingProfileGroupByQuery
  MaintenanceRecord: MaintenanceRecordGroupByQuery
  Notification: NotificationGroupByQuery
  Report: ReportGroupByQuery
  SearchCriteria: SearchCriterionGroupByQuery
  WorkOrder: WorkOrderGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  avatar: FileGroupByQuery
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  email: [GroupByField!]
  firstName: [GroupByField!]
  id: [GroupByField!]
  is8base: [GroupByField!]
  lastName: [GroupByField!]
  origin: [GroupByField!]
  roles: RoleGroupByQuery
  status: [GroupByField!]
  timezone: [GroupByField!]
  updatedAt: [GroupByField!]
}

"""
User Invitation Details
"""
type UserInvitationDetails {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: InvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

"""
User Invitation List
"""
type UserInvitationList {
  count: Int
  items: [UserInvitationDetails]
}

input UserKeyFilter {
  email: String
  id: ID
}

"""
UserListResponse output
"""
type UserListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [User!]!
}

"""
UserLoginInput
"""
input UserLoginInput {
  authProfileId: ID
  email: String!
  fromInvitation: String
  password: String!
}

"""
UserManyResponse output
"""
type UserManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [User!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum UserOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  is8base_ASC
  is8base_DESC
  isOwner_ASC
  isOwner_DESC
  lastName_ASC
  lastName_DESC
  origin_ASC
  origin_DESC
  status_ASC
  status_DESC
  timezone_ASC
  timezone_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
Users subscription payload
"""
type UserPayload {
  mutation: MutationType!
  node: User
  previousValues: User
  updatedFields: [String]
}

"""
User Permission
"""
type UserPermission {
  permission: JSON
  resource: String
  resourceType: String
}

"""
User Permission List
"""
type UserPermissionList {
  count: Int!
  items: [UserPermission!]
}

input UserRelationFilter {
  every: UserFilter
  none: UserFilter
  some: UserFilter
}

input UserSort {
  BuildingProfile: BuildingProfileSort
  MaintenanceRecord: MaintenanceRecordSort
  Notification: NotificationSort
  Report: ReportSort
  SearchCriteria: SearchCriterionSort
  WorkOrder: WorkOrderSort
  avatar: FileSort
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  is8base: SortOrder
  lastName: SortOrder
  origin: SortOrder
  status: SortOrder
  timezone: SortOrder
  updatedAt: SortOrder
}

"""
Users subscription filter
"""
input UserSubscriptionFilter {
  mutation_in: [MutationType]
  node: UserFilter
  updatedFields: UpdatedFieldsFilter
}

"""
Users update input
"""
input UserUpdateByFilterInput {
  email: [UpdateByFilterStringInput]
  firstName: [UpdateByFilterStringInput]
  is8base: [UpdateByFilterBooleanSwitchInput]
  isOwner: [UpdateByFilterBooleanSwitchInput]
  lastName: [UpdateByFilterStringInput]
  origin: [UpdateByFilterStringSwitchInput]
  status: [UpdateByFilterStringSwitchInput]
  timezone: [UpdateByFilterStringInput]
}

"""
Users update input
"""
input UserUpdateInput {
  BuildingProfile: UsersBuildingProfileUpdateRelationInput
  MaintenanceRecord: UsersMaintenanceRecordUpdateRelationInput
  Notification: UsersNotificationUpdateRelationInput
  Report: UsersReportUpdateRelationInput
  SearchCriteria: UsersSearchCriteriaUpdateRelationInput
  WorkOrder: UsersWorkOrderUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  id: ID
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

input User_PermissionFilter {
  AND: [User_PermissionFilter!]
  BuildingProfile: BuildingProfile_PermissionFilter
  MaintenanceRecord: MaintenanceRecord_PermissionFilter
  Notification: Notification_PermissionFilter
  OR: [User_PermissionFilter!]
  Report: Report_PermissionFilter
  SearchCriteria: SearchCriterion_PermissionFilter
  WorkOrder: WorkOrder_PermissionFilter
  _fullText: String
  avatar: File_PermissionFilter
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  email: StringPredicate
  firstName: StringPredicate
  id: IDPredicate
  is8base: BoolPredicate
  is_self: Boolean
  lastName: StringPredicate
  not_self: Boolean
  origin: StringPredicate
  roles: Role_PermissionRelationFilter
  status: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
}

input User_PermissionRelationFilter {
  every: User_PermissionFilter
  none: User_PermissionFilter
  some: User_PermissionFilter
}

"""
Notification create input from user_id
"""
input User_id_NotificationCreateInput {
  created_date: DateTime
  message: String
  read: Boolean
  type: String
  user_id: NotificationUser_idRelationInput
}

"""
Notification update input from user_id
"""
input User_id_NotificationUpdateInput {
  created_date: DateTime
  message: String
  read: Boolean
  type: String
  user_id: NotificationUser_idUpdateRelationInput
}

"""
Report create input from user_id
"""
input User_id_ReportCreateInput {
  configuration: JSON
  description: String
  file: ReportFileRelationInput
  generated_date: DateTime
  name: String
  user_id: ReportUser_idRelationInput
}

"""
Report update input from user_id
"""
input User_id_ReportUpdateInput {
  configuration: JSON
  description: String
  file: ReportFileUpdateRelationInput
  generated_date: DateTime
  name: String
  user_id: ReportUser_idUpdateRelationInput
}

"""
SearchCriteria create input from user_id
"""
input User_id_SearchCriterionCreateInput {
  created_date: DateTime
  criteria: JSON
  last_modified_date: DateTime
  name: String
  user_id: SearchCriteriaUser_idRelationInput
}

"""
SearchCriteria update input from user_id
"""
input User_id_SearchCriterionUpdateInput {
  created_date: DateTime
  criteria: JSON
  last_modified_date: DateTime
  name: String
  user_id: SearchCriteriaUser_idUpdateRelationInput
}

"""
Users relation input
"""
input UsersAvatarManyRelationInput {
  connect: FileKeyFilter
}

"""
Users relation input
"""
input UsersAvatarRelationInput {
  connect: FileKeyFilter
  create: Users_avatar_FileCreateInput
}

"""
Users relation input
"""
input UsersAvatarUpdateRelationInput {
  connect: FileKeyFilter
  create: Users_avatar_FileCreateInput
  disconnect: FileKeyFilter
  reconnect: FileKeyFilter
  update: Users_avatar_FileUpdateInput
}

"""
Users relation input
"""
input UsersBuildingProfileManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
Users relation input
"""
input UsersBuildingProfileRelationInput {
  connect: BuildingProfileKeyFilter
  create: Owner_id_BuildingProfileCreateInput
}

"""
Users relation input
"""
input UsersBuildingProfileUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: Owner_id_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: Owner_id_BuildingProfileUpdateInput
}

"""
Users relation input
"""
input UsersMaintenanceRecordManyRelationInput {
  connect: MaintenanceRecordKeyFilter
}

"""
Users relation input
"""
input UsersMaintenanceRecordRelationInput {
  connect: MaintenanceRecordKeyFilter
  create: Vendor_id_MaintenanceRecordCreateInput
}

"""
Users relation input
"""
input UsersMaintenanceRecordUpdateRelationInput {
  connect: MaintenanceRecordKeyFilter
  create: Vendor_id_MaintenanceRecordCreateInput
  disconnect: MaintenanceRecordKeyFilter
  reconnect: MaintenanceRecordKeyFilter
  update: Vendor_id_MaintenanceRecordUpdateInput
}

"""
Users relation input
"""
input UsersNotificationManyRelationInput {
  connect: NotificationKeyFilter
}

"""
Users relation input
"""
input UsersNotificationRelationInput {
  connect: NotificationKeyFilter
  create: User_id_NotificationCreateInput
}

"""
Users relation input
"""
input UsersNotificationUpdateRelationInput {
  connect: NotificationKeyFilter
  create: User_id_NotificationCreateInput
  disconnect: NotificationKeyFilter
  reconnect: NotificationKeyFilter
  update: User_id_NotificationUpdateInput
}

"""
Users relation input
"""
input UsersReportManyRelationInput {
  connect: ReportKeyFilter
}

"""
Users relation input
"""
input UsersReportRelationInput {
  connect: ReportKeyFilter
  create: User_id_ReportCreateInput
}

"""
Users relation input
"""
input UsersReportUpdateRelationInput {
  connect: ReportKeyFilter
  create: User_id_ReportCreateInput
  disconnect: ReportKeyFilter
  reconnect: ReportKeyFilter
  update: User_id_ReportUpdateInput
}

"""
Users relation input
"""
input UsersRolesManyRelationInput {
  connect: [RoleKeyFilter!]
}

"""
Users relation input
"""
input UsersRolesRelationInput {
  connect: [RoleKeyFilter!]
  create: [Users_RoleCreateInput]
}

"""
Users relation input
"""
input UsersRolesUpdateRelationInput {
  connect: [RoleKeyFilter!]
  create: [Users_RoleCreateInput]
  disconnect: [RoleKeyFilter!]
  reconnect: [RoleKeyFilter!]
  update: [Users_RoleUpdateInput]
}

"""
Users relation input
"""
input UsersSearchCriteriaManyRelationInput {
  connect: SearchCriterionKeyFilter
}

"""
Users relation input
"""
input UsersSearchCriteriaRelationInput {
  connect: SearchCriterionKeyFilter
  create: User_id_SearchCriterionCreateInput
}

"""
Users relation input
"""
input UsersSearchCriteriaUpdateRelationInput {
  connect: SearchCriterionKeyFilter
  create: User_id_SearchCriterionCreateInput
  disconnect: SearchCriterionKeyFilter
  reconnect: SearchCriterionKeyFilter
  update: User_id_SearchCriterionUpdateInput
}

"""
Users relation input
"""
input UsersWorkOrderManyRelationInput {
  connect: WorkOrderKeyFilter
}

"""
Users relation input
"""
input UsersWorkOrderRelationInput {
  connect: WorkOrderKeyFilter
  create: Vendor_id_WorkOrderCreateInput
}

"""
Users relation input
"""
input UsersWorkOrderUpdateRelationInput {
  connect: WorkOrderKeyFilter
  create: Vendor_id_WorkOrderCreateInput
  disconnect: WorkOrderKeyFilter
  reconnect: WorkOrderKeyFilter
  update: Vendor_id_WorkOrderUpdateInput
}

"""
Roles create input from users
"""
input Users_RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""
Roles update input from users
"""
input Users_RoleUpdateInput {
  data: RoleUpdateInput!
  filter: RoleKeyFilter
}

"""
Files create input from users_avatar
"""
input Users_avatar_FileCreateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  report_file: FilesReport_fileRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileRelationInput
  users_avatar: FilesUsers_avatarRelationInput
}

"""
Files update input from users_avatar
"""
input Users_avatar_FileUpdateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean
  report_file: FilesReport_fileUpdateRelationInput
  siteDocumentation_document_file: FilesSiteDocumentation_document_fileUpdateRelationInput
  users_avatar: FilesUsers_avatarUpdateRelationInput
}

"""
MaintenanceRecord create input from vendor_id
"""
input Vendor_id_MaintenanceRecordCreateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idRelationInput
}

"""
MaintenanceRecord update input from vendor_id
"""
input Vendor_id_MaintenanceRecordUpdateInput {
  BuildingProfile: MaintenanceRecordBuildingProfileUpdateRelationInput
  building_profile_id: MaintenanceRecordBuilding_profile_idUpdateRelationInput
  date_performed: DateTime
  description: String
  vendor_id: MaintenanceRecordVendor_idUpdateRelationInput
}

"""
WorkOrder create input from vendor_id
"""
input Vendor_id_WorkOrderCreateInput {
  building_profile_id: WorkOrderBuilding_profile_idRelationInput
  completion_date: DateTime
  created_date: DateTime
  description: String
  priority: String
  status: String
  vendor_id: WorkOrderVendor_idRelationInput
}

"""
WorkOrder update input from vendor_id
"""
input Vendor_id_WorkOrderUpdateInput {
  building_profile_id: WorkOrderBuilding_profile_idUpdateRelationInput
  completion_date: DateTime
  created_date: DateTime
  description: String
  priority: String
  status: String
  vendor_id: WorkOrderVendor_idUpdateRelationInput
}

"""
VerificationEmailResendInput
"""
input VerificationEmailResendInput {
  email: String!
}

"""
View Attributes
"""
type ViewAttributes {
  query: String
}

"""
View Create Input
"""
input ViewCreateInput {
  description: String
  displayName: String
  name: String!
  query: String!
}

"""
Dry Run Response for previewing SQL Views
"""
type ViewDryRunOutput {
  count: Int
  items: JSON
  timeMs: Int
}

"""
View Update Input
"""
input ViewUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
  query: String
}

"""
Information about work orders issued for maintenance tasks.
"""
type WorkOrder {
  _description: String
  building_profile_id: BuildingProfile
  completion_date: DateTime
  createdAt: DateTime
  created_date: DateTime
  deletedAt: Int
  description: String
  id: ID
  priority: String
  status: String
  updatedAt: DateTime
  vendor_id: User
}

"""
WorkOrder relation input
"""
input WorkOrderBuilding_profile_idManyRelationInput {
  connect: BuildingProfileKeyFilter
}

"""
WorkOrder relation input
"""
input WorkOrderBuilding_profile_idRelationInput {
  connect: BuildingProfileKeyFilter
  create: WorkOrder_BuildingProfileCreateInput
}

"""
WorkOrder relation input
"""
input WorkOrderBuilding_profile_idUpdateRelationInput {
  connect: BuildingProfileKeyFilter
  create: WorkOrder_BuildingProfileCreateInput
  disconnect: BuildingProfileKeyFilter
  reconnect: BuildingProfileKeyFilter
  update: WorkOrder_BuildingProfileUpdateInput
}

"""
WorkOrder create input
"""
input WorkOrderCreateInput {
  building_profile_id: WorkOrderBuilding_profile_idRelationInput
  completion_date: DateTime
  created_date: DateTime
  description: String
  priority: String
  status: String
  vendor_id: WorkOrderVendor_idRelationInput
}

"""
WorkOrder create many input
"""
input WorkOrderCreateManyInput {
  building_profile_id: WorkOrderBuilding_profile_idManyRelationInput
  completion_date: DateTime
  created_date: DateTime
  description: String
  priority: String
  status: String
  vendor_id: WorkOrderVendor_idManyRelationInput
}

"""
WorkOrder delete input
"""
input WorkOrderDeleteInput {
  force: Boolean
  id: ID
}

"""
WorkOrderFieldsPermissions create input
"""
input WorkOrderFieldsPermissions {
  completion_date: Boolean
  createdAt: Boolean
  created_date: Boolean
  description: Boolean
  priority: Boolean
  status: Boolean
  updatedAt: Boolean
}

input WorkOrderFilter {
  AND: [WorkOrderFilter!]
  OR: [WorkOrderFilter!]
  _fullText: String
  building_profile_id: BuildingProfileFilter
  completion_date: DateTimePredicate
  createdAt: DateTimePredicate
  created_date: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  priority: StringPredicate
  status: StringPredicate
  updatedAt: DateTimePredicate
  vendor_id: UserFilter
}

input WorkOrderGroupBy {
  first: Int
  having: Having
  last: Int
  query: WorkOrderGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input WorkOrderGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  building_profile_id: BuildingProfileGroupByQuery
  completion_date: [GroupByField!]
  createdAt: [GroupByField!]
  created_date: [GroupByField!]
  description: [GroupByField!]
  id: [GroupByField!]
  priority: [GroupByField!]
  status: [GroupByField!]
  updatedAt: [GroupByField!]
  vendor_id: UserGroupByQuery
}

input WorkOrderKeyFilter {
  id: ID
}

"""
WorkOrderListResponse output
"""
type WorkOrderListResponse {
  """
  List items count
  """
  count: Int!

  """
  Aggregated items
  """
  groups: [GroupByResponse!]!

  """
  List items
  """
  items: [WorkOrder!]!
}

"""
WorkOrderManyResponse output
"""
type WorkOrderManyResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [WorkOrder!]!
}

"""
No longer supported. Use `sort` instead.
"""
enum WorkOrderOrderBy {
  completion_date_ASC
  completion_date_DESC
  createdAt_ASC
  createdAt_DESC
  created_date_ASC
  created_date_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  priority_ASC
  priority_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
WorkOrder subscription payload
"""
type WorkOrderPayload {
  mutation: MutationType!
  node: WorkOrder
  previousValues: WorkOrder
  updatedFields: [String]
}

input WorkOrderSort {
  building_profile_id: BuildingProfileSort
  completion_date: SortOrder
  createdAt: SortOrder
  created_date: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  id: SortOrder
  priority: SortOrder
  status: SortOrder
  updatedAt: SortOrder
  vendor_id: UserSort
}

"""
WorkOrder subscription filter
"""
input WorkOrderSubscriptionFilter {
  mutation_in: [MutationType]
  node: WorkOrderFilter
  updatedFields: UpdatedFieldsFilter
}

"""
WorkOrder update input
"""
input WorkOrderUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
  priority: [UpdateByFilterStringInput]
  status: [UpdateByFilterStringInput]
}

"""
WorkOrder update input
"""
input WorkOrderUpdateInput {
  building_profile_id: WorkOrderBuilding_profile_idUpdateRelationInput
  completion_date: DateTime
  created_date: DateTime
  description: String
  id: ID
  priority: String
  status: String
  vendor_id: WorkOrderVendor_idUpdateRelationInput
}

"""
WorkOrder relation input
"""
input WorkOrderVendor_idManyRelationInput {
  connect: UserKeyFilter
}

"""
WorkOrder relation input
"""
input WorkOrderVendor_idRelationInput {
  connect: UserKeyFilter
  create: WorkOrder_UserCreateInput
}

"""
WorkOrder relation input
"""
input WorkOrderVendor_idUpdateRelationInput {
  connect: UserKeyFilter
  create: WorkOrder_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: WorkOrder_UserUpdateInput
}

"""
BuildingProfile create input from WorkOrder
"""
input WorkOrder_BuildingProfileCreateInput {
  Certification: BuildingProfileCertificationRelationInput!
  ComplianceRecord: BuildingProfileComplianceRecordRelationInput!
  EnergyEfficiency: BuildingProfileEnergyEfficiencyRelationInput!
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationRelationInput!
  EquipmentInventory: BuildingProfileEquipmentInventoryRelationInput!
  Improvement: BuildingProfileImprovementRelationInput!
  IndoorAirQuality: BuildingProfileIndoorAirQualityRelationInput!
  MaintenanceRecord: BuildingProfileMaintenanceRecordRelationInput
  Permit: BuildingProfilePermitRelationInput!
  SiteDocumentation: BuildingProfileSiteDocumentationRelationInput!
  WorkOrder: BuildingProfileWorkOrderRelationInput
  address: String
  certification: BuildingProfileCertificationRelationInput
  compliance_record: BuildingProfileCompliance_recordRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyRelationInput
  environmental_information: BuildingProfileEnvironmental_informationRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryRelationInput
  improvements: BuildingProfileImprovementsRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsRelationInput
  name: String
  owner_id: BuildingProfileOwner_idRelationInput
  site_documentation: BuildingProfileSite_documentationRelationInput
}

"""
BuildingProfile update input from WorkOrder
"""
input WorkOrder_BuildingProfileUpdateInput {
  Certification: BuildingProfileCertificationUpdateRelationInput
  ComplianceRecord: BuildingProfileComplianceRecordUpdateRelationInput
  EnergyEfficiency: BuildingProfileEnergyEfficiencyUpdateRelationInput
  EnvironmentalInformation: BuildingProfileEnvironmentalInformationUpdateRelationInput
  EquipmentInventory: BuildingProfileEquipmentInventoryUpdateRelationInput
  Improvement: BuildingProfileImprovementUpdateRelationInput
  IndoorAirQuality: BuildingProfileIndoorAirQualityUpdateRelationInput
  MaintenanceRecord: BuildingProfileMaintenanceRecordUpdateRelationInput
  Permit: BuildingProfilePermitUpdateRelationInput
  SiteDocumentation: BuildingProfileSiteDocumentationUpdateRelationInput
  WorkOrder: BuildingProfileWorkOrderUpdateRelationInput
  address: String
  certification: BuildingProfileCertificationUpdateRelationInput
  compliance_record: BuildingProfileCompliance_recordUpdateRelationInput
  demographics: JSON
  energy_efficiency: BuildingProfileEnergy_efficiencyUpdateRelationInput
  environmental_information: BuildingProfileEnvironmental_informationUpdateRelationInput
  equipment_inventory: BuildingProfileEquipment_inventoryUpdateRelationInput
  improvements: BuildingProfileImprovementsUpdateRelationInput
  indoor_air_quality: BuildingProfileIndoor_air_qualityUpdateRelationInput
  maintenance_records: BuildingProfileMaintenance_recordsUpdateRelationInput
  name: String
  owner_id: BuildingProfileOwner_idUpdateRelationInput
  site_documentation: BuildingProfileSite_documentationUpdateRelationInput
}

input WorkOrder_PermissionFilter {
  AND: [WorkOrder_PermissionFilter!]
  OR: [WorkOrder_PermissionFilter!]
  _fullText: String
  building_profile_id: BuildingProfile_PermissionFilter
  completion_date: DateTimePredicate
  createdAt: DateTimePredicate
  created_date: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  priority: StringPredicate
  status: StringPredicate
  updatedAt: DateTimePredicate
  vendor_id: User_PermissionFilter
}

"""
Users create input from WorkOrder
"""
input WorkOrder_UserCreateInput {
  BuildingProfile: UsersBuildingProfileRelationInput
  MaintenanceRecord: UsersMaintenanceRecordRelationInput
  Notification: UsersNotificationRelationInput!
  Report: UsersReportRelationInput!
  SearchCriteria: UsersSearchCriteriaRelationInput!
  WorkOrder: UsersWorkOrderRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""
Users update input from WorkOrder
"""
input WorkOrder_UserUpdateInput {
  BuildingProfile: UsersBuildingProfileUpdateRelationInput
  MaintenanceRecord: UsersMaintenanceRecordUpdateRelationInput
  Notification: UsersNotificationUpdateRelationInput
  Report: UsersReportUpdateRelationInput
  SearchCriteria: UsersSearchCriteriaUpdateRelationInput
  WorkOrder: UsersWorkOrderUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

"""
WorkspaceCreateMutationInput
"""
input WorkspaceCreateMutationInput {
  authType: String
  description: String
  howStart: String
  image: GraphQLCreateFileItemInput
  kind: WorkspaceKind
  name: String!
  organizationId: ID
  profileId: String
  projectId: ID
}

type WorkspaceCreateResponse {
  description: String
  id: ID
  kind: String
  name: String
}

"""
WorkspaceDeleteMutationInput
"""
input WorkspaceDeleteMutationInput {
  workspaceId: ID!
}

type WorkspaceImage {
  downloadUrl: String
  id: String
}

"""
LoginResponseWorkspace name and id
"""
type WorkspaceInfo {
  name: String
  workspace: ID
}

type WorkspaceItem {
  apiHost: String
  createdAt: DateTime
  description: String
  id: ID!
  image: WorkspaceImage
  is8BaseAuthEnabled: Boolean
  isCiCdEnabled: Boolean
  isOwner: Boolean!
  kind: String
  lastAccess: DateTime
  lastDeployABInfo: DeploymentABItemResponse
  name: String!
  nextPlan: BillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  owner: SystemMemberAccountInfo
  plan: BillingCurrentPlanResponse
  project: ProjectItemWS
  region: String
  summaryABInfo: FrontendUtilizationABResponse
  teamMemberCount: Int
  webSocket: String
}

"""
Workspace Kind
"""
enum WorkspaceKind {
  frontend
  general
}

"""
WorkspaceListResponse output
"""
type WorkspaceListResponse {
  """
  List items count
  """
  count: Int!

  """
  List items
  """
  items: [WorkspaceItem!]!
}

enum WorkspaceStatus {
  active
  blocked
  canceled
  canceling
  pending
  suspended
}

"""
WorkspaceUpdateMutationInput
"""
input WorkspaceUpdateMutationInput {
  description: String
  id: ID!
  image: GraphQLCreateFileItemInput
  name: String
}

type WorkspaceUpdateResponse {
  description: String
  id: ID
  image: GraphQLFileItemResponse
  name: String
}

type isAllowedCallbackURLQueryResponse {
  isEnabled: Boolean!
}
